import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource schema for AWS Route53 Recovery Control basic constructs and validation rules.
 */
export declare class SafetyRule extends pulumi.CustomResource {
    /**
     * Get an existing SafetyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SafetyRule;
    /**
     * Returns true if the given object is an instance of SafetyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SafetyRule;
    readonly assertionRule: pulumi.Output<outputs.route53recoverycontrol.SafetyRuleAssertionRule | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     */
    readonly controlPanelArn: pulumi.Output<string | undefined>;
    readonly gatingRule: pulumi.Output<outputs.route53recoverycontrol.SafetyRuleGatingRule | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    readonly ruleConfig: pulumi.Output<outputs.route53recoverycontrol.SafetyRuleRuleConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the safety rule.
     */
    readonly safetyRuleArn: pulumi.Output<string>;
    /**
     * The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    readonly status: pulumi.Output<enums.route53recoverycontrol.SafetyRuleStatus>;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags: pulumi.Output<outputs.route53recoverycontrol.SafetyRuleTag[] | undefined>;
    /**
     * Create a SafetyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SafetyRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SafetyRule resource.
 */
export interface SafetyRuleArgs {
    assertionRule?: pulumi.Input<inputs.route53recoverycontrol.SafetyRuleAssertionRuleArgs>;
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     */
    controlPanelArn?: pulumi.Input<string>;
    gatingRule?: pulumi.Input<inputs.route53recoverycontrol.SafetyRuleGatingRuleArgs>;
    name?: pulumi.Input<string>;
    ruleConfig?: pulumi.Input<inputs.route53recoverycontrol.SafetyRuleRuleConfigArgs>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.route53recoverycontrol.SafetyRuleTagArgs>[]>;
}
