import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * AWS Route53 Recovery Control Routing Control resource schema .
 */
export declare class RoutingControl extends pulumi.CustomResource {
    /**
     * Get an existing RoutingControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoutingControl;
    /**
     * Returns true if the given object is an instance of RoutingControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RoutingControl;
    /**
     * Arn associated with Control Panel
     */
    readonly clusterArn: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     */
    readonly controlPanelArn: pulumi.Output<string | undefined>;
    /**
     * The name of the routing control. You can use any non-white space character in the name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the routing control.
     */
    readonly routingControlArn: pulumi.Output<string>;
    /**
     * The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    readonly status: pulumi.Output<enums.route53recoverycontrol.RoutingControlStatus>;
    /**
     * Create a RoutingControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutingControlArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RoutingControl resource.
 */
export interface RoutingControlArgs {
    /**
     * Arn associated with Control Panel
     */
    clusterArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     */
    controlPanelArn?: pulumi.Input<string>;
    /**
     * The name of the routing control. You can use any non-white space character in the name.
     */
    name?: pulumi.Input<string>;
}
