import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Create and manage Multicast groups.
 */
export declare class MulticastGroup extends pulumi.CustomResource {
    /**
     * Get an existing MulticastGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MulticastGroup;
    /**
     * Returns true if the given object is an instance of MulticastGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MulticastGroup;
    /**
     * Multicast group arn. Returned after successful create.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    readonly associateWirelessDevice: pulumi.Output<string | undefined>;
    /**
     * Multicast group description
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    readonly disassociateWirelessDevice: pulumi.Output<string | undefined>;
    /**
     * Multicast group LoRaWAN
     */
    readonly loRaWAN: pulumi.Output<outputs.iotwireless.MulticastGroupLoRaWAN>;
    /**
     * Name of Multicast group
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Multicast group status. Returned after successful read.
     */
    readonly status: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the Multicast group.
     */
    readonly tags: pulumi.Output<outputs.iotwireless.MulticastGroupTag[] | undefined>;
    /**
     * Create a MulticastGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MulticastGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MulticastGroup resource.
 */
export interface MulticastGroupArgs {
    /**
     * Wireless device to associate. Only for update request.
     */
    associateWirelessDevice?: pulumi.Input<string>;
    /**
     * Multicast group description
     */
    description?: pulumi.Input<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    disassociateWirelessDevice?: pulumi.Input<string>;
    /**
     * Multicast group LoRaWAN
     */
    loRaWAN: pulumi.Input<inputs.iotwireless.MulticastGroupLoRaWANArgs>;
    /**
     * Name of Multicast group
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the Multicast group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iotwireless.MulticastGroupTagArgs>[]>;
}
