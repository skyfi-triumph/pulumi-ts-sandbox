import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::EC2::Instance
 *
 * @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance;
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Instance;
    readonly additionalInfo: pulumi.Output<string | undefined>;
    readonly affinity: pulumi.Output<string | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly blockDeviceMappings: pulumi.Output<outputs.ec2.InstanceBlockDeviceMapping[] | undefined>;
    readonly cpuOptions: pulumi.Output<outputs.ec2.InstanceCpuOptions | undefined>;
    readonly creditSpecification: pulumi.Output<outputs.ec2.InstanceCreditSpecification | undefined>;
    readonly disableApiTermination: pulumi.Output<boolean | undefined>;
    readonly ebsOptimized: pulumi.Output<boolean | undefined>;
    readonly elasticGpuSpecifications: pulumi.Output<outputs.ec2.InstanceElasticGpuSpecification[] | undefined>;
    readonly elasticInferenceAccelerators: pulumi.Output<outputs.ec2.InstanceElasticInferenceAccelerator[] | undefined>;
    readonly enclaveOptions: pulumi.Output<outputs.ec2.InstanceEnclaveOptions | undefined>;
    readonly hibernationOptions: pulumi.Output<outputs.ec2.InstanceHibernationOptions | undefined>;
    readonly hostId: pulumi.Output<string | undefined>;
    readonly hostResourceGroupArn: pulumi.Output<string | undefined>;
    readonly iamInstanceProfile: pulumi.Output<string | undefined>;
    readonly imageId: pulumi.Output<string | undefined>;
    readonly instanceInitiatedShutdownBehavior: pulumi.Output<string | undefined>;
    readonly instanceType: pulumi.Output<string | undefined>;
    readonly ipv6AddressCount: pulumi.Output<number | undefined>;
    readonly ipv6Addresses: pulumi.Output<outputs.ec2.InstanceIpv6Address[] | undefined>;
    readonly kernelId: pulumi.Output<string | undefined>;
    readonly keyName: pulumi.Output<string | undefined>;
    readonly launchTemplate: pulumi.Output<outputs.ec2.InstanceLaunchTemplateSpecification | undefined>;
    readonly licenseSpecifications: pulumi.Output<outputs.ec2.InstanceLicenseSpecification[] | undefined>;
    readonly monitoring: pulumi.Output<boolean | undefined>;
    readonly networkInterfaces: pulumi.Output<outputs.ec2.InstanceNetworkInterface[] | undefined>;
    readonly placementGroupName: pulumi.Output<string | undefined>;
    readonly privateDnsName: pulumi.Output<string>;
    readonly privateIp: pulumi.Output<string>;
    readonly privateIpAddress: pulumi.Output<string | undefined>;
    readonly publicDnsName: pulumi.Output<string>;
    readonly publicIp: pulumi.Output<string>;
    readonly ramdiskId: pulumi.Output<string | undefined>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly securityGroups: pulumi.Output<string[] | undefined>;
    readonly sourceDestCheck: pulumi.Output<boolean | undefined>;
    readonly ssmAssociations: pulumi.Output<outputs.ec2.InstanceSsmAssociation[] | undefined>;
    readonly subnetId: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.ec2.InstanceTag[] | undefined>;
    readonly tenancy: pulumi.Output<string | undefined>;
    readonly userData: pulumi.Output<string | undefined>;
    readonly volumes: pulumi.Output<outputs.ec2.InstanceVolume[] | undefined>;
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    additionalInfo?: pulumi.Input<string>;
    affinity?: pulumi.Input<string>;
    availabilityZone?: pulumi.Input<string>;
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceBlockDeviceMappingArgs>[]>;
    cpuOptions?: pulumi.Input<inputs.ec2.InstanceCpuOptionsArgs>;
    creditSpecification?: pulumi.Input<inputs.ec2.InstanceCreditSpecificationArgs>;
    disableApiTermination?: pulumi.Input<boolean>;
    ebsOptimized?: pulumi.Input<boolean>;
    elasticGpuSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceElasticGpuSpecificationArgs>[]>;
    elasticInferenceAccelerators?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceElasticInferenceAcceleratorArgs>[]>;
    enclaveOptions?: pulumi.Input<inputs.ec2.InstanceEnclaveOptionsArgs>;
    hibernationOptions?: pulumi.Input<inputs.ec2.InstanceHibernationOptionsArgs>;
    hostId?: pulumi.Input<string>;
    hostResourceGroupArn?: pulumi.Input<string>;
    iamInstanceProfile?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceIpv6AddressArgs>[]>;
    kernelId?: pulumi.Input<string>;
    keyName?: pulumi.Input<string>;
    launchTemplate?: pulumi.Input<inputs.ec2.InstanceLaunchTemplateSpecificationArgs>;
    licenseSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceLicenseSpecificationArgs>[]>;
    monitoring?: pulumi.Input<boolean>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceNetworkInterfaceArgs>[]>;
    placementGroupName?: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    ramdiskId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    sourceDestCheck?: pulumi.Input<boolean>;
    ssmAssociations?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceSsmAssociationArgs>[]>;
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceTagArgs>[]>;
    tenancy?: pulumi.Input<string>;
    userData?: pulumi.Input<string>;
    volumes?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceVolumeArgs>[]>;
}
