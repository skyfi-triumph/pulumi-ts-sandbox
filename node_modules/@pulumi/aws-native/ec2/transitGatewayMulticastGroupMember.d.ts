import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
 */
export declare class TransitGatewayMulticastGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayMulticastGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransitGatewayMulticastGroupMember;
    /**
     * Returns true if the given object is an instance of TransitGatewayMulticastGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransitGatewayMulticastGroupMember;
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    readonly groupIpAddress: pulumi.Output<string>;
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    readonly groupMember: pulumi.Output<boolean>;
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    readonly groupSource: pulumi.Output<boolean>;
    /**
     * The member type (for example, static).
     */
    readonly memberType: pulumi.Output<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    readonly networkInterfaceId: pulumi.Output<string>;
    /**
     * The ID of the resource.
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * The type of resource, for example a VPC attachment.
     */
    readonly resourceType: pulumi.Output<string>;
    /**
     * The source type.
     */
    readonly sourceType: pulumi.Output<string>;
    /**
     * The ID of the subnet.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    readonly transitGatewayAttachmentId: pulumi.Output<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    readonly transitGatewayMulticastDomainId: pulumi.Output<string>;
    /**
     * Create a TransitGatewayMulticastGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayMulticastGroupMemberArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TransitGatewayMulticastGroupMember resource.
 */
export interface TransitGatewayMulticastGroupMemberArgs {
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    groupIpAddress: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
