import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * Resource Type definition for AWS::EC2::VPCEndpoint
 */
export declare class VPCEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing VPCEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VPCEndpoint;
    /**
     * Returns true if the given object is an instance of VPCEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VPCEndpoint;
    readonly creationTimestamp: pulumi.Output<string>;
    readonly dnsEntries: pulumi.Output<string[]>;
    readonly networkInterfaceIds: pulumi.Output<string[]>;
    /**
     * A policy to attach to the endpoint that controls access to the service.
     */
    readonly policyDocument: pulumi.Output<string | undefined>;
    /**
     * Indicate whether to associate a private hosted zone with the specified VPC.
     */
    readonly privateDnsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * One or more route table IDs.
     */
    readonly routeTableIds: pulumi.Output<string[] | undefined>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * The service name.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    readonly subnetIds: pulumi.Output<string[] | undefined>;
    readonly vpcEndpointType: pulumi.Output<enums.ec2.VPCEndpointVpcEndpointType | undefined>;
    /**
     * The ID of the VPC in which the endpoint will be used.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a VPCEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VPCEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VPCEndpoint resource.
 */
export interface VPCEndpointArgs {
    /**
     * A policy to attach to the endpoint that controls access to the service.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * Indicate whether to associate a private hosted zone with the specified VPC.
     */
    privateDnsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more route table IDs.
     */
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The service name.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    vpcEndpointType?: pulumi.Input<enums.ec2.VPCEndpointVpcEndpointType>;
    /**
     * The ID of the VPC in which the endpoint will be used.
     */
    vpcId: pulumi.Input<string>;
}
