"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EC2Fleet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::EC2::EC2Fleet
 */
class EC2Fleet extends pulumi.CustomResource {
    /**
     * Create a EC2Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.launchTemplateConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'launchTemplateConfigs'");
            }
            if ((!args || args.targetCapacitySpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetCapacitySpecification'");
            }
            inputs["context"] = args ? args.context : undefined;
            inputs["excessCapacityTerminationPolicy"] = args ? args.excessCapacityTerminationPolicy : undefined;
            inputs["launchTemplateConfigs"] = args ? args.launchTemplateConfigs : undefined;
            inputs["onDemandOptions"] = args ? args.onDemandOptions : undefined;
            inputs["replaceUnhealthyInstances"] = args ? args.replaceUnhealthyInstances : undefined;
            inputs["spotOptions"] = args ? args.spotOptions : undefined;
            inputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            inputs["targetCapacitySpecification"] = args ? args.targetCapacitySpecification : undefined;
            inputs["terminateInstancesWithExpiration"] = args ? args.terminateInstancesWithExpiration : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["validFrom"] = args ? args.validFrom : undefined;
            inputs["validUntil"] = args ? args.validUntil : undefined;
            inputs["fleetId"] = undefined /*out*/;
        }
        else {
            inputs["context"] = undefined /*out*/;
            inputs["excessCapacityTerminationPolicy"] = undefined /*out*/;
            inputs["fleetId"] = undefined /*out*/;
            inputs["launchTemplateConfigs"] = undefined /*out*/;
            inputs["onDemandOptions"] = undefined /*out*/;
            inputs["replaceUnhealthyInstances"] = undefined /*out*/;
            inputs["spotOptions"] = undefined /*out*/;
            inputs["tagSpecifications"] = undefined /*out*/;
            inputs["targetCapacitySpecification"] = undefined /*out*/;
            inputs["terminateInstancesWithExpiration"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["validFrom"] = undefined /*out*/;
            inputs["validUntil"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(EC2Fleet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing EC2Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new EC2Fleet(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EC2Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EC2Fleet.__pulumiType;
    }
}
exports.EC2Fleet = EC2Fleet;
/** @internal */
EC2Fleet.__pulumiType = 'aws-native:ec2:EC2Fleet';
//# sourceMappingURL=ec2fleet.js.map