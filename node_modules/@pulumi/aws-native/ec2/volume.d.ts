import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::EC2::Volume
 *
 * @deprecated Volume is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Volume extends pulumi.CustomResource {
    /**
     * Get an existing Volume resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Volume;
    /**
     * Returns true if the given object is an instance of Volume.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Volume;
    readonly autoEnableIO: pulumi.Output<boolean | undefined>;
    readonly availabilityZone: pulumi.Output<string>;
    readonly encrypted: pulumi.Output<boolean | undefined>;
    readonly iops: pulumi.Output<number | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly multiAttachEnabled: pulumi.Output<boolean | undefined>;
    readonly outpostArn: pulumi.Output<string | undefined>;
    readonly size: pulumi.Output<number | undefined>;
    readonly snapshotId: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.ec2.VolumeTag[] | undefined>;
    readonly throughput: pulumi.Output<number | undefined>;
    readonly volumeType: pulumi.Output<string | undefined>;
    /**
     * Create a Volume resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Volume is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: VolumeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Volume resource.
 */
export interface VolumeArgs {
    autoEnableIO?: pulumi.Input<boolean>;
    availabilityZone: pulumi.Input<string>;
    encrypted?: pulumi.Input<boolean>;
    iops?: pulumi.Input<number>;
    kmsKeyId?: pulumi.Input<string>;
    multiAttachEnabled?: pulumi.Input<boolean>;
    outpostArn?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    snapshotId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.VolumeTagArgs>[]>;
    throughput?: pulumi.Input<number>;
    volumeType?: pulumi.Input<string>;
}
