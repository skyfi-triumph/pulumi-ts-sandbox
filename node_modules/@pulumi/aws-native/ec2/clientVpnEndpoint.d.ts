import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::EC2::ClientVpnEndpoint
 *
 * @deprecated ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class ClientVpnEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ClientVpnEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClientVpnEndpoint;
    /**
     * Returns true if the given object is an instance of ClientVpnEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClientVpnEndpoint;
    readonly authenticationOptions: pulumi.Output<outputs.ec2.ClientVpnEndpointClientAuthenticationRequest[]>;
    readonly clientCidrBlock: pulumi.Output<string>;
    readonly clientConnectOptions: pulumi.Output<outputs.ec2.ClientVpnEndpointClientConnectOptions | undefined>;
    readonly connectionLogOptions: pulumi.Output<outputs.ec2.ClientVpnEndpointConnectionLogOptions>;
    readonly description: pulumi.Output<string | undefined>;
    readonly dnsServers: pulumi.Output<string[] | undefined>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly selfServicePortal: pulumi.Output<string | undefined>;
    readonly serverCertificateArn: pulumi.Output<string>;
    readonly splitTunnel: pulumi.Output<boolean | undefined>;
    readonly tagSpecifications: pulumi.Output<outputs.ec2.ClientVpnEndpointTagSpecification[] | undefined>;
    readonly transportProtocol: pulumi.Output<string | undefined>;
    readonly vpcId: pulumi.Output<string | undefined>;
    readonly vpnPort: pulumi.Output<number | undefined>;
    /**
     * Create a ClientVpnEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ClientVpnEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ClientVpnEndpoint resource.
 */
export interface ClientVpnEndpointArgs {
    authenticationOptions: pulumi.Input<pulumi.Input<inputs.ec2.ClientVpnEndpointClientAuthenticationRequestArgs>[]>;
    clientCidrBlock: pulumi.Input<string>;
    clientConnectOptions?: pulumi.Input<inputs.ec2.ClientVpnEndpointClientConnectOptionsArgs>;
    connectionLogOptions: pulumi.Input<inputs.ec2.ClientVpnEndpointConnectionLogOptionsArgs>;
    description?: pulumi.Input<string>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    selfServicePortal?: pulumi.Input<string>;
    serverCertificateArn: pulumi.Input<string>;
    splitTunnel?: pulumi.Input<boolean>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.ClientVpnEndpointTagSpecificationArgs>[]>;
    transportProtocol?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpnPort?: pulumi.Input<number>;
}
