"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::EC2::Instance
 *
 * @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class Instance extends pulumi.CustomResource {
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("Instance is deprecated: Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["additionalInfo"] = args ? args.additionalInfo : undefined;
            inputs["affinity"] = args ? args.affinity : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            inputs["cpuOptions"] = args ? args.cpuOptions : undefined;
            inputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            inputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            inputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            inputs["elasticGpuSpecifications"] = args ? args.elasticGpuSpecifications : undefined;
            inputs["elasticInferenceAccelerators"] = args ? args.elasticInferenceAccelerators : undefined;
            inputs["enclaveOptions"] = args ? args.enclaveOptions : undefined;
            inputs["hibernationOptions"] = args ? args.hibernationOptions : undefined;
            inputs["hostId"] = args ? args.hostId : undefined;
            inputs["hostResourceGroupArn"] = args ? args.hostResourceGroupArn : undefined;
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceInitiatedShutdownBehavior"] = args ? args.instanceInitiatedShutdownBehavior : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            inputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            inputs["kernelId"] = args ? args.kernelId : undefined;
            inputs["keyName"] = args ? args.keyName : undefined;
            inputs["launchTemplate"] = args ? args.launchTemplate : undefined;
            inputs["licenseSpecifications"] = args ? args.licenseSpecifications : undefined;
            inputs["monitoring"] = args ? args.monitoring : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["placementGroupName"] = args ? args.placementGroupName : undefined;
            inputs["privateIpAddress"] = args ? args.privateIpAddress : undefined;
            inputs["ramdiskId"] = args ? args.ramdiskId : undefined;
            inputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            inputs["securityGroups"] = args ? args.securityGroups : undefined;
            inputs["sourceDestCheck"] = args ? args.sourceDestCheck : undefined;
            inputs["ssmAssociations"] = args ? args.ssmAssociations : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tenancy"] = args ? args.tenancy : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["volumes"] = args ? args.volumes : undefined;
            inputs["privateDnsName"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["publicDnsName"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
        }
        else {
            inputs["additionalInfo"] = undefined /*out*/;
            inputs["affinity"] = undefined /*out*/;
            inputs["availabilityZone"] = undefined /*out*/;
            inputs["blockDeviceMappings"] = undefined /*out*/;
            inputs["cpuOptions"] = undefined /*out*/;
            inputs["creditSpecification"] = undefined /*out*/;
            inputs["disableApiTermination"] = undefined /*out*/;
            inputs["ebsOptimized"] = undefined /*out*/;
            inputs["elasticGpuSpecifications"] = undefined /*out*/;
            inputs["elasticInferenceAccelerators"] = undefined /*out*/;
            inputs["enclaveOptions"] = undefined /*out*/;
            inputs["hibernationOptions"] = undefined /*out*/;
            inputs["hostId"] = undefined /*out*/;
            inputs["hostResourceGroupArn"] = undefined /*out*/;
            inputs["iamInstanceProfile"] = undefined /*out*/;
            inputs["imageId"] = undefined /*out*/;
            inputs["instanceInitiatedShutdownBehavior"] = undefined /*out*/;
            inputs["instanceType"] = undefined /*out*/;
            inputs["ipv6AddressCount"] = undefined /*out*/;
            inputs["ipv6Addresses"] = undefined /*out*/;
            inputs["kernelId"] = undefined /*out*/;
            inputs["keyName"] = undefined /*out*/;
            inputs["launchTemplate"] = undefined /*out*/;
            inputs["licenseSpecifications"] = undefined /*out*/;
            inputs["monitoring"] = undefined /*out*/;
            inputs["networkInterfaces"] = undefined /*out*/;
            inputs["placementGroupName"] = undefined /*out*/;
            inputs["privateDnsName"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["privateIpAddress"] = undefined /*out*/;
            inputs["publicDnsName"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
            inputs["ramdiskId"] = undefined /*out*/;
            inputs["securityGroupIds"] = undefined /*out*/;
            inputs["securityGroups"] = undefined /*out*/;
            inputs["sourceDestCheck"] = undefined /*out*/;
            inputs["ssmAssociations"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["tenancy"] = undefined /*out*/;
            inputs["userData"] = undefined /*out*/;
            inputs["volumes"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Instance.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("Instance is deprecated: Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new Instance(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }
}
exports.Instance = Instance;
/** @internal */
Instance.__pulumiType = 'aws-native:ec2:Instance';
//# sourceMappingURL=instance.js.map