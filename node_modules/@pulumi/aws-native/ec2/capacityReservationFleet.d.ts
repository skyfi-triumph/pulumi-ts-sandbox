import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::EC2::CapacityReservationFleet
 */
export declare class CapacityReservationFleet extends pulumi.CustomResource {
    /**
     * Get an existing CapacityReservationFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CapacityReservationFleet;
    /**
     * Returns true if the given object is an instance of CapacityReservationFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CapacityReservationFleet;
    readonly allocationStrategy: pulumi.Output<string | undefined>;
    readonly capacityReservationFleetId: pulumi.Output<string>;
    readonly endDate: pulumi.Output<string | undefined>;
    readonly instanceMatchCriteria: pulumi.Output<enums.ec2.CapacityReservationFleetInstanceMatchCriteria | undefined>;
    readonly instanceTypeSpecifications: pulumi.Output<outputs.ec2.CapacityReservationFleetInstanceTypeSpecification[] | undefined>;
    readonly noRemoveEndDate: pulumi.Output<boolean | undefined>;
    readonly removeEndDate: pulumi.Output<boolean | undefined>;
    readonly tagSpecifications: pulumi.Output<outputs.ec2.CapacityReservationFleetTagSpecification[] | undefined>;
    readonly tenancy: pulumi.Output<enums.ec2.CapacityReservationFleetTenancy | undefined>;
    readonly totalTargetCapacity: pulumi.Output<number | undefined>;
    /**
     * Create a CapacityReservationFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CapacityReservationFleetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CapacityReservationFleet resource.
 */
export interface CapacityReservationFleetArgs {
    allocationStrategy?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    instanceMatchCriteria?: pulumi.Input<enums.ec2.CapacityReservationFleetInstanceMatchCriteria>;
    instanceTypeSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationFleetInstanceTypeSpecificationArgs>[]>;
    noRemoveEndDate?: pulumi.Input<boolean>;
    removeEndDate?: pulumi.Input<boolean>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationFleetTagSpecificationArgs>[]>;
    tenancy?: pulumi.Input<enums.ec2.CapacityReservationFleetTenancy>;
    totalTargetCapacity?: pulumi.Input<number>;
}
