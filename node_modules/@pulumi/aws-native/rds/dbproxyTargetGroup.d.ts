import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource schema for AWS::RDS::DBProxyTargetGroup
 */
export declare class DBProxyTargetGroup extends pulumi.CustomResource {
    /**
     * Get an existing DBProxyTargetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DBProxyTargetGroup;
    /**
     * Returns true if the given object is an instance of DBProxyTargetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DBProxyTargetGroup;
    readonly connectionPoolConfigurationInfo: pulumi.Output<outputs.rds.DBProxyTargetGroupConnectionPoolConfigurationInfoFormat | undefined>;
    readonly dBClusterIdentifiers: pulumi.Output<string[] | undefined>;
    readonly dBInstanceIdentifiers: pulumi.Output<string[] | undefined>;
    /**
     * The identifier for the proxy.
     */
    readonly dBProxyName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) representing the target group.
     */
    readonly targetGroupArn: pulumi.Output<string>;
    /**
     * The identifier for the DBProxyTargetGroup
     */
    readonly targetGroupName: pulumi.Output<enums.rds.DBProxyTargetGroupTargetGroupName>;
    /**
     * Create a DBProxyTargetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DBProxyTargetGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DBProxyTargetGroup resource.
 */
export interface DBProxyTargetGroupArgs {
    connectionPoolConfigurationInfo?: pulumi.Input<inputs.rds.DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs>;
    dBClusterIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    dBInstanceIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier for the proxy.
     */
    dBProxyName: pulumi.Input<string>;
    /**
     * The identifier for the DBProxyTargetGroup
     */
    targetGroupName: pulumi.Input<enums.rds.DBProxyTargetGroupTargetGroupName>;
}
