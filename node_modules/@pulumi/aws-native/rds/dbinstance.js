"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DBInstance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::RDS::DBInstance
 *
 * @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class DBInstance extends pulumi.CustomResource {
    /**
     * Create a DBInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("DBInstance is deprecated: DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dBInstanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dBInstanceClass'");
            }
            inputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            inputs["allowMajorVersionUpgrade"] = args ? args.allowMajorVersionUpgrade : undefined;
            inputs["associatedRoles"] = args ? args.associatedRoles : undefined;
            inputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            inputs["cACertificateIdentifier"] = args ? args.cACertificateIdentifier : undefined;
            inputs["characterSetName"] = args ? args.characterSetName : undefined;
            inputs["copyTagsToSnapshot"] = args ? args.copyTagsToSnapshot : undefined;
            inputs["dBClusterIdentifier"] = args ? args.dBClusterIdentifier : undefined;
            inputs["dBInstanceClass"] = args ? args.dBInstanceClass : undefined;
            inputs["dBInstanceIdentifier"] = args ? args.dBInstanceIdentifier : undefined;
            inputs["dBName"] = args ? args.dBName : undefined;
            inputs["dBParameterGroupName"] = args ? args.dBParameterGroupName : undefined;
            inputs["dBSecurityGroups"] = args ? args.dBSecurityGroups : undefined;
            inputs["dBSnapshotIdentifier"] = args ? args.dBSnapshotIdentifier : undefined;
            inputs["dBSubnetGroupName"] = args ? args.dBSubnetGroupName : undefined;
            inputs["deleteAutomatedBackups"] = args ? args.deleteAutomatedBackups : undefined;
            inputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            inputs["domain"] = args ? args.domain : undefined;
            inputs["domainIAMRoleName"] = args ? args.domainIAMRoleName : undefined;
            inputs["enableCloudwatchLogsExports"] = args ? args.enableCloudwatchLogsExports : undefined;
            inputs["enableIAMDatabaseAuthentication"] = args ? args.enableIAMDatabaseAuthentication : undefined;
            inputs["enablePerformanceInsights"] = args ? args.enablePerformanceInsights : undefined;
            inputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            inputs["endpointPort"] = args ? args.endpointPort : undefined;
            inputs["engine"] = args ? args.engine : undefined;
            inputs["engineVersion"] = args ? args.engineVersion : undefined;
            inputs["iops"] = args ? args.iops : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["licenseModel"] = args ? args.licenseModel : undefined;
            inputs["masterUserPassword"] = args ? args.masterUserPassword : undefined;
            inputs["masterUsername"] = args ? args.masterUsername : undefined;
            inputs["maxAllocatedStorage"] = args ? args.maxAllocatedStorage : undefined;
            inputs["monitoringInterval"] = args ? args.monitoringInterval : undefined;
            inputs["monitoringRoleArn"] = args ? args.monitoringRoleArn : undefined;
            inputs["multiAZ"] = args ? args.multiAZ : undefined;
            inputs["optionGroupName"] = args ? args.optionGroupName : undefined;
            inputs["performanceInsightsKMSKeyId"] = args ? args.performanceInsightsKMSKeyId : undefined;
            inputs["performanceInsightsRetentionPeriod"] = args ? args.performanceInsightsRetentionPeriod : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            inputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            inputs["processorFeatures"] = args ? args.processorFeatures : undefined;
            inputs["promotionTier"] = args ? args.promotionTier : undefined;
            inputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            inputs["sourceDBInstanceIdentifier"] = args ? args.sourceDBInstanceIdentifier : undefined;
            inputs["sourceRegion"] = args ? args.sourceRegion : undefined;
            inputs["storageEncrypted"] = args ? args.storageEncrypted : undefined;
            inputs["storageType"] = args ? args.storageType : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timezone"] = args ? args.timezone : undefined;
            inputs["useDefaultProcessorFeatures"] = args ? args.useDefaultProcessorFeatures : undefined;
            inputs["vPCSecurityGroups"] = args ? args.vPCSecurityGroups : undefined;
        }
        else {
            inputs["allocatedStorage"] = undefined /*out*/;
            inputs["allowMajorVersionUpgrade"] = undefined /*out*/;
            inputs["associatedRoles"] = undefined /*out*/;
            inputs["autoMinorVersionUpgrade"] = undefined /*out*/;
            inputs["availabilityZone"] = undefined /*out*/;
            inputs["backupRetentionPeriod"] = undefined /*out*/;
            inputs["cACertificateIdentifier"] = undefined /*out*/;
            inputs["characterSetName"] = undefined /*out*/;
            inputs["copyTagsToSnapshot"] = undefined /*out*/;
            inputs["dBClusterIdentifier"] = undefined /*out*/;
            inputs["dBInstanceClass"] = undefined /*out*/;
            inputs["dBInstanceIdentifier"] = undefined /*out*/;
            inputs["dBName"] = undefined /*out*/;
            inputs["dBParameterGroupName"] = undefined /*out*/;
            inputs["dBSecurityGroups"] = undefined /*out*/;
            inputs["dBSnapshotIdentifier"] = undefined /*out*/;
            inputs["dBSubnetGroupName"] = undefined /*out*/;
            inputs["deleteAutomatedBackups"] = undefined /*out*/;
            inputs["deletionProtection"] = undefined /*out*/;
            inputs["domain"] = undefined /*out*/;
            inputs["domainIAMRoleName"] = undefined /*out*/;
            inputs["enableCloudwatchLogsExports"] = undefined /*out*/;
            inputs["enableIAMDatabaseAuthentication"] = undefined /*out*/;
            inputs["enablePerformanceInsights"] = undefined /*out*/;
            inputs["endpointAddress"] = undefined /*out*/;
            inputs["endpointPort"] = undefined /*out*/;
            inputs["engine"] = undefined /*out*/;
            inputs["engineVersion"] = undefined /*out*/;
            inputs["iops"] = undefined /*out*/;
            inputs["kmsKeyId"] = undefined /*out*/;
            inputs["licenseModel"] = undefined /*out*/;
            inputs["masterUserPassword"] = undefined /*out*/;
            inputs["masterUsername"] = undefined /*out*/;
            inputs["maxAllocatedStorage"] = undefined /*out*/;
            inputs["monitoringInterval"] = undefined /*out*/;
            inputs["monitoringRoleArn"] = undefined /*out*/;
            inputs["multiAZ"] = undefined /*out*/;
            inputs["optionGroupName"] = undefined /*out*/;
            inputs["performanceInsightsKMSKeyId"] = undefined /*out*/;
            inputs["performanceInsightsRetentionPeriod"] = undefined /*out*/;
            inputs["port"] = undefined /*out*/;
            inputs["preferredBackupWindow"] = undefined /*out*/;
            inputs["preferredMaintenanceWindow"] = undefined /*out*/;
            inputs["processorFeatures"] = undefined /*out*/;
            inputs["promotionTier"] = undefined /*out*/;
            inputs["publiclyAccessible"] = undefined /*out*/;
            inputs["sourceDBInstanceIdentifier"] = undefined /*out*/;
            inputs["sourceRegion"] = undefined /*out*/;
            inputs["storageEncrypted"] = undefined /*out*/;
            inputs["storageType"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timezone"] = undefined /*out*/;
            inputs["useDefaultProcessorFeatures"] = undefined /*out*/;
            inputs["vPCSecurityGroups"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(DBInstance.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DBInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("DBInstance is deprecated: DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new DBInstance(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DBInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DBInstance.__pulumiType;
    }
}
exports.DBInstance = DBInstance;
/** @internal */
DBInstance.__pulumiType = 'aws-native:rds:DBInstance';
//# sourceMappingURL=dbinstance.js.map