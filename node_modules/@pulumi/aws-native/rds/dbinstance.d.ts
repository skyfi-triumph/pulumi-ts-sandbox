import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::RDS::DBInstance
 *
 * @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class DBInstance extends pulumi.CustomResource {
    /**
     * Get an existing DBInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DBInstance;
    /**
     * Returns true if the given object is an instance of DBInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DBInstance;
    readonly allocatedStorage: pulumi.Output<string | undefined>;
    readonly allowMajorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly associatedRoles: pulumi.Output<outputs.rds.DBInstanceRole[] | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly backupRetentionPeriod: pulumi.Output<number | undefined>;
    readonly cACertificateIdentifier: pulumi.Output<string | undefined>;
    readonly characterSetName: pulumi.Output<string | undefined>;
    readonly copyTagsToSnapshot: pulumi.Output<boolean | undefined>;
    readonly dBClusterIdentifier: pulumi.Output<string | undefined>;
    readonly dBInstanceClass: pulumi.Output<string>;
    readonly dBInstanceIdentifier: pulumi.Output<string | undefined>;
    readonly dBName: pulumi.Output<string | undefined>;
    readonly dBParameterGroupName: pulumi.Output<string | undefined>;
    readonly dBSecurityGroups: pulumi.Output<string[] | undefined>;
    readonly dBSnapshotIdentifier: pulumi.Output<string | undefined>;
    readonly dBSubnetGroupName: pulumi.Output<string | undefined>;
    readonly deleteAutomatedBackups: pulumi.Output<boolean | undefined>;
    readonly deletionProtection: pulumi.Output<boolean | undefined>;
    readonly domain: pulumi.Output<string | undefined>;
    readonly domainIAMRoleName: pulumi.Output<string | undefined>;
    readonly enableCloudwatchLogsExports: pulumi.Output<string[] | undefined>;
    readonly enableIAMDatabaseAuthentication: pulumi.Output<boolean | undefined>;
    readonly enablePerformanceInsights: pulumi.Output<boolean | undefined>;
    readonly endpointAddress: pulumi.Output<string | undefined>;
    readonly endpointPort: pulumi.Output<string | undefined>;
    readonly engine: pulumi.Output<string | undefined>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly iops: pulumi.Output<number | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly licenseModel: pulumi.Output<string | undefined>;
    readonly masterUserPassword: pulumi.Output<string | undefined>;
    readonly masterUsername: pulumi.Output<string | undefined>;
    readonly maxAllocatedStorage: pulumi.Output<number | undefined>;
    readonly monitoringInterval: pulumi.Output<number | undefined>;
    readonly monitoringRoleArn: pulumi.Output<string | undefined>;
    readonly multiAZ: pulumi.Output<boolean | undefined>;
    readonly optionGroupName: pulumi.Output<string | undefined>;
    readonly performanceInsightsKMSKeyId: pulumi.Output<string | undefined>;
    readonly performanceInsightsRetentionPeriod: pulumi.Output<number | undefined>;
    readonly port: pulumi.Output<string | undefined>;
    readonly preferredBackupWindow: pulumi.Output<string | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly processorFeatures: pulumi.Output<outputs.rds.DBInstanceProcessorFeature[] | undefined>;
    readonly promotionTier: pulumi.Output<number | undefined>;
    readonly publiclyAccessible: pulumi.Output<boolean | undefined>;
    readonly sourceDBInstanceIdentifier: pulumi.Output<string | undefined>;
    readonly sourceRegion: pulumi.Output<string | undefined>;
    readonly storageEncrypted: pulumi.Output<boolean | undefined>;
    readonly storageType: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.rds.DBInstanceTag[] | undefined>;
    readonly timezone: pulumi.Output<string | undefined>;
    readonly useDefaultProcessorFeatures: pulumi.Output<boolean | undefined>;
    readonly vPCSecurityGroups: pulumi.Output<string[] | undefined>;
    /**
     * Create a DBInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DBInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DBInstance resource.
 */
export interface DBInstanceArgs {
    allocatedStorage?: pulumi.Input<string>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceRoleArgs>[]>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    cACertificateIdentifier?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    dBClusterIdentifier?: pulumi.Input<string>;
    dBInstanceClass: pulumi.Input<string>;
    dBInstanceIdentifier?: pulumi.Input<string>;
    dBName?: pulumi.Input<string>;
    dBParameterGroupName?: pulumi.Input<string>;
    dBSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    dBSnapshotIdentifier?: pulumi.Input<string>;
    dBSubnetGroupName?: pulumi.Input<string>;
    deleteAutomatedBackups?: pulumi.Input<boolean>;
    deletionProtection?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    domainIAMRoleName?: pulumi.Input<string>;
    enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    enableIAMDatabaseAuthentication?: pulumi.Input<boolean>;
    enablePerformanceInsights?: pulumi.Input<boolean>;
    endpointAddress?: pulumi.Input<string>;
    endpointPort?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    iops?: pulumi.Input<number>;
    kmsKeyId?: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
    masterUserPassword?: pulumi.Input<string>;
    masterUsername?: pulumi.Input<string>;
    maxAllocatedStorage?: pulumi.Input<number>;
    monitoringInterval?: pulumi.Input<number>;
    monitoringRoleArn?: pulumi.Input<string>;
    multiAZ?: pulumi.Input<boolean>;
    optionGroupName?: pulumi.Input<string>;
    performanceInsightsKMSKeyId?: pulumi.Input<string>;
    performanceInsightsRetentionPeriod?: pulumi.Input<number>;
    port?: pulumi.Input<string>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    processorFeatures?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceProcessorFeatureArgs>[]>;
    promotionTier?: pulumi.Input<number>;
    publiclyAccessible?: pulumi.Input<boolean>;
    sourceDBInstanceIdentifier?: pulumi.Input<string>;
    sourceRegion?: pulumi.Input<string>;
    storageEncrypted?: pulumi.Input<boolean>;
    storageType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceTagArgs>[]>;
    timezone?: pulumi.Input<string>;
    useDefaultProcessorFeatures?: pulumi.Input<boolean>;
    vPCSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
}
