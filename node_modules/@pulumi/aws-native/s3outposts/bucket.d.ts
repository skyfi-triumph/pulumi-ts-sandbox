import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type Definition for AWS::S3Outposts::Bucket
 */
export declare class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bucket;
    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Bucket;
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A name for the bucket.
     */
    readonly bucketName: pulumi.Output<string>;
    /**
     * Rules that define how Amazon S3Outposts manages objects during their lifetime.
     */
    readonly lifecycleConfiguration: pulumi.Output<outputs.s3outposts.BucketLifecycleConfiguration | undefined>;
    /**
     * The id of the customer outpost on which the bucket resides.
     */
    readonly outpostId: pulumi.Output<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3Outposts bucket.
     */
    readonly tags: pulumi.Output<outputs.s3outposts.BucketTag[] | undefined>;
    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * A name for the bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Rules that define how Amazon S3Outposts manages objects during their lifetime.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.s3outposts.BucketLifecycleConfigurationArgs>;
    /**
     * The id of the customer outpost on which the bucket resides.
     */
    outpostId: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3Outposts bucket.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.s3outposts.BucketTagArgs>[]>;
}
