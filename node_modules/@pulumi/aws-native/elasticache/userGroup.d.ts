import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * Resource Type definition for AWS::ElastiCache::UserGroup
 */
export declare class UserGroup extends pulumi.CustomResource {
    /**
     * Get an existing UserGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserGroup;
    /**
     * Returns true if the given object is an instance of UserGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserGroup;
    /**
     * The Amazon Resource Name (ARN) of the user account.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Must be redis.
     */
    readonly engine: pulumi.Output<enums.elasticache.UserGroupEngine>;
    /**
     * Indicates user group status. Can be "creating", "active", "modifying", "deleting".
     */
    readonly status: pulumi.Output<string>;
    /**
     * The ID of the user group.
     */
    readonly userGroupId: pulumi.Output<string>;
    /**
     * List of users associated to this user group.
     */
    readonly userIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a UserGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a UserGroup resource.
 */
export interface UserGroupArgs {
    /**
     * Must be redis.
     */
    engine: pulumi.Input<enums.elasticache.UserGroupEngine>;
    /**
     * The ID of the user group.
     */
    userGroupId: pulumi.Input<string>;
    /**
     * List of users associated to this user group.
     */
    userIds?: pulumi.Input<pulumi.Input<string>[]>;
}
