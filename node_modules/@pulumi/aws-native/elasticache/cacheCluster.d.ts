import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ElastiCache::CacheCluster
 *
 * @deprecated CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class CacheCluster extends pulumi.CustomResource {
    /**
     * Get an existing CacheCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CacheCluster;
    /**
     * Returns true if the given object is an instance of CacheCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CacheCluster;
    readonly aZMode: pulumi.Output<string | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly cacheNodeType: pulumi.Output<string>;
    readonly cacheParameterGroupName: pulumi.Output<string | undefined>;
    readonly cacheSecurityGroupNames: pulumi.Output<string[] | undefined>;
    readonly cacheSubnetGroupName: pulumi.Output<string | undefined>;
    readonly clusterName: pulumi.Output<string | undefined>;
    readonly configurationEndpointAddress: pulumi.Output<string | undefined>;
    readonly configurationEndpointPort: pulumi.Output<string | undefined>;
    readonly engine: pulumi.Output<string>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly logDeliveryConfigurations: pulumi.Output<outputs.elasticache.CacheClusterLogDeliveryConfigurationRequest[] | undefined>;
    readonly notificationTopicArn: pulumi.Output<string | undefined>;
    readonly numCacheNodes: pulumi.Output<number>;
    readonly port: pulumi.Output<number | undefined>;
    readonly preferredAvailabilityZone: pulumi.Output<string | undefined>;
    readonly preferredAvailabilityZones: pulumi.Output<string[] | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly redisEndpointAddress: pulumi.Output<string | undefined>;
    readonly redisEndpointPort: pulumi.Output<string | undefined>;
    readonly snapshotArns: pulumi.Output<string[] | undefined>;
    readonly snapshotName: pulumi.Output<string | undefined>;
    readonly snapshotRetentionLimit: pulumi.Output<number | undefined>;
    readonly snapshotWindow: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.elasticache.CacheClusterTag[] | undefined>;
    readonly vpcSecurityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a CacheCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: CacheClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CacheCluster resource.
 */
export interface CacheClusterArgs {
    aZMode?: pulumi.Input<string>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    cacheNodeType: pulumi.Input<string>;
    cacheParameterGroupName?: pulumi.Input<string>;
    cacheSecurityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    cacheSubnetGroupName?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    configurationEndpointAddress?: pulumi.Input<string>;
    configurationEndpointPort?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    logDeliveryConfigurations?: pulumi.Input<pulumi.Input<inputs.elasticache.CacheClusterLogDeliveryConfigurationRequestArgs>[]>;
    notificationTopicArn?: pulumi.Input<string>;
    numCacheNodes: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    preferredAvailabilityZone?: pulumi.Input<string>;
    preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    redisEndpointAddress?: pulumi.Input<string>;
    redisEndpointPort?: pulumi.Input<string>;
    snapshotArns?: pulumi.Input<pulumi.Input<string>[]>;
    snapshotName?: pulumi.Input<string>;
    snapshotRetentionLimit?: pulumi.Input<number>;
    snapshotWindow?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticache.CacheClusterTagArgs>[]>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
