import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ElastiCache::ReplicationGroup
 *
 * @deprecated ReplicationGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class ReplicationGroup extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationGroup;
    /**
     * Returns true if the given object is an instance of ReplicationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReplicationGroup;
    readonly atRestEncryptionEnabled: pulumi.Output<boolean | undefined>;
    readonly authToken: pulumi.Output<string | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly automaticFailoverEnabled: pulumi.Output<boolean | undefined>;
    readonly cacheNodeType: pulumi.Output<string | undefined>;
    readonly cacheParameterGroupName: pulumi.Output<string | undefined>;
    readonly cacheSecurityGroupNames: pulumi.Output<string[] | undefined>;
    readonly cacheSubnetGroupName: pulumi.Output<string | undefined>;
    readonly configurationEndPointAddress: pulumi.Output<string | undefined>;
    readonly configurationEndPointPort: pulumi.Output<string | undefined>;
    readonly engine: pulumi.Output<string | undefined>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly globalReplicationGroupId: pulumi.Output<string | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly logDeliveryConfigurations: pulumi.Output<outputs.elasticache.ReplicationGroupLogDeliveryConfigurationRequest[] | undefined>;
    readonly multiAZEnabled: pulumi.Output<boolean | undefined>;
    readonly nodeGroupConfiguration: pulumi.Output<outputs.elasticache.ReplicationGroupNodeGroupConfiguration[] | undefined>;
    readonly notificationTopicArn: pulumi.Output<string | undefined>;
    readonly numCacheClusters: pulumi.Output<number | undefined>;
    readonly numNodeGroups: pulumi.Output<number | undefined>;
    readonly port: pulumi.Output<number | undefined>;
    readonly preferredCacheClusterAZs: pulumi.Output<string[] | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly primaryClusterId: pulumi.Output<string | undefined>;
    readonly primaryEndPointAddress: pulumi.Output<string | undefined>;
    readonly primaryEndPointPort: pulumi.Output<string | undefined>;
    readonly readEndPointAddresses: pulumi.Output<string | undefined>;
    readonly readEndPointAddressesList: pulumi.Output<string[] | undefined>;
    readonly readEndPointPorts: pulumi.Output<string | undefined>;
    readonly readEndPointPortsList: pulumi.Output<string[] | undefined>;
    readonly readerEndPointAddress: pulumi.Output<string | undefined>;
    readonly readerEndPointPort: pulumi.Output<string | undefined>;
    readonly replicasPerNodeGroup: pulumi.Output<number | undefined>;
    readonly replicationGroupDescription: pulumi.Output<string>;
    readonly replicationGroupId: pulumi.Output<string>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly snapshotArns: pulumi.Output<string[] | undefined>;
    readonly snapshotName: pulumi.Output<string | undefined>;
    readonly snapshotRetentionLimit: pulumi.Output<number | undefined>;
    readonly snapshotWindow: pulumi.Output<string | undefined>;
    readonly snapshottingClusterId: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.elasticache.ReplicationGroupTag[] | undefined>;
    readonly transitEncryptionEnabled: pulumi.Output<boolean | undefined>;
    readonly userGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a ReplicationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ReplicationGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ReplicationGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ReplicationGroup resource.
 */
export interface ReplicationGroupArgs {
    atRestEncryptionEnabled?: pulumi.Input<boolean>;
    authToken?: pulumi.Input<string>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    automaticFailoverEnabled?: pulumi.Input<boolean>;
    cacheNodeType?: pulumi.Input<string>;
    cacheParameterGroupName?: pulumi.Input<string>;
    cacheSecurityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    cacheSubnetGroupName?: pulumi.Input<string>;
    configurationEndPointAddress?: pulumi.Input<string>;
    configurationEndPointPort?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    globalReplicationGroupId?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    logDeliveryConfigurations?: pulumi.Input<pulumi.Input<inputs.elasticache.ReplicationGroupLogDeliveryConfigurationRequestArgs>[]>;
    multiAZEnabled?: pulumi.Input<boolean>;
    nodeGroupConfiguration?: pulumi.Input<pulumi.Input<inputs.elasticache.ReplicationGroupNodeGroupConfigurationArgs>[]>;
    notificationTopicArn?: pulumi.Input<string>;
    numCacheClusters?: pulumi.Input<number>;
    numNodeGroups?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    preferredCacheClusterAZs?: pulumi.Input<pulumi.Input<string>[]>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    primaryClusterId?: pulumi.Input<string>;
    primaryEndPointAddress?: pulumi.Input<string>;
    primaryEndPointPort?: pulumi.Input<string>;
    readEndPointAddresses?: pulumi.Input<string>;
    readEndPointAddressesList?: pulumi.Input<pulumi.Input<string>[]>;
    readEndPointPorts?: pulumi.Input<string>;
    readEndPointPortsList?: pulumi.Input<pulumi.Input<string>[]>;
    readerEndPointAddress?: pulumi.Input<string>;
    readerEndPointPort?: pulumi.Input<string>;
    replicasPerNodeGroup?: pulumi.Input<number>;
    replicationGroupDescription: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    snapshotArns?: pulumi.Input<pulumi.Input<string>[]>;
    snapshotName?: pulumi.Input<string>;
    snapshotRetentionLimit?: pulumi.Input<number>;
    snapshotWindow?: pulumi.Input<string>;
    snapshottingClusterId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticache.ReplicationGroupTagArgs>[]>;
    transitEncryptionEnabled?: pulumi.Input<boolean>;
    userGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
