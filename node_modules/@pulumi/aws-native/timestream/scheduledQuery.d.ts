import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.
 */
export declare class ScheduledQuery extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledQuery;
    /**
     * Returns true if the given object is an instance of ScheduledQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScheduledQuery;
    readonly arn: pulumi.Output<string>;
    readonly clientToken: pulumi.Output<string | undefined>;
    readonly errorReportConfiguration: pulumi.Output<outputs.timestream.ScheduledQueryErrorReportConfiguration>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly notificationConfiguration: pulumi.Output<outputs.timestream.ScheduledQueryNotificationConfiguration>;
    readonly queryString: pulumi.Output<string>;
    /**
     * Configuration for where error reports will be placed, how they will be named, and how they will be encrypted.
     */
    readonly sQErrorReportConfiguration: pulumi.Output<string>;
    /**
     * The KMS key for the scheduled query. If the KMS key is not specified, the database will be encrypted with a Timestream owned KMS key located in the Timestream account.
     */
    readonly sQKmsKeyId: pulumi.Output<string>;
    /**
     * The name for the scheduled query.
     */
    readonly sQName: pulumi.Output<string>;
    /**
     * Configuration for notification upon scheduled query execution.
     */
    readonly sQNotificationConfiguration: pulumi.Output<string>;
    /**
     * The query scheduled to be executed.
     */
    readonly sQQueryString: pulumi.Output<string>;
    /**
     * Configuration that indicates when the scheduled query is executed.
     */
    readonly sQScheduleConfiguration: pulumi.Output<string>;
    /**
     * Role that AWS Timestream will assume to execute scheduled query.
     */
    readonly sQScheduledQueryExecutionRoleArn: pulumi.Output<string>;
    /**
     * Target data source to export query results from.
     */
    readonly sQTargetConfiguration: pulumi.Output<string>;
    readonly scheduleConfiguration: pulumi.Output<outputs.timestream.ScheduledQueryScheduleConfiguration>;
    readonly scheduledQueryExecutionRoleArn: pulumi.Output<string>;
    readonly scheduledQueryName: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.timestream.ScheduledQueryTag[] | undefined>;
    readonly targetConfiguration: pulumi.Output<outputs.timestream.ScheduledQueryTargetConfiguration | undefined>;
    /**
     * Create a ScheduledQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledQueryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScheduledQuery resource.
 */
export interface ScheduledQueryArgs {
    clientToken?: pulumi.Input<string>;
    errorReportConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryErrorReportConfigurationArgs>;
    kmsKeyId?: pulumi.Input<string>;
    notificationConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryNotificationConfigurationArgs>;
    queryString: pulumi.Input<string>;
    scheduleConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryScheduleConfigurationArgs>;
    scheduledQueryExecutionRoleArn: pulumi.Input<string>;
    scheduledQueryName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryTagArgs>[]>;
    targetConfiguration?: pulumi.Input<inputs.timestream.ScheduledQueryTargetConfigurationArgs>;
}
