import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * This resource schema represents the ResourceCollection resource in the Amazon DevOps Guru.
 */
export declare class ResourceCollection extends pulumi.CustomResource {
    /**
     * Get an existing ResourceCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceCollection;
    /**
     * Returns true if the given object is an instance of ResourceCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceCollection;
    readonly resourceCollectionFilter: pulumi.Output<outputs.devopsguru.ResourceCollectionFilter>;
    /**
     * The type of ResourceCollection
     */
    readonly resourceCollectionType: pulumi.Output<enums.devopsguru.ResourceCollectionType>;
    /**
     * Create a ResourceCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceCollectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResourceCollection resource.
 */
export interface ResourceCollectionArgs {
    resourceCollectionFilter: pulumi.Input<inputs.devopsguru.ResourceCollectionFilterArgs>;
}
