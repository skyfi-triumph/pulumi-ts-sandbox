import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Transfer::Server
 *
 * @deprecated Server is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Server extends pulumi.CustomResource {
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Server;
    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Server;
    readonly arn: pulumi.Output<string>;
    readonly certificate: pulumi.Output<string | undefined>;
    readonly domain: pulumi.Output<string | undefined>;
    readonly endpointDetails: pulumi.Output<outputs.transfer.ServerEndpointDetails | undefined>;
    readonly endpointType: pulumi.Output<string | undefined>;
    readonly identityProviderDetails: pulumi.Output<outputs.transfer.ServerIdentityProviderDetails | undefined>;
    readonly identityProviderType: pulumi.Output<string | undefined>;
    readonly loggingRole: pulumi.Output<string | undefined>;
    readonly protocolDetails: pulumi.Output<outputs.transfer.ServerProtocolDetails | undefined>;
    readonly protocols: pulumi.Output<outputs.transfer.ServerProtocol[] | undefined>;
    readonly securityPolicyName: pulumi.Output<string | undefined>;
    readonly serverId: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.transfer.ServerTag[] | undefined>;
    readonly workflowDetails: pulumi.Output<outputs.transfer.ServerWorkflowDetails | undefined>;
    /**
     * Create a Server resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Server is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: ServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Server resource.
 */
export interface ServerArgs {
    certificate?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    endpointDetails?: pulumi.Input<inputs.transfer.ServerEndpointDetailsArgs>;
    endpointType?: pulumi.Input<string>;
    identityProviderDetails?: pulumi.Input<inputs.transfer.ServerIdentityProviderDetailsArgs>;
    identityProviderType?: pulumi.Input<string>;
    loggingRole?: pulumi.Input<string>;
    protocolDetails?: pulumi.Input<inputs.transfer.ServerProtocolDetailsArgs>;
    protocols?: pulumi.Input<pulumi.Input<inputs.transfer.ServerProtocolArgs>[]>;
    securityPolicyName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.transfer.ServerTagArgs>[]>;
    workflowDetails?: pulumi.Input<inputs.transfer.ServerWorkflowDetailsArgs>;
}
