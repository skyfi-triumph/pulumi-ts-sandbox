import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::Lambda::Url
 *
 * @deprecated Url is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Url extends pulumi.CustomResource {
    /**
     * Get an existing Url resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Url;
    /**
     * Returns true if the given object is an instance of Url.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Url;
    /**
     * The Amazon Resource Name (ARN) of the Function URL.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
     */
    readonly authorizationType: pulumi.Output<enums.lambda.UrlAuthorizationType>;
    readonly cors: pulumi.Output<outputs.lambda.UrlCors | undefined>;
    /**
     * The generated url for this resource.
     */
    readonly functionUrl: pulumi.Output<string>;
    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     */
    readonly qualifier: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    readonly targetFunctionArn: pulumi.Output<string>;
    /**
     * Create a Url resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Url is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: UrlArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Url resource.
 */
export interface UrlArgs {
    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
     */
    authorizationType: pulumi.Input<enums.lambda.UrlAuthorizationType>;
    cors?: pulumi.Input<inputs.lambda.UrlCorsArgs>;
    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    targetFunctionArn: pulumi.Input<string>;
}
