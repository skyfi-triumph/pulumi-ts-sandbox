import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Route53::RecordSet
 *
 * @deprecated RecordSet is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class RecordSet extends pulumi.CustomResource {
    /**
     * Get an existing RecordSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RecordSet;
    /**
     * Returns true if the given object is an instance of RecordSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RecordSet;
    readonly aliasTarget: pulumi.Output<outputs.route53.RecordSetAliasTarget | undefined>;
    readonly comment: pulumi.Output<string | undefined>;
    readonly failover: pulumi.Output<string | undefined>;
    readonly geoLocation: pulumi.Output<outputs.route53.RecordSetGeoLocation | undefined>;
    readonly healthCheckId: pulumi.Output<string | undefined>;
    readonly hostedZoneId: pulumi.Output<string | undefined>;
    readonly hostedZoneName: pulumi.Output<string | undefined>;
    readonly multiValueAnswer: pulumi.Output<boolean | undefined>;
    readonly name: pulumi.Output<string>;
    readonly region: pulumi.Output<string | undefined>;
    readonly resourceRecords: pulumi.Output<string[] | undefined>;
    readonly setIdentifier: pulumi.Output<string | undefined>;
    readonly tTL: pulumi.Output<string | undefined>;
    readonly type: pulumi.Output<string>;
    readonly weight: pulumi.Output<number | undefined>;
    /**
     * Create a RecordSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated RecordSet is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: RecordSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RecordSet resource.
 */
export interface RecordSetArgs {
    aliasTarget?: pulumi.Input<inputs.route53.RecordSetAliasTargetArgs>;
    comment?: pulumi.Input<string>;
    failover?: pulumi.Input<string>;
    geoLocation?: pulumi.Input<inputs.route53.RecordSetGeoLocationArgs>;
    healthCheckId?: pulumi.Input<string>;
    hostedZoneId?: pulumi.Input<string>;
    hostedZoneName?: pulumi.Input<string>;
    multiValueAnswer?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceRecords?: pulumi.Input<pulumi.Input<string>[]>;
    setIdentifier?: pulumi.Input<string>;
    tTL?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}
