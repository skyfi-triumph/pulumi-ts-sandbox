"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./dnssec"), exports);
__exportStar(require("./healthCheck"), exports);
__exportStar(require("./hostedZone"), exports);
__exportStar(require("./keySigningKey"), exports);
__exportStar(require("./recordSet"), exports);
__exportStar(require("./recordSetGroup"), exports);
// Export enums:
__exportStar(require("../types/enums/route53"), exports);
// Import resources to register:
const dnssec_1 = require("./dnssec");
const healthCheck_1 = require("./healthCheck");
const hostedZone_1 = require("./hostedZone");
const keySigningKey_1 = require("./keySigningKey");
const recordSet_1 = require("./recordSet");
const recordSetGroup_1 = require("./recordSetGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:route53:DNSSEC":
                return new dnssec_1.DNSSEC(name, undefined, { urn });
            case "aws-native:route53:HealthCheck":
                return new healthCheck_1.HealthCheck(name, undefined, { urn });
            case "aws-native:route53:HostedZone":
                return new hostedZone_1.HostedZone(name, undefined, { urn });
            case "aws-native:route53:KeySigningKey":
                return new keySigningKey_1.KeySigningKey(name, undefined, { urn });
            case "aws-native:route53:RecordSet":
                return new recordSet_1.RecordSet(name, undefined, { urn });
            case "aws-native:route53:RecordSetGroup":
                return new recordSetGroup_1.RecordSetGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "route53", _module);
//# sourceMappingURL=index.js.map