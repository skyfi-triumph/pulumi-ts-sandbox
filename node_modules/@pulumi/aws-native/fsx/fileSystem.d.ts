import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::FSx::FileSystem
 *
 * @deprecated FileSystem is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FileSystem;
    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FileSystem;
    readonly backupId: pulumi.Output<string | undefined>;
    readonly dNSName: pulumi.Output<string>;
    readonly fileSystemType: pulumi.Output<string>;
    readonly fileSystemTypeVersion: pulumi.Output<string | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly lustreConfiguration: pulumi.Output<outputs.fsx.FileSystemLustreConfiguration | undefined>;
    readonly lustreMountName: pulumi.Output<string>;
    readonly ontapConfiguration: pulumi.Output<outputs.fsx.FileSystemOntapConfiguration | undefined>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly storageCapacity: pulumi.Output<number | undefined>;
    readonly storageType: pulumi.Output<string | undefined>;
    readonly subnetIds: pulumi.Output<string[]>;
    readonly tags: pulumi.Output<outputs.fsx.FileSystemTag[] | undefined>;
    readonly windowsConfiguration: pulumi.Output<outputs.fsx.FileSystemWindowsConfiguration | undefined>;
    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated FileSystem is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    backupId?: pulumi.Input<string>;
    fileSystemType: pulumi.Input<string>;
    fileSystemTypeVersion?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    lustreConfiguration?: pulumi.Input<inputs.fsx.FileSystemLustreConfigurationArgs>;
    ontapConfiguration?: pulumi.Input<inputs.fsx.FileSystemOntapConfigurationArgs>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    storageCapacity?: pulumi.Input<number>;
    storageType?: pulumi.Input<string>;
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.fsx.FileSystemTagArgs>[]>;
    windowsConfiguration?: pulumi.Input<inputs.fsx.FileSystemWindowsConfigurationArgs>;
}
