import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::Config::OrganizationConformancePack.
 */
export declare class OrganizationConformancePack extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationConformancePack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrganizationConformancePack;
    /**
     * Returns true if the given object is an instance of OrganizationConformancePack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OrganizationConformancePack;
    /**
     * A list of ConformancePackInputParameter objects.
     */
    readonly conformancePackInputParameters: pulumi.Output<outputs.configuration.OrganizationConformancePackConformancePackInputParameter[] | undefined>;
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    readonly deliveryS3Bucket: pulumi.Output<string | undefined>;
    /**
     * The prefix for the delivery S3 bucket.
     */
    readonly deliveryS3KeyPrefix: pulumi.Output<string | undefined>;
    /**
     * A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
     */
    readonly excludedAccounts: pulumi.Output<string[] | undefined>;
    /**
     * The name of the organization conformance pack.
     */
    readonly organizationConformancePackName: pulumi.Output<string>;
    /**
     * A string containing full conformance pack template body.
     */
    readonly templateBody: pulumi.Output<string | undefined>;
    /**
     * Location of file containing the template body.
     */
    readonly templateS3Uri: pulumi.Output<string | undefined>;
    /**
     * Create a OrganizationConformancePack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationConformancePackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a OrganizationConformancePack resource.
 */
export interface OrganizationConformancePackArgs {
    /**
     * A list of ConformancePackInputParameter objects.
     */
    conformancePackInputParameters?: pulumi.Input<pulumi.Input<inputs.configuration.OrganizationConformancePackConformancePackInputParameterArgs>[]>;
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    deliveryS3Bucket?: pulumi.Input<string>;
    /**
     * The prefix for the delivery S3 bucket.
     */
    deliveryS3KeyPrefix?: pulumi.Input<string>;
    /**
     * A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
     */
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the organization conformance pack.
     */
    organizationConformancePackName?: pulumi.Input<string>;
    /**
     * A string containing full conformance pack template body.
     */
    templateBody?: pulumi.Input<string>;
    /**
     * Location of file containing the template body.
     */
    templateS3Uri?: pulumi.Input<string>;
}
