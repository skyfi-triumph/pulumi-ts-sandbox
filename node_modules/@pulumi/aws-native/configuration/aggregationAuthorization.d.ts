import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Config::AggregationAuthorization
 */
export declare class AggregationAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing AggregationAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AggregationAuthorization;
    /**
     * Returns true if the given object is an instance of AggregationAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AggregationAuthorization;
    /**
     * The ARN of the AggregationAuthorization.
     */
    readonly aggregationAuthorizationArn: pulumi.Output<string>;
    /**
     * The 12-digit account ID of the account authorized to aggregate data.
     */
    readonly authorizedAccountId: pulumi.Output<string>;
    /**
     * The region authorized to collect aggregated data.
     */
    readonly authorizedAwsRegion: pulumi.Output<string>;
    /**
     * The tags for the AggregationAuthorization.
     */
    readonly tags: pulumi.Output<outputs.configuration.AggregationAuthorizationTag[] | undefined>;
    /**
     * Create a AggregationAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AggregationAuthorizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AggregationAuthorization resource.
 */
export interface AggregationAuthorizationArgs {
    /**
     * The 12-digit account ID of the account authorized to aggregate data.
     */
    authorizedAccountId: pulumi.Input<string>;
    /**
     * The region authorized to collect aggregated data.
     */
    authorizedAwsRegion: pulumi.Input<string>;
    /**
     * The tags for the AggregationAuthorization.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.configuration.AggregationAuthorizationTagArgs>[]>;
}
