"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./aggregationAuthorization"), exports);
__exportStar(require("./configRule"), exports);
__exportStar(require("./configurationAggregator"), exports);
__exportStar(require("./configurationRecorder"), exports);
__exportStar(require("./conformancePack"), exports);
__exportStar(require("./deliveryChannel"), exports);
__exportStar(require("./organizationConfigRule"), exports);
__exportStar(require("./organizationConformancePack"), exports);
__exportStar(require("./remediationConfiguration"), exports);
__exportStar(require("./storedQuery"), exports);
// Import resources to register:
const aggregationAuthorization_1 = require("./aggregationAuthorization");
const configRule_1 = require("./configRule");
const configurationAggregator_1 = require("./configurationAggregator");
const configurationRecorder_1 = require("./configurationRecorder");
const conformancePack_1 = require("./conformancePack");
const deliveryChannel_1 = require("./deliveryChannel");
const organizationConfigRule_1 = require("./organizationConfigRule");
const organizationConformancePack_1 = require("./organizationConformancePack");
const remediationConfiguration_1 = require("./remediationConfiguration");
const storedQuery_1 = require("./storedQuery");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:configuration:AggregationAuthorization":
                return new aggregationAuthorization_1.AggregationAuthorization(name, undefined, { urn });
            case "aws-native:configuration:ConfigRule":
                return new configRule_1.ConfigRule(name, undefined, { urn });
            case "aws-native:configuration:ConfigurationAggregator":
                return new configurationAggregator_1.ConfigurationAggregator(name, undefined, { urn });
            case "aws-native:configuration:ConfigurationRecorder":
                return new configurationRecorder_1.ConfigurationRecorder(name, undefined, { urn });
            case "aws-native:configuration:ConformancePack":
                return new conformancePack_1.ConformancePack(name, undefined, { urn });
            case "aws-native:configuration:DeliveryChannel":
                return new deliveryChannel_1.DeliveryChannel(name, undefined, { urn });
            case "aws-native:configuration:OrganizationConfigRule":
                return new organizationConfigRule_1.OrganizationConfigRule(name, undefined, { urn });
            case "aws-native:configuration:OrganizationConformancePack":
                return new organizationConformancePack_1.OrganizationConformancePack(name, undefined, { urn });
            case "aws-native:configuration:RemediationConfiguration":
                return new remediationConfiguration_1.RemediationConfiguration(name, undefined, { urn });
            case "aws-native:configuration:StoredQuery":
                return new storedQuery_1.StoredQuery(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "configuration", _module);
//# sourceMappingURL=index.js.map