import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Backup::BackupVault
 */
export declare class BackupVault extends pulumi.CustomResource {
    /**
     * Get an existing BackupVault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackupVault;
    /**
     * Returns true if the given object is an instance of BackupVault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BackupVault;
    readonly accessPolicy: pulumi.Output<any | undefined>;
    readonly backupVaultArn: pulumi.Output<string>;
    readonly backupVaultName: pulumi.Output<string>;
    readonly backupVaultTags: pulumi.Output<any | undefined>;
    readonly encryptionKeyArn: pulumi.Output<string | undefined>;
    readonly lockConfiguration: pulumi.Output<outputs.backup.BackupVaultLockConfigurationType | undefined>;
    readonly notifications: pulumi.Output<outputs.backup.BackupVaultNotificationObjectType | undefined>;
    /**
     * Create a BackupVault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BackupVaultArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BackupVault resource.
 */
export interface BackupVaultArgs {
    accessPolicy?: any;
    backupVaultName?: pulumi.Input<string>;
    backupVaultTags?: any;
    encryptionKeyArn?: pulumi.Input<string>;
    lockConfiguration?: pulumi.Input<inputs.backup.BackupVaultLockConfigurationTypeArgs>;
    notifications?: pulumi.Input<inputs.backup.BackupVaultNotificationObjectTypeArgs>;
}
