import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Contains detailed information about a framework. Frameworks contain controls, which evaluate and report on your backup events and resources. Frameworks generate daily compliance results.
 */
export declare class Framework extends pulumi.CustomResource {
    /**
     * Get an existing Framework resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Framework;
    /**
     * Returns true if the given object is an instance of Framework.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Framework;
    /**
     * The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC). The value of `CreationTime` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.
     */
    readonly creationTime: pulumi.Output<number>;
    /**
     * The deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED`
     */
    readonly deploymentStatus: pulumi.Output<string>;
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies Framework as a resource
     */
    readonly frameworkArn: pulumi.Output<string>;
    /**
     * Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.
     */
    readonly frameworkControls: pulumi.Output<outputs.backup.FrameworkControl[]>;
    /**
     * An optional description of the framework with a maximum 1,024 characters.
     */
    readonly frameworkDescription: pulumi.Output<string | undefined>;
    /**
     * The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).
     */
    readonly frameworkName: pulumi.Output<string | undefined>;
    /**
     * A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are:
     *
     * `ACTIVE` when recording is turned on for all resources governed by the framework.
     *
     * `PARTIALLY_ACTIVE` when recording is turned off for at least one resource governed by the framework.
     *
     * `INACTIVE` when recording is turned off for all resources governed by the framework.
     *
     * `UNAVAILABLE` when AWS Backup is unable to validate recording status at this time.
     */
    readonly frameworkStatus: pulumi.Output<string>;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly frameworkTags: pulumi.Output<outputs.backup.FrameworkTag[] | undefined>;
    /**
     * Create a Framework resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrameworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Framework resource.
 */
export interface FrameworkArgs {
    /**
     * Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.
     */
    frameworkControls: pulumi.Input<pulumi.Input<inputs.backup.FrameworkControlArgs>[]>;
    /**
     * An optional description of the framework with a maximum 1,024 characters.
     */
    frameworkDescription?: pulumi.Input<string>;
    /**
     * The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).
     */
    frameworkName?: pulumi.Input<string>;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    frameworkTags?: pulumi.Input<pulumi.Input<inputs.backup.FrameworkTagArgs>[]>;
}
