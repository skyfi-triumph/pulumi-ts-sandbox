"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./appBlock"), exports);
__exportStar(require("./application"), exports);
__exportStar(require("./applicationFleetAssociation"), exports);
__exportStar(require("./directoryConfig"), exports);
__exportStar(require("./fleet"), exports);
__exportStar(require("./imageBuilder"), exports);
__exportStar(require("./stack"), exports);
__exportStar(require("./stackFleetAssociation"), exports);
__exportStar(require("./stackUserAssociation"), exports);
__exportStar(require("./user"), exports);
// Import resources to register:
const appBlock_1 = require("./appBlock");
const application_1 = require("./application");
const applicationFleetAssociation_1 = require("./applicationFleetAssociation");
const directoryConfig_1 = require("./directoryConfig");
const fleet_1 = require("./fleet");
const imageBuilder_1 = require("./imageBuilder");
const stack_1 = require("./stack");
const stackFleetAssociation_1 = require("./stackFleetAssociation");
const stackUserAssociation_1 = require("./stackUserAssociation");
const user_1 = require("./user");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:appstream:AppBlock":
                return new appBlock_1.AppBlock(name, undefined, { urn });
            case "aws-native:appstream:Application":
                return new application_1.Application(name, undefined, { urn });
            case "aws-native:appstream:ApplicationFleetAssociation":
                return new applicationFleetAssociation_1.ApplicationFleetAssociation(name, undefined, { urn });
            case "aws-native:appstream:DirectoryConfig":
                return new directoryConfig_1.DirectoryConfig(name, undefined, { urn });
            case "aws-native:appstream:Fleet":
                return new fleet_1.Fleet(name, undefined, { urn });
            case "aws-native:appstream:ImageBuilder":
                return new imageBuilder_1.ImageBuilder(name, undefined, { urn });
            case "aws-native:appstream:Stack":
                return new stack_1.Stack(name, undefined, { urn });
            case "aws-native:appstream:StackFleetAssociation":
                return new stackFleetAssociation_1.StackFleetAssociation(name, undefined, { urn });
            case "aws-native:appstream:StackUserAssociation":
                return new stackUserAssociation_1.StackUserAssociation(name, undefined, { urn });
            case "aws-native:appstream:User":
                return new user_1.User(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "appstream", _module);
//# sourceMappingURL=index.js.map