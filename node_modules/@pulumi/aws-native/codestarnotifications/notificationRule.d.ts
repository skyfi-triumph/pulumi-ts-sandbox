import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::CodeStarNotifications::NotificationRule
 */
export declare class NotificationRule extends pulumi.CustomResource {
    /**
     * Get an existing NotificationRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NotificationRule;
    /**
     * Returns true if the given object is an instance of NotificationRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NotificationRule;
    readonly arn: pulumi.Output<string>;
    readonly createdBy: pulumi.Output<string | undefined>;
    readonly detailType: pulumi.Output<enums.codestarnotifications.NotificationRuleDetailType>;
    readonly eventTypeId: pulumi.Output<string | undefined>;
    readonly eventTypeIds: pulumi.Output<string[]>;
    readonly name: pulumi.Output<string>;
    readonly resource: pulumi.Output<string>;
    readonly status: pulumi.Output<enums.codestarnotifications.NotificationRuleStatus | undefined>;
    readonly tags: pulumi.Output<any | undefined>;
    readonly targetAddress: pulumi.Output<string | undefined>;
    readonly targets: pulumi.Output<outputs.codestarnotifications.NotificationRuleTarget[]>;
    /**
     * Create a NotificationRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NotificationRule resource.
 */
export interface NotificationRuleArgs {
    createdBy?: pulumi.Input<string>;
    detailType: pulumi.Input<enums.codestarnotifications.NotificationRuleDetailType>;
    eventTypeId?: pulumi.Input<string>;
    eventTypeIds: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    resource: pulumi.Input<string>;
    status?: pulumi.Input<enums.codestarnotifications.NotificationRuleStatus>;
    tags?: any;
    targetAddress?: pulumi.Input<string>;
    targets: pulumi.Input<pulumi.Input<inputs.codestarnotifications.NotificationRuleTargetArgs>[]>;
}
