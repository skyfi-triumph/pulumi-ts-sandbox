import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::IoTFleetHub::Application
 */
export declare class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Application;
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Application;
    /**
     * The ARN of the application.
     */
    readonly applicationArn: pulumi.Output<string>;
    /**
     * When the Application was created
     */
    readonly applicationCreationDate: pulumi.Output<number>;
    /**
     * Application Description, should be between 1 and 2048 characters.
     */
    readonly applicationDescription: pulumi.Output<string | undefined>;
    /**
     * The ID of the application.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * When the Application was last updated
     */
    readonly applicationLastUpdateDate: pulumi.Output<number>;
    /**
     * Application Name, should be between 1 and 256 characters.
     */
    readonly applicationName: pulumi.Output<string>;
    /**
     * The current state of the application.
     */
    readonly applicationState: pulumi.Output<string>;
    /**
     * The URL of the application.
     */
    readonly applicationUrl: pulumi.Output<string>;
    /**
     * A message indicating why Create or Delete Application failed.
     */
    readonly errorMessage: pulumi.Output<string>;
    /**
     * The ARN of the role that the web application assumes when it interacts with AWS IoT Core. For more info on configuring this attribute, see https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * The AWS SSO application generated client ID (used with AWS SSO APIs).
     */
    readonly ssoClientId: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the application.
     */
    readonly tags: pulumi.Output<outputs.iotfleethub.ApplicationTag[] | undefined>;
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Application Description, should be between 1 and 2048 characters.
     */
    applicationDescription?: pulumi.Input<string>;
    /**
     * Application Name, should be between 1 and 256 characters.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * The ARN of the role that the web application assumes when it interacts with AWS IoT Core. For more info on configuring this attribute, see https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax
     */
    roleArn: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the application.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iotfleethub.ApplicationTagArgs>[]>;
}
