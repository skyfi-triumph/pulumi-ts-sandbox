import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::GameLift::MatchmakingConfiguration
 *
 * @deprecated MatchmakingConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class MatchmakingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing MatchmakingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MatchmakingConfiguration;
    /**
     * Returns true if the given object is an instance of MatchmakingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MatchmakingConfiguration;
    readonly acceptanceRequired: pulumi.Output<boolean>;
    readonly acceptanceTimeoutSeconds: pulumi.Output<number | undefined>;
    readonly additionalPlayerCount: pulumi.Output<number | undefined>;
    readonly arn: pulumi.Output<string>;
    readonly backfillMode: pulumi.Output<string | undefined>;
    readonly customEventData: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly flexMatchMode: pulumi.Output<string | undefined>;
    readonly gameProperties: pulumi.Output<outputs.gamelift.MatchmakingConfigurationGameProperty[] | undefined>;
    readonly gameSessionData: pulumi.Output<string | undefined>;
    readonly gameSessionQueueArns: pulumi.Output<string[] | undefined>;
    readonly name: pulumi.Output<string>;
    readonly notificationTarget: pulumi.Output<string | undefined>;
    readonly requestTimeoutSeconds: pulumi.Output<number>;
    readonly ruleSetName: pulumi.Output<string>;
    /**
     * Create a MatchmakingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated MatchmakingConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: MatchmakingConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MatchmakingConfiguration resource.
 */
export interface MatchmakingConfigurationArgs {
    acceptanceRequired: pulumi.Input<boolean>;
    acceptanceTimeoutSeconds?: pulumi.Input<number>;
    additionalPlayerCount?: pulumi.Input<number>;
    backfillMode?: pulumi.Input<string>;
    customEventData?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    flexMatchMode?: pulumi.Input<string>;
    gameProperties?: pulumi.Input<pulumi.Input<inputs.gamelift.MatchmakingConfigurationGamePropertyArgs>[]>;
    gameSessionData?: pulumi.Input<string>;
    gameSessionQueueArns?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    notificationTarget?: pulumi.Input<string>;
    requestTimeoutSeconds: pulumi.Input<number>;
    ruleSetName: pulumi.Input<string>;
}
