"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./alias"), exports);
__exportStar(require("./build"), exports);
__exportStar(require("./fleet"), exports);
__exportStar(require("./gameServerGroup"), exports);
__exportStar(require("./gameSessionQueue"), exports);
__exportStar(require("./matchmakingConfiguration"), exports);
__exportStar(require("./matchmakingRuleSet"), exports);
__exportStar(require("./script"), exports);
// Export enums:
__exportStar(require("../types/enums/gamelift"), exports);
// Import resources to register:
const alias_1 = require("./alias");
const build_1 = require("./build");
const fleet_1 = require("./fleet");
const gameServerGroup_1 = require("./gameServerGroup");
const gameSessionQueue_1 = require("./gameSessionQueue");
const matchmakingConfiguration_1 = require("./matchmakingConfiguration");
const matchmakingRuleSet_1 = require("./matchmakingRuleSet");
const script_1 = require("./script");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:gamelift:Alias":
                return new alias_1.Alias(name, undefined, { urn });
            case "aws-native:gamelift:Build":
                return new build_1.Build(name, undefined, { urn });
            case "aws-native:gamelift:Fleet":
                return new fleet_1.Fleet(name, undefined, { urn });
            case "aws-native:gamelift:GameServerGroup":
                return new gameServerGroup_1.GameServerGroup(name, undefined, { urn });
            case "aws-native:gamelift:GameSessionQueue":
                return new gameSessionQueue_1.GameSessionQueue(name, undefined, { urn });
            case "aws-native:gamelift:MatchmakingConfiguration":
                return new matchmakingConfiguration_1.MatchmakingConfiguration(name, undefined, { urn });
            case "aws-native:gamelift:MatchmakingRuleSet":
                return new matchmakingRuleSet_1.MatchmakingRuleSet(name, undefined, { urn });
            case "aws-native:gamelift:Script":
                return new script_1.Script(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "gamelift", _module);
//# sourceMappingURL=index.js.map