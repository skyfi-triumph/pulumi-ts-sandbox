import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
 */
export declare class GameServerGroup extends pulumi.CustomResource {
    /**
     * Get an existing GameServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GameServerGroup;
    /**
     * Returns true if the given object is an instance of GameServerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GameServerGroup;
    /**
     * A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
     */
    readonly autoScalingGroupArn: pulumi.Output<string>;
    /**
     * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
     */
    readonly autoScalingPolicy: pulumi.Output<outputs.gamelift.GameServerGroupAutoScalingPolicy | undefined>;
    /**
     * The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
     */
    readonly balancingStrategy: pulumi.Output<enums.gamelift.GameServerGroupBalancingStrategy | undefined>;
    /**
     * The type of delete to perform.
     */
    readonly deleteOption: pulumi.Output<enums.gamelift.GameServerGroupDeleteOption | undefined>;
    /**
     * A generated unique ID for the game server group.
     */
    readonly gameServerGroupArn: pulumi.Output<string>;
    /**
     * An identifier for the new game server group.
     */
    readonly gameServerGroupName: pulumi.Output<string>;
    /**
     * A flag that indicates whether instances in the game server group are protected from early termination.
     */
    readonly gameServerProtectionPolicy: pulumi.Output<enums.gamelift.GameServerGroupGameServerProtectionPolicy | undefined>;
    /**
     * A set of EC2 instance types to use when creating instances in the group.
     */
    readonly instanceDefinitions: pulumi.Output<outputs.gamelift.GameServerGroupInstanceDefinition[]>;
    /**
     * The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
     */
    readonly launchTemplate: pulumi.Output<outputs.gamelift.GameServerGroupLaunchTemplate>;
    /**
     * The maximum number of instances allowed in the EC2 Auto Scaling group.
     */
    readonly maxSize: pulumi.Output<number | undefined>;
    /**
     * The minimum number of instances allowed in the EC2 Auto Scaling group.
     */
    readonly minSize: pulumi.Output<number | undefined>;
    /**
     * The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * A list of labels to assign to the new game server group resource.
     */
    readonly tags: pulumi.Output<outputs.gamelift.GameServerGroupTag[] | undefined>;
    /**
     * A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
     */
    readonly vpcSubnets: pulumi.Output<string[] | undefined>;
    /**
     * Create a GameServerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GameServerGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GameServerGroup resource.
 */
export interface GameServerGroupArgs {
    /**
     * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
     */
    autoScalingPolicy?: pulumi.Input<inputs.gamelift.GameServerGroupAutoScalingPolicyArgs>;
    /**
     * The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
     */
    balancingStrategy?: pulumi.Input<enums.gamelift.GameServerGroupBalancingStrategy>;
    /**
     * The type of delete to perform.
     */
    deleteOption?: pulumi.Input<enums.gamelift.GameServerGroupDeleteOption>;
    /**
     * An identifier for the new game server group.
     */
    gameServerGroupName?: pulumi.Input<string>;
    /**
     * A flag that indicates whether instances in the game server group are protected from early termination.
     */
    gameServerProtectionPolicy?: pulumi.Input<enums.gamelift.GameServerGroupGameServerProtectionPolicy>;
    /**
     * A set of EC2 instance types to use when creating instances in the group.
     */
    instanceDefinitions: pulumi.Input<pulumi.Input<inputs.gamelift.GameServerGroupInstanceDefinitionArgs>[]>;
    /**
     * The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
     */
    launchTemplate: pulumi.Input<inputs.gamelift.GameServerGroupLaunchTemplateArgs>;
    /**
     * The maximum number of instances allowed in the EC2 Auto Scaling group.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * The minimum number of instances allowed in the EC2 Auto Scaling group.
     */
    minSize?: pulumi.Input<number>;
    /**
     * The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A list of labels to assign to the new game server group resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.gamelift.GameServerGroupTagArgs>[]>;
    /**
     * A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
     */
    vpcSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}
