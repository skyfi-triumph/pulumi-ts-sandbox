"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fleet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The AWS::GameLift::Fleet resource creates an Amazon GameLift (GameLift) fleet to host game servers.  A fleet is a set of EC2 instances, each of which can host multiple game sessions.
 */
class Fleet extends pulumi.CustomResource {
    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["buildId"] = args ? args.buildId : undefined;
            inputs["certificateConfiguration"] = args ? args.certificateConfiguration : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["desiredEC2Instances"] = args ? args.desiredEC2Instances : undefined;
            inputs["eC2InboundPermissions"] = args ? args.eC2InboundPermissions : undefined;
            inputs["eC2InstanceType"] = args ? args.eC2InstanceType : undefined;
            inputs["fleetType"] = args ? args.fleetType : undefined;
            inputs["instanceRoleARN"] = args ? args.instanceRoleARN : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["logPaths"] = args ? args.logPaths : undefined;
            inputs["maxSize"] = args ? args.maxSize : undefined;
            inputs["metricGroups"] = args ? args.metricGroups : undefined;
            inputs["minSize"] = args ? args.minSize : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["newGameSessionProtectionPolicy"] = args ? args.newGameSessionProtectionPolicy : undefined;
            inputs["peerVpcAwsAccountId"] = args ? args.peerVpcAwsAccountId : undefined;
            inputs["peerVpcId"] = args ? args.peerVpcId : undefined;
            inputs["resourceCreationLimitPolicy"] = args ? args.resourceCreationLimitPolicy : undefined;
            inputs["runtimeConfiguration"] = args ? args.runtimeConfiguration : undefined;
            inputs["scriptId"] = args ? args.scriptId : undefined;
            inputs["serverLaunchParameters"] = args ? args.serverLaunchParameters : undefined;
            inputs["serverLaunchPath"] = args ? args.serverLaunchPath : undefined;
            inputs["fleetId"] = undefined /*out*/;
        }
        else {
            inputs["buildId"] = undefined /*out*/;
            inputs["certificateConfiguration"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["desiredEC2Instances"] = undefined /*out*/;
            inputs["eC2InboundPermissions"] = undefined /*out*/;
            inputs["eC2InstanceType"] = undefined /*out*/;
            inputs["fleetId"] = undefined /*out*/;
            inputs["fleetType"] = undefined /*out*/;
            inputs["instanceRoleARN"] = undefined /*out*/;
            inputs["locations"] = undefined /*out*/;
            inputs["logPaths"] = undefined /*out*/;
            inputs["maxSize"] = undefined /*out*/;
            inputs["metricGroups"] = undefined /*out*/;
            inputs["minSize"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["newGameSessionProtectionPolicy"] = undefined /*out*/;
            inputs["peerVpcAwsAccountId"] = undefined /*out*/;
            inputs["peerVpcId"] = undefined /*out*/;
            inputs["resourceCreationLimitPolicy"] = undefined /*out*/;
            inputs["runtimeConfiguration"] = undefined /*out*/;
            inputs["scriptId"] = undefined /*out*/;
            inputs["serverLaunchParameters"] = undefined /*out*/;
            inputs["serverLaunchPath"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Fleet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Fleet(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fleet.__pulumiType;
    }
}
exports.Fleet = Fleet;
/** @internal */
Fleet.__pulumiType = 'aws-native:gamelift:Fleet';
//# sourceMappingURL=fleet.js.map