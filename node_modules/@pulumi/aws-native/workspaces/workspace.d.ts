import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::WorkSpaces::Workspace
 *
 * @deprecated Workspace is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workspace;
    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Workspace;
    readonly bundleId: pulumi.Output<string>;
    readonly directoryId: pulumi.Output<string>;
    readonly rootVolumeEncryptionEnabled: pulumi.Output<boolean | undefined>;
    readonly tags: pulumi.Output<outputs.workspaces.WorkspaceTag[] | undefined>;
    readonly userName: pulumi.Output<string>;
    readonly userVolumeEncryptionEnabled: pulumi.Output<boolean | undefined>;
    readonly volumeEncryptionKey: pulumi.Output<string | undefined>;
    readonly workspaceProperties: pulumi.Output<outputs.workspaces.WorkspaceProperties | undefined>;
    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Workspace is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: WorkspaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Workspace resource.
 */
export interface WorkspaceArgs {
    bundleId: pulumi.Input<string>;
    directoryId: pulumi.Input<string>;
    rootVolumeEncryptionEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.workspaces.WorkspaceTagArgs>[]>;
    userName: pulumi.Input<string>;
    userVolumeEncryptionEnabled?: pulumi.Input<boolean>;
    volumeEncryptionKey?: pulumi.Input<string>;
    workspaceProperties?: pulumi.Input<inputs.workspaces.WorkspacePropertiesArgs>;
}
