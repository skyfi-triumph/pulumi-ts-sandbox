import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::RUM::AppMonitor
 */
export declare class AppMonitor extends pulumi.CustomResource {
    /**
     * Get an existing AppMonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppMonitor;
    /**
     * Returns true if the given object is an instance of AppMonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppMonitor;
    readonly appMonitorConfiguration: pulumi.Output<outputs.rum.AppMonitorConfiguration | undefined>;
    /**
     * Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to CWLlong in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur CWLlong charges. If you omit this parameter, the default is false
     */
    readonly cwLogEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The top-level internet domain name for which your application has administrative authority.
     */
    readonly domain: pulumi.Output<string | undefined>;
    /**
     * A name for the app monitor
     */
    readonly name: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.rum.AppMonitorTag[] | undefined>;
    /**
     * Create a AppMonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppMonitorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AppMonitor resource.
 */
export interface AppMonitorArgs {
    appMonitorConfiguration?: pulumi.Input<inputs.rum.AppMonitorConfigurationArgs>;
    /**
     * Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to CWLlong in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur CWLlong charges. If you omit this parameter, the default is false
     */
    cwLogEnabled?: pulumi.Input<boolean>;
    /**
     * The top-level internet domain name for which your application has administrative authority.
     */
    domain?: pulumi.Input<string>;
    /**
     * A name for the app monitor
     */
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.rum.AppMonitorTagArgs>[]>;
}
