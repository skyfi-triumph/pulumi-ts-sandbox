import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * This resource schema represents the RepositoryAssociation resource in the Amazon CodeGuru Reviewer service.
 */
export declare class RepositoryAssociation extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RepositoryAssociation;
    /**
     * Returns true if the given object is an instance of RepositoryAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryAssociation;
    /**
     * The Amazon Resource Name (ARN) of the repository association.
     */
    readonly associationArn: pulumi.Output<string>;
    /**
     * The name of the S3 bucket associated with an associated S3 repository. It must start with `codeguru-reviewer-`.
     */
    readonly bucketName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
     */
    readonly connectionArn: pulumi.Output<string | undefined>;
    /**
     * Name of the repository to be associated.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The owner of the repository. For a Bitbucket repository, this is the username for the account that owns the repository.
     */
    readonly owner: pulumi.Output<string | undefined>;
    /**
     * The tags associated with a repository association.
     */
    readonly tags: pulumi.Output<outputs.codegurureviewer.RepositoryAssociationTag[] | undefined>;
    /**
     * The type of repository to be associated.
     */
    readonly type: pulumi.Output<enums.codegurureviewer.RepositoryAssociationType>;
    /**
     * Create a RepositoryAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RepositoryAssociation resource.
 */
export interface RepositoryAssociationArgs {
    /**
     * The name of the S3 bucket associated with an associated S3 repository. It must start with `codeguru-reviewer-`.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
     */
    connectionArn?: pulumi.Input<string>;
    /**
     * Name of the repository to be associated.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner of the repository. For a Bitbucket repository, this is the username for the account that owns the repository.
     */
    owner?: pulumi.Input<string>;
    /**
     * The tags associated with a repository association.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.codegurureviewer.RepositoryAssociationTagArgs>[]>;
    /**
     * The type of repository to be associated.
     */
    type: pulumi.Input<enums.codegurureviewer.RepositoryAssociationType>;
}
