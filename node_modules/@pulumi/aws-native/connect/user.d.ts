import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Connect::User
 */
export declare class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): User;
    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is User;
    /**
     * The identifier of the user account in the directory used for identity management.
     */
    readonly directoryUserId: pulumi.Output<string | undefined>;
    /**
     * The identifier of the hierarchy group for the user.
     */
    readonly hierarchyGroupArn: pulumi.Output<string | undefined>;
    /**
     * The information about the identity of the user.
     */
    readonly identityInfo: pulumi.Output<outputs.connect.UserIdentityInfo | undefined>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn: pulumi.Output<string>;
    /**
     * The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * The phone settings for the user.
     */
    readonly phoneConfig: pulumi.Output<outputs.connect.UserPhoneConfig>;
    /**
     * The identifier of the routing profile for the user.
     */
    readonly routingProfileArn: pulumi.Output<string>;
    /**
     * One or more security profile arns for the user
     */
    readonly securityProfileArns: pulumi.Output<string[]>;
    /**
     * One or more tags.
     */
    readonly tags: pulumi.Output<outputs.connect.UserTag[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the user.
     */
    readonly userArn: pulumi.Output<string>;
    /**
     * The user name for the account.
     */
    readonly username: pulumi.Output<string>;
    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The identifier of the user account in the directory used for identity management.
     */
    directoryUserId?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group for the user.
     */
    hierarchyGroupArn?: pulumi.Input<string>;
    /**
     * The information about the identity of the user.
     */
    identityInfo?: pulumi.Input<inputs.connect.UserIdentityInfoArgs>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
     */
    password?: pulumi.Input<string>;
    /**
     * The phone settings for the user.
     */
    phoneConfig: pulumi.Input<inputs.connect.UserPhoneConfigArgs>;
    /**
     * The identifier of the routing profile for the user.
     */
    routingProfileArn: pulumi.Input<string>;
    /**
     * One or more security profile arns for the user
     */
    securityProfileArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.connect.UserTagArgs>[]>;
    /**
     * The user name for the account.
     */
    username: pulumi.Input<string>;
}
