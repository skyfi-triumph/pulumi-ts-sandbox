import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * This resource creates a Registry for authoring schemas as part of Glue Schema Registry.
 */
export declare class Registry extends pulumi.CustomResource {
    /**
     * Get an existing Registry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Registry;
    /**
     * Returns true if the given object is an instance of Registry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Registry;
    /**
     * Amazon Resource Name for the created Registry.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A description of the registry. If description is not provided, there will not be any default value for this.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark.  No whitespace.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of tags to tag the Registry
     */
    readonly tags: pulumi.Output<outputs.glue.RegistryTag[] | undefined>;
    /**
     * Create a Registry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Registry resource.
 */
export interface RegistryArgs {
    /**
     * A description of the registry. If description is not provided, there will not be any default value for this.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark.  No whitespace.
     */
    name?: pulumi.Input<string>;
    /**
     * List of tags to tag the Registry
     */
    tags?: pulumi.Input<pulumi.Input<inputs.glue.RegistryTagArgs>[]>;
}
