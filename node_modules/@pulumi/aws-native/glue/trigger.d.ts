import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Glue::Trigger
 *
 * @deprecated Trigger is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Trigger extends pulumi.CustomResource {
    /**
     * Get an existing Trigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Trigger;
    /**
     * Returns true if the given object is an instance of Trigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Trigger;
    readonly actions: pulumi.Output<outputs.glue.TriggerAction[]>;
    readonly description: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    readonly predicate: pulumi.Output<outputs.glue.TriggerPredicate | undefined>;
    readonly schedule: pulumi.Output<string | undefined>;
    readonly startOnCreation: pulumi.Output<boolean | undefined>;
    readonly tags: pulumi.Output<any | undefined>;
    readonly type: pulumi.Output<string>;
    readonly workflowName: pulumi.Output<string | undefined>;
    /**
     * Create a Trigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Trigger is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: TriggerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Trigger resource.
 */
export interface TriggerArgs {
    actions: pulumi.Input<pulumi.Input<inputs.glue.TriggerActionArgs>[]>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    predicate?: pulumi.Input<inputs.glue.TriggerPredicateArgs>;
    schedule?: pulumi.Input<string>;
    startOnCreation?: pulumi.Input<boolean>;
    tags?: any;
    type: pulumi.Input<string>;
    workflowName?: pulumi.Input<string>;
}
