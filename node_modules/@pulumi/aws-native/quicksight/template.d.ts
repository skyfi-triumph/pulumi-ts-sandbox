import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Definition of the AWS::QuickSight::Template Resource Type.
 */
export declare class Template extends pulumi.CustomResource {
    /**
     * Get an existing Template resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Template;
    /**
     * Returns true if the given object is an instance of Template.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Template;
    /**
     * <p>The Amazon Resource Name (ARN) of the template.</p>
     */
    readonly arn: pulumi.Output<string>;
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * <p>Time when this was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * <p>Time when this was last updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * <p>A display name for the template.</p>
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * <p>A list of resource permissions to be set on the template. </p>
     */
    readonly permissions: pulumi.Output<outputs.quicksight.TemplateResourcePermission[] | undefined>;
    readonly sourceEntity: pulumi.Output<outputs.quicksight.TemplateSourceEntity>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>
     */
    readonly tags: pulumi.Output<outputs.quicksight.TemplateTag[] | undefined>;
    readonly templateId: pulumi.Output<string>;
    readonly version: pulumi.Output<outputs.quicksight.TemplateVersion>;
    /**
     * <p>A description of the current template version being created. This API operation creates the
     * 			first version of the template. Every time <code>UpdateTemplate</code> is called, a new
     * 			version is created. Each version of the template maintains a description of the version
     * 			in the <code>VersionDescription</code> field.</p>
     */
    readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * Create a Template resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Template resource.
 */
export interface TemplateArgs {
    awsAccountId: pulumi.Input<string>;
    /**
     * <p>A display name for the template.</p>
     */
    name?: pulumi.Input<string>;
    /**
     * <p>A list of resource permissions to be set on the template. </p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.TemplateResourcePermissionArgs>[]>;
    sourceEntity: pulumi.Input<inputs.quicksight.TemplateSourceEntityArgs>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.quicksight.TemplateTagArgs>[]>;
    templateId: pulumi.Input<string>;
    /**
     * <p>A description of the current template version being created. This API operation creates the
     * 			first version of the template. Every time <code>UpdateTemplate</code> is called, a new
     * 			version is created. Each version of the template maintains a description of the version
     * 			in the <code>VersionDescription</code> field.</p>
     */
    versionDescription?: pulumi.Input<string>;
}
