import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Definition of the AWS::QuickSight::Analysis Resource Type.
 */
export declare class Analysis extends pulumi.CustomResource {
    /**
     * Get an existing Analysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Analysis;
    /**
     * Returns true if the given object is an instance of Analysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Analysis;
    readonly analysisId: pulumi.Output<string>;
    /**
     * <p>The Amazon Resource Name (ARN) of the analysis.</p>
     */
    readonly arn: pulumi.Output<string>;
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * <p>The time that the analysis was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * <p>The ARNs of the datasets of the analysis.</p>
     */
    readonly dataSetArns: pulumi.Output<string[]>;
    /**
     * <p>Errors associated with the analysis.</p>
     */
    readonly errors: pulumi.Output<outputs.quicksight.AnalysisError[] | undefined>;
    /**
     * <p>The time that the analysis was last updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * <p>The descriptive name of the analysis.</p>
     */
    readonly name: pulumi.Output<string | undefined>;
    readonly parameters: pulumi.Output<outputs.quicksight.AnalysisParameters | undefined>;
    /**
     * <p>A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the <code>Permissions</code> structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). </p>
     *
     *         <p>To specify no permissions, omit <code>Permissions</code>.</p>
     */
    readonly permissions: pulumi.Output<outputs.quicksight.AnalysisResourcePermission[] | undefined>;
    /**
     * <p>A list of the associated sheets with the unique identifier and name of each sheet.</p>
     */
    readonly sheets: pulumi.Output<outputs.quicksight.AnalysisSheet[]>;
    readonly sourceEntity: pulumi.Output<outputs.quicksight.AnalysisSourceEntity>;
    readonly status: pulumi.Output<enums.quicksight.AnalysisResourceStatus>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.</p>
     */
    readonly tags: pulumi.Output<outputs.quicksight.AnalysisTag[] | undefined>;
    /**
     * <p>The ARN of the theme of the analysis.</p>
     */
    readonly themeArn: pulumi.Output<string | undefined>;
    /**
     * Create a Analysis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnalysisArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Analysis resource.
 */
export interface AnalysisArgs {
    analysisId: pulumi.Input<string>;
    awsAccountId: pulumi.Input<string>;
    /**
     * <p>Errors associated with the analysis.</p>
     */
    errors?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisErrorArgs>[]>;
    /**
     * <p>The descriptive name of the analysis.</p>
     */
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<inputs.quicksight.AnalysisParametersArgs>;
    /**
     * <p>A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the <code>Permissions</code> structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). </p>
     *
     *         <p>To specify no permissions, omit <code>Permissions</code>.</p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisResourcePermissionArgs>[]>;
    sourceEntity: pulumi.Input<inputs.quicksight.AnalysisSourceEntityArgs>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisTagArgs>[]>;
    /**
     * <p>The ARN of the theme of the analysis.</p>
     */
    themeArn?: pulumi.Input<string>;
}
