import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Definition of the AWS::QuickSight::DataSet Resource Type.
 */
export declare class DataSet extends pulumi.CustomResource {
    /**
     * Get an existing DataSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataSet;
    /**
     * Returns true if the given object is an instance of DataSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataSet;
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     */
    readonly arn: pulumi.Output<string>;
    readonly awsAccountId: pulumi.Output<string | undefined>;
    /**
     * <p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>
     */
    readonly columnGroups: pulumi.Output<outputs.quicksight.DataSetColumnGroup[] | undefined>;
    readonly columnLevelPermissionRules: pulumi.Output<outputs.quicksight.DataSetColumnLevelPermissionRule[] | undefined>;
    /**
     * <p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't
     *             imported into SPICE.</p>
     */
    readonly consumedSpiceCapacityInBytes: pulumi.Output<number>;
    /**
     * <p>The time that this dataset was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    readonly dataSetId: pulumi.Output<string | undefined>;
    readonly fieldFolders: pulumi.Output<outputs.quicksight.DataSetFieldFolderMap | undefined>;
    readonly importMode: pulumi.Output<enums.quicksight.DataSetImportMode | undefined>;
    readonly ingestionWaitPolicy: pulumi.Output<outputs.quicksight.DataSetIngestionWaitPolicy | undefined>;
    /**
     * <p>The last time that this dataset was updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    readonly logicalTableMap: pulumi.Output<outputs.quicksight.DataSetLogicalTableMap | undefined>;
    /**
     * <p>The display name for the dataset.</p>
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * <p>The list of columns after all transforms. These columns are available in templates,
     *             analyses, and dashboards.</p>
     */
    readonly outputColumns: pulumi.Output<outputs.quicksight.DataSetOutputColumn[]>;
    /**
     * <p>A list of resource permissions on the dataset.</p>
     */
    readonly permissions: pulumi.Output<outputs.quicksight.DataSetResourcePermission[] | undefined>;
    readonly physicalTableMap: pulumi.Output<outputs.quicksight.DataSetPhysicalTableMap | undefined>;
    readonly rowLevelPermissionDataSet: pulumi.Output<outputs.quicksight.DataSetRowLevelPermissionDataSet | undefined>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
     */
    readonly tags: pulumi.Output<outputs.quicksight.DataSetTag[] | undefined>;
    /**
     * Create a DataSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DataSet resource.
 */
export interface DataSetArgs {
    awsAccountId?: pulumi.Input<string>;
    /**
     * <p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>
     */
    columnGroups?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSetColumnGroupArgs>[]>;
    columnLevelPermissionRules?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSetColumnLevelPermissionRuleArgs>[]>;
    dataSetId?: pulumi.Input<string>;
    fieldFolders?: pulumi.Input<inputs.quicksight.DataSetFieldFolderMapArgs>;
    importMode?: pulumi.Input<enums.quicksight.DataSetImportMode>;
    ingestionWaitPolicy?: pulumi.Input<inputs.quicksight.DataSetIngestionWaitPolicyArgs>;
    logicalTableMap?: pulumi.Input<inputs.quicksight.DataSetLogicalTableMapArgs>;
    /**
     * <p>The display name for the dataset.</p>
     */
    name?: pulumi.Input<string>;
    /**
     * <p>A list of resource permissions on the dataset.</p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSetResourcePermissionArgs>[]>;
    physicalTableMap?: pulumi.Input<inputs.quicksight.DataSetPhysicalTableMapArgs>;
    rowLevelPermissionDataSet?: pulumi.Input<inputs.quicksight.DataSetRowLevelPermissionDataSetArgs>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSetTagArgs>[]>;
}
