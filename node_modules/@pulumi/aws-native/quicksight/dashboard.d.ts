import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Definition of the AWS::QuickSight::Dashboard Resource Type.
 */
export declare class Dashboard extends pulumi.CustomResource {
    /**
     * Get an existing Dashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Dashboard;
    /**
     * Returns true if the given object is an instance of Dashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Dashboard;
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     */
    readonly arn: pulumi.Output<string>;
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * <p>The time that this dataset was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    readonly dashboardId: pulumi.Output<string>;
    readonly dashboardPublishOptions: pulumi.Output<outputs.quicksight.DashboardPublishOptions | undefined>;
    /**
     * <p>The last time that this dataset was published.</p>
     */
    readonly lastPublishedTime: pulumi.Output<string>;
    /**
     * <p>The last time that this dataset was updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * <p>The display name of the dashboard.</p>
     */
    readonly name: pulumi.Output<string | undefined>;
    readonly parameters: pulumi.Output<outputs.quicksight.DashboardParameters | undefined>;
    /**
     * <p>A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. </p>
     *
     *         <p>To specify no permissions, omit the permissions list.</p>
     */
    readonly permissions: pulumi.Output<outputs.quicksight.DashboardResourcePermission[] | undefined>;
    readonly sourceEntity: pulumi.Output<outputs.quicksight.DashboardSourceEntity>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.</p>
     */
    readonly tags: pulumi.Output<outputs.quicksight.DashboardTag[] | undefined>;
    /**
     * <p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.</p>
     */
    readonly themeArn: pulumi.Output<string | undefined>;
    readonly version: pulumi.Output<outputs.quicksight.DashboardVersion>;
    /**
     * <p>A description for the first version of the dashboard being created.</p>
     */
    readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * Create a Dashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Dashboard resource.
 */
export interface DashboardArgs {
    awsAccountId: pulumi.Input<string>;
    dashboardId: pulumi.Input<string>;
    dashboardPublishOptions?: pulumi.Input<inputs.quicksight.DashboardPublishOptionsArgs>;
    /**
     * <p>The display name of the dashboard.</p>
     */
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<inputs.quicksight.DashboardParametersArgs>;
    /**
     * <p>A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. </p>
     *
     *         <p>To specify no permissions, omit the permissions list.</p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardResourcePermissionArgs>[]>;
    sourceEntity: pulumi.Input<inputs.quicksight.DashboardSourceEntityArgs>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardTagArgs>[]>;
    /**
     * <p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.</p>
     */
    themeArn?: pulumi.Input<string>;
    /**
     * <p>A description for the first version of the dashboard being created.</p>
     */
    versionDescription?: pulumi.Input<string>;
}
