import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * An object representing an Amazon EKS cluster.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The certificate-authority-data for your cluster.
     */
    readonly certificateAuthorityData: pulumi.Output<string>;
    /**
     * The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control plane to data plane communication.
     */
    readonly clusterSecurityGroupId: pulumi.Output<string>;
    readonly encryptionConfig: pulumi.Output<outputs.eks.ClusterEncryptionConfig[] | undefined>;
    /**
     * Amazon Resource Name (ARN) or alias of the customer master key (CMK).
     */
    readonly encryptionConfigKeyArn: pulumi.Output<string>;
    /**
     * The endpoint for your Kubernetes API server, such as https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
     */
    readonly endpoint: pulumi.Output<string>;
    readonly kubernetesNetworkConfig: pulumi.Output<outputs.eks.ClusterKubernetesNetworkConfig | undefined>;
    readonly logging: pulumi.Output<outputs.eks.ClusterLogging | undefined>;
    /**
     * The unique name to give to your cluster.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The issuer URL for the cluster's OIDC identity provider, such as https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this output value, you can include the following code in your template.
     */
    readonly openIdConnectIssuerUrl: pulumi.Output<string>;
    readonly resourcesVpcConfig: pulumi.Output<outputs.eks.ClusterResourcesVpcConfig>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.eks.ClusterTag[] | undefined>;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    encryptionConfig?: pulumi.Input<pulumi.Input<inputs.eks.ClusterEncryptionConfigArgs>[]>;
    kubernetesNetworkConfig?: pulumi.Input<inputs.eks.ClusterKubernetesNetworkConfigArgs>;
    logging?: pulumi.Input<inputs.eks.ClusterLoggingArgs>;
    /**
     * The unique name to give to your cluster.
     */
    name?: pulumi.Input<string>;
    resourcesVpcConfig: pulumi.Input<inputs.eks.ClusterResourcesVpcConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.eks.ClusterTagArgs>[]>;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
     */
    version?: pulumi.Input<string>;
}
