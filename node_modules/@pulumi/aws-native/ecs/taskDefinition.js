"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Schema describing various properties for ECS TaskDefinition
 */
class TaskDefinition extends pulumi.CustomResource {
    /**
     * Create a TaskDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["containerDefinitions"] = args ? args.containerDefinitions : undefined;
            inputs["cpu"] = args ? args.cpu : undefined;
            inputs["ephemeralStorage"] = args ? args.ephemeralStorage : undefined;
            inputs["executionRoleArn"] = args ? args.executionRoleArn : undefined;
            inputs["family"] = args ? args.family : undefined;
            inputs["inferenceAccelerators"] = args ? args.inferenceAccelerators : undefined;
            inputs["ipcMode"] = args ? args.ipcMode : undefined;
            inputs["memory"] = args ? args.memory : undefined;
            inputs["networkMode"] = args ? args.networkMode : undefined;
            inputs["pidMode"] = args ? args.pidMode : undefined;
            inputs["placementConstraints"] = args ? args.placementConstraints : undefined;
            inputs["proxyConfiguration"] = args ? args.proxyConfiguration : undefined;
            inputs["requiresCompatibilities"] = args ? args.requiresCompatibilities : undefined;
            inputs["runtimePlatform"] = args ? args.runtimePlatform : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["taskRoleArn"] = args ? args.taskRoleArn : undefined;
            inputs["volumes"] = args ? args.volumes : undefined;
            inputs["taskDefinitionArn"] = undefined /*out*/;
        }
        else {
            inputs["containerDefinitions"] = undefined /*out*/;
            inputs["cpu"] = undefined /*out*/;
            inputs["ephemeralStorage"] = undefined /*out*/;
            inputs["executionRoleArn"] = undefined /*out*/;
            inputs["family"] = undefined /*out*/;
            inputs["inferenceAccelerators"] = undefined /*out*/;
            inputs["ipcMode"] = undefined /*out*/;
            inputs["memory"] = undefined /*out*/;
            inputs["networkMode"] = undefined /*out*/;
            inputs["pidMode"] = undefined /*out*/;
            inputs["placementConstraints"] = undefined /*out*/;
            inputs["proxyConfiguration"] = undefined /*out*/;
            inputs["requiresCompatibilities"] = undefined /*out*/;
            inputs["runtimePlatform"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["taskDefinitionArn"] = undefined /*out*/;
            inputs["taskRoleArn"] = undefined /*out*/;
            inputs["volumes"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(TaskDefinition.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing TaskDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new TaskDefinition(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of TaskDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TaskDefinition.__pulumiType;
    }
}
exports.TaskDefinition = TaskDefinition;
/** @internal */
TaskDefinition.__pulumiType = 'aws-native:ecs:TaskDefinition';
//# sourceMappingURL=taskDefinition.js.map