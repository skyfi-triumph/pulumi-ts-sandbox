import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Create an Elastic Container Service (ECS) cluster.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * The Amazon Resource Name (ARN) of the Amazon ECS cluster, such as arn:aws:ecs:us-east-2:123456789012:cluster/MyECSCluster.
     */
    readonly arn: pulumi.Output<string>;
    readonly capacityProviders: pulumi.Output<string[] | undefined>;
    /**
     * A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
     */
    readonly clusterName: pulumi.Output<string | undefined>;
    readonly clusterSettings: pulumi.Output<outputs.ecs.ClusterSettings[] | undefined>;
    readonly configuration: pulumi.Output<outputs.ecs.ClusterConfiguration | undefined>;
    readonly defaultCapacityProviderStrategy: pulumi.Output<outputs.ecs.ClusterCapacityProviderStrategyItem[] | undefined>;
    readonly tags: pulumi.Output<outputs.ecs.ClusterTag[] | undefined>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    capacityProviders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
     */
    clusterName?: pulumi.Input<string>;
    clusterSettings?: pulumi.Input<pulumi.Input<inputs.ecs.ClusterSettingsArgs>[]>;
    configuration?: pulumi.Input<inputs.ecs.ClusterConfigurationArgs>;
    defaultCapacityProviderStrategy?: pulumi.Input<pulumi.Input<inputs.ecs.ClusterCapacityProviderStrategyItemArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ecs.ClusterTagArgs>[]>;
}
