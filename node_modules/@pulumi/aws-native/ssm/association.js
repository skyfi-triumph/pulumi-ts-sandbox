"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Association = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
 */
class Association extends pulumi.CustomResource {
    /**
     * Create a Association resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["applyOnlyAtCronInterval"] = args ? args.applyOnlyAtCronInterval : undefined;
            inputs["associationName"] = args ? args.associationName : undefined;
            inputs["automationTargetParameterName"] = args ? args.automationTargetParameterName : undefined;
            inputs["calendarNames"] = args ? args.calendarNames : undefined;
            inputs["complianceSeverity"] = args ? args.complianceSeverity : undefined;
            inputs["documentVersion"] = args ? args.documentVersion : undefined;
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["maxConcurrency"] = args ? args.maxConcurrency : undefined;
            inputs["maxErrors"] = args ? args.maxErrors : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["outputLocation"] = args ? args.outputLocation : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            inputs["syncCompliance"] = args ? args.syncCompliance : undefined;
            inputs["targets"] = args ? args.targets : undefined;
            inputs["waitForSuccessTimeoutSeconds"] = args ? args.waitForSuccessTimeoutSeconds : undefined;
            inputs["associationId"] = undefined /*out*/;
        }
        else {
            inputs["applyOnlyAtCronInterval"] = undefined /*out*/;
            inputs["associationId"] = undefined /*out*/;
            inputs["associationName"] = undefined /*out*/;
            inputs["automationTargetParameterName"] = undefined /*out*/;
            inputs["calendarNames"] = undefined /*out*/;
            inputs["complianceSeverity"] = undefined /*out*/;
            inputs["documentVersion"] = undefined /*out*/;
            inputs["instanceId"] = undefined /*out*/;
            inputs["maxConcurrency"] = undefined /*out*/;
            inputs["maxErrors"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["outputLocation"] = undefined /*out*/;
            inputs["parameters"] = undefined /*out*/;
            inputs["scheduleExpression"] = undefined /*out*/;
            inputs["syncCompliance"] = undefined /*out*/;
            inputs["targets"] = undefined /*out*/;
            inputs["waitForSuccessTimeoutSeconds"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Association.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Association resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Association(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Association.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Association.__pulumiType;
    }
}
exports.Association = Association;
/** @internal */
Association.__pulumiType = 'aws-native:ssm:Association';
//# sourceMappingURL=association.js.map