import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::SSM::PatchBaseline
 *
 * @deprecated PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class PatchBaseline extends pulumi.CustomResource {
    /**
     * Get an existing PatchBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PatchBaseline;
    /**
     * Returns true if the given object is an instance of PatchBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PatchBaseline;
    readonly approvalRules: pulumi.Output<outputs.ssm.PatchBaselineRuleGroup | undefined>;
    readonly approvedPatches: pulumi.Output<string[] | undefined>;
    readonly approvedPatchesComplianceLevel: pulumi.Output<string | undefined>;
    readonly approvedPatchesEnableNonSecurity: pulumi.Output<boolean | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly globalFilters: pulumi.Output<outputs.ssm.PatchBaselinePatchFilterGroup | undefined>;
    readonly name: pulumi.Output<string>;
    readonly operatingSystem: pulumi.Output<string | undefined>;
    readonly patchGroups: pulumi.Output<string[] | undefined>;
    readonly rejectedPatches: pulumi.Output<string[] | undefined>;
    readonly rejectedPatchesAction: pulumi.Output<string | undefined>;
    readonly sources: pulumi.Output<outputs.ssm.PatchBaselinePatchSource[] | undefined>;
    readonly tags: pulumi.Output<outputs.ssm.PatchBaselineTag[] | undefined>;
    /**
     * Create a PatchBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: PatchBaselineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PatchBaseline resource.
 */
export interface PatchBaselineArgs {
    approvalRules?: pulumi.Input<inputs.ssm.PatchBaselineRuleGroupArgs>;
    approvedPatches?: pulumi.Input<pulumi.Input<string>[]>;
    approvedPatchesComplianceLevel?: pulumi.Input<string>;
    approvedPatchesEnableNonSecurity?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    globalFilters?: pulumi.Input<inputs.ssm.PatchBaselinePatchFilterGroupArgs>;
    name?: pulumi.Input<string>;
    operatingSystem?: pulumi.Input<string>;
    patchGroups?: pulumi.Input<pulumi.Input<string>[]>;
    rejectedPatches?: pulumi.Input<pulumi.Input<string>[]>;
    rejectedPatchesAction?: pulumi.Input<string>;
    sources?: pulumi.Input<pulumi.Input<inputs.ssm.PatchBaselinePatchSourceArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ssm.PatchBaselineTagArgs>[]>;
}
