"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PatchBaseline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::SSM::PatchBaseline
 *
 * @deprecated PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class PatchBaseline extends pulumi.CustomResource {
    /**
     * Create a PatchBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("PatchBaseline is deprecated: PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["approvalRules"] = args ? args.approvalRules : undefined;
            inputs["approvedPatches"] = args ? args.approvedPatches : undefined;
            inputs["approvedPatchesComplianceLevel"] = args ? args.approvedPatchesComplianceLevel : undefined;
            inputs["approvedPatchesEnableNonSecurity"] = args ? args.approvedPatchesEnableNonSecurity : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["globalFilters"] = args ? args.globalFilters : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["operatingSystem"] = args ? args.operatingSystem : undefined;
            inputs["patchGroups"] = args ? args.patchGroups : undefined;
            inputs["rejectedPatches"] = args ? args.rejectedPatches : undefined;
            inputs["rejectedPatchesAction"] = args ? args.rejectedPatchesAction : undefined;
            inputs["sources"] = args ? args.sources : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        else {
            inputs["approvalRules"] = undefined /*out*/;
            inputs["approvedPatches"] = undefined /*out*/;
            inputs["approvedPatchesComplianceLevel"] = undefined /*out*/;
            inputs["approvedPatchesEnableNonSecurity"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["globalFilters"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["operatingSystem"] = undefined /*out*/;
            inputs["patchGroups"] = undefined /*out*/;
            inputs["rejectedPatches"] = undefined /*out*/;
            inputs["rejectedPatchesAction"] = undefined /*out*/;
            inputs["sources"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(PatchBaseline.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PatchBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("PatchBaseline is deprecated: PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new PatchBaseline(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PatchBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PatchBaseline.__pulumiType;
    }
}
exports.PatchBaseline = PatchBaseline;
/** @internal */
PatchBaseline.__pulumiType = 'aws-native:ssm:PatchBaseline';
//# sourceMappingURL=patchBaseline.js.map