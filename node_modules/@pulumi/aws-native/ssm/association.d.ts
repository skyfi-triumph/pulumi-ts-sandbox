import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
 */
export declare class Association extends pulumi.CustomResource {
    /**
     * Get an existing Association resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Association;
    /**
     * Returns true if the given object is an instance of Association.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Association;
    readonly applyOnlyAtCronInterval: pulumi.Output<boolean | undefined>;
    /**
     * Unique identifier of the association.
     */
    readonly associationId: pulumi.Output<string>;
    /**
     * The name of the association.
     */
    readonly associationName: pulumi.Output<string | undefined>;
    readonly automationTargetParameterName: pulumi.Output<string | undefined>;
    readonly calendarNames: pulumi.Output<string[] | undefined>;
    readonly complianceSeverity: pulumi.Output<enums.ssm.AssociationComplianceSeverity | undefined>;
    /**
     * The version of the SSM document to associate with the target.
     */
    readonly documentVersion: pulumi.Output<string | undefined>;
    /**
     * The ID of the instance that the SSM document is associated with.
     */
    readonly instanceId: pulumi.Output<string | undefined>;
    readonly maxConcurrency: pulumi.Output<string | undefined>;
    readonly maxErrors: pulumi.Output<string | undefined>;
    /**
     * The name of the SSM document.
     */
    readonly name: pulumi.Output<string>;
    readonly outputLocation: pulumi.Output<outputs.ssm.AssociationInstanceAssociationOutputLocation | undefined>;
    /**
     * Parameter values that the SSM document uses at runtime.
     */
    readonly parameters: pulumi.Output<any | undefined>;
    /**
     * A Cron or Rate expression that specifies when the association is applied to the target.
     */
    readonly scheduleExpression: pulumi.Output<string | undefined>;
    readonly syncCompliance: pulumi.Output<enums.ssm.AssociationSyncCompliance | undefined>;
    /**
     * The targets that the SSM document sends commands to.
     */
    readonly targets: pulumi.Output<outputs.ssm.AssociationTarget[] | undefined>;
    readonly waitForSuccessTimeoutSeconds: pulumi.Output<number | undefined>;
    /**
     * Create a Association resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Association resource.
 */
export interface AssociationArgs {
    applyOnlyAtCronInterval?: pulumi.Input<boolean>;
    /**
     * The name of the association.
     */
    associationName?: pulumi.Input<string>;
    automationTargetParameterName?: pulumi.Input<string>;
    calendarNames?: pulumi.Input<pulumi.Input<string>[]>;
    complianceSeverity?: pulumi.Input<enums.ssm.AssociationComplianceSeverity>;
    /**
     * The version of the SSM document to associate with the target.
     */
    documentVersion?: pulumi.Input<string>;
    /**
     * The ID of the instance that the SSM document is associated with.
     */
    instanceId?: pulumi.Input<string>;
    maxConcurrency?: pulumi.Input<string>;
    maxErrors?: pulumi.Input<string>;
    /**
     * The name of the SSM document.
     */
    name?: pulumi.Input<string>;
    outputLocation?: pulumi.Input<inputs.ssm.AssociationInstanceAssociationOutputLocationArgs>;
    /**
     * Parameter values that the SSM document uses at runtime.
     */
    parameters?: any;
    /**
     * A Cron or Rate expression that specifies when the association is applied to the target.
     */
    scheduleExpression?: pulumi.Input<string>;
    syncCompliance?: pulumi.Input<enums.ssm.AssociationSyncCompliance>;
    /**
     * The targets that the SSM document sends commands to.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.ssm.AssociationTargetArgs>[]>;
    waitForSuccessTimeoutSeconds?: pulumi.Input<number>;
}
