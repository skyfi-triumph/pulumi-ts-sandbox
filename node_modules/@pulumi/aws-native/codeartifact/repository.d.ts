import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * The resource schema to create a CodeArtifact repository.
 */
export declare class Repository extends pulumi.CustomResource {
    /**
     * Get an existing Repository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Repository;
    /**
     * Returns true if the given object is an instance of Repository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Repository;
    /**
     * The ARN of the repository.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A text description of the repository.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the domain that contains the repository.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The 12-digit account ID of the AWS account that owns the domain.
     */
    readonly domainOwner: pulumi.Output<string>;
    /**
     * A list of external connections associated with the repository.
     */
    readonly externalConnections: pulumi.Output<string[] | undefined>;
    /**
     * The name of the repository. This is used for GetAtt
     */
    readonly name: pulumi.Output<string>;
    /**
     * The access control resource policy on the provided repository.
     */
    readonly permissionsPolicyDocument: pulumi.Output<any | undefined>;
    /**
     * The name of the repository.
     */
    readonly repositoryName: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.codeartifact.RepositoryTag[] | undefined>;
    /**
     * A list of upstream repositories associated with the repository.
     */
    readonly upstreams: pulumi.Output<string[] | undefined>;
    /**
     * Create a Repository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RepositoryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Repository resource.
 */
export interface RepositoryArgs {
    /**
     * A text description of the repository.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of external connections associated with the repository.
     */
    externalConnections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The access control resource policy on the provided repository.
     */
    permissionsPolicyDocument?: any;
    /**
     * The name of the repository.
     */
    repositoryName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.codeartifact.RepositoryTagArgs>[]>;
    /**
     * A list of upstream repositories associated with the repository.
     */
    upstreams?: pulumi.Input<pulumi.Input<string>[]>;
}
