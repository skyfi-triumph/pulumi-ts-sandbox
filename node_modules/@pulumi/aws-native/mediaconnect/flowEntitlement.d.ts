import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource schema for AWS::MediaConnect::FlowEntitlement
 */
export declare class FlowEntitlement extends pulumi.CustomResource {
    /**
     * Get an existing FlowEntitlement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FlowEntitlement;
    /**
     * Returns true if the given object is an instance of FlowEntitlement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FlowEntitlement;
    /**
     * Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
     */
    readonly dataTransferSubscriberFeePercent: pulumi.Output<number | undefined>;
    /**
     * A description of the entitlement.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The type of encryption that will be used on the output that is associated with this entitlement.
     */
    readonly encryption: pulumi.Output<outputs.mediaconnect.FlowEntitlementEncryption | undefined>;
    /**
     * The ARN of the entitlement.
     */
    readonly entitlementArn: pulumi.Output<string>;
    /**
     *  An indication of whether the entitlement is enabled.
     */
    readonly entitlementStatus: pulumi.Output<enums.mediaconnect.FlowEntitlementEntitlementStatus | undefined>;
    /**
     * The ARN of the flow.
     */
    readonly flowArn: pulumi.Output<string>;
    /**
     * The name of the entitlement.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
     */
    readonly subscribers: pulumi.Output<string[]>;
    /**
     * Create a FlowEntitlement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowEntitlementArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FlowEntitlement resource.
 */
export interface FlowEntitlementArgs {
    /**
     * Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
     */
    dataTransferSubscriberFeePercent?: pulumi.Input<number>;
    /**
     * A description of the entitlement.
     */
    description: pulumi.Input<string>;
    /**
     * The type of encryption that will be used on the output that is associated with this entitlement.
     */
    encryption?: pulumi.Input<inputs.mediaconnect.FlowEntitlementEncryptionArgs>;
    /**
     *  An indication of whether the entitlement is enabled.
     */
    entitlementStatus?: pulumi.Input<enums.mediaconnect.FlowEntitlementEntitlementStatus>;
    /**
     * The ARN of the flow.
     */
    flowArn: pulumi.Input<string>;
    /**
     * The name of the entitlement.
     */
    name?: pulumi.Input<string>;
    /**
     * The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
     */
    subscribers: pulumi.Input<pulumi.Input<string>[]>;
}
