import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * A signing profile is a signing template that can be used to carry out a pre-defined signing job.
 */
export declare class SigningProfile extends pulumi.CustomResource {
    /**
     * Get an existing SigningProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SigningProfile;
    /**
     * Returns true if the given object is an instance of SigningProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SigningProfile;
    /**
     * The Amazon Resource Name (ARN) of the specified signing profile.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the target signing platform.
     */
    readonly platformId: pulumi.Output<enums.signer.SigningProfilePlatformId>;
    /**
     * A name for the signing profile. AWS CloudFormation generates a unique physical ID and uses that ID for the signing profile name.
     */
    readonly profileName: pulumi.Output<string>;
    /**
     * A version for the signing profile. AWS Signer generates a unique version for each profile of the same profile name.
     */
    readonly profileVersion: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the specified signing profile version.
     */
    readonly profileVersionArn: pulumi.Output<string>;
    /**
     * Signature validity period of the profile.
     */
    readonly signatureValidityPeriod: pulumi.Output<outputs.signer.SigningProfileSignatureValidityPeriod | undefined>;
    /**
     * A list of tags associated with the signing profile.
     */
    readonly tags: pulumi.Output<outputs.signer.SigningProfileTag[] | undefined>;
    /**
     * Create a SigningProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SigningProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SigningProfile resource.
 */
export interface SigningProfileArgs {
    /**
     * The ID of the target signing platform.
     */
    platformId: pulumi.Input<enums.signer.SigningProfilePlatformId>;
    /**
     * Signature validity period of the profile.
     */
    signatureValidityPeriod?: pulumi.Input<inputs.signer.SigningProfileSignatureValidityPeriodArgs>;
    /**
     * A list of tags associated with the signing profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.signer.SigningProfileTagArgs>[]>;
}
