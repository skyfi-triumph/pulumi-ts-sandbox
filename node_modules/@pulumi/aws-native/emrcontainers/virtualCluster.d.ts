import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Schema of AWS::EMRContainers::VirtualCluster Type
 */
export declare class VirtualCluster extends pulumi.CustomResource {
    /**
     * Get an existing VirtualCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualCluster;
    /**
     * Returns true if the given object is an instance of VirtualCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualCluster;
    readonly arn: pulumi.Output<string>;
    /**
     * Container provider of the virtual cluster.
     */
    readonly containerProvider: pulumi.Output<outputs.emrcontainers.VirtualClusterContainerProvider>;
    /**
     * Name of the virtual cluster.
     */
    readonly name: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this virtual cluster.
     */
    readonly tags: pulumi.Output<outputs.emrcontainers.VirtualClusterTag[] | undefined>;
    /**
     * Create a VirtualCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualCluster resource.
 */
export interface VirtualClusterArgs {
    /**
     * Container provider of the virtual cluster.
     */
    containerProvider: pulumi.Input<inputs.emrcontainers.VirtualClusterContainerProviderArgs>;
    /**
     * Name of the virtual cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this virtual cluster.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.emrcontainers.VirtualClusterTagArgs>[]>;
}
