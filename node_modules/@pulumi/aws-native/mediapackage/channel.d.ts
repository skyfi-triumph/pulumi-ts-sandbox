import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::MediaPackage::Channel
 */
export declare class Channel extends pulumi.CustomResource {
    /**
     * Get an existing Channel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Channel;
    /**
     * Returns true if the given object is an instance of Channel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Channel;
    /**
     * The Amazon Resource Name (ARN) assigned to the Channel.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A short text description of the Channel.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The configuration parameters for egress access logging.
     */
    readonly egressAccessLogs: pulumi.Output<outputs.mediapackage.ChannelLogConfiguration | undefined>;
    /**
     * A short text description of the Channel.
     */
    readonly hlsIngest: pulumi.Output<outputs.mediapackage.ChannelHlsIngest>;
    /**
     * The configuration parameters for egress access logging.
     */
    readonly ingressAccessLogs: pulumi.Output<outputs.mediapackage.ChannelLogConfiguration | undefined>;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags: pulumi.Output<outputs.mediapackage.ChannelTag[] | undefined>;
    /**
     * Create a Channel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ChannelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Channel resource.
 */
export interface ChannelArgs {
    /**
     * A short text description of the Channel.
     */
    description?: pulumi.Input<string>;
    /**
     * The configuration parameters for egress access logging.
     */
    egressAccessLogs?: pulumi.Input<inputs.mediapackage.ChannelLogConfigurationArgs>;
    /**
     * The configuration parameters for egress access logging.
     */
    ingressAccessLogs?: pulumi.Input<inputs.mediapackage.ChannelLogConfigurationArgs>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.mediapackage.ChannelTagArgs>[]>;
}
