import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::MediaPackage::PackagingGroup
 */
export declare class PackagingGroup extends pulumi.CustomResource {
    /**
     * Get an existing PackagingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PackagingGroup;
    /**
     * Returns true if the given object is an instance of PackagingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PackagingGroup;
    /**
     * The ARN of the PackagingGroup.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * CDN Authorization
     */
    readonly authorization: pulumi.Output<outputs.mediapackage.PackagingGroupAuthorization | undefined>;
    /**
     * The fully qualified domain name for Assets in the PackagingGroup.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The configuration parameters for egress access logging.
     */
    readonly egressAccessLogs: pulumi.Output<outputs.mediapackage.PackagingGroupLogConfiguration | undefined>;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags: pulumi.Output<outputs.mediapackage.PackagingGroupTag[] | undefined>;
    /**
     * Create a PackagingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PackagingGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PackagingGroup resource.
 */
export interface PackagingGroupArgs {
    /**
     * CDN Authorization
     */
    authorization?: pulumi.Input<inputs.mediapackage.PackagingGroupAuthorizationArgs>;
    /**
     * The configuration parameters for egress access logging.
     */
    egressAccessLogs?: pulumi.Input<inputs.mediapackage.PackagingGroupLogConfigurationArgs>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.mediapackage.PackagingGroupTagArgs>[]>;
}
