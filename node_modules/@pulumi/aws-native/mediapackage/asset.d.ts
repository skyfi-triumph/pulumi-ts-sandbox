import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::MediaPackage::Asset
 */
export declare class Asset extends pulumi.CustomResource {
    /**
     * Get an existing Asset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Asset;
    /**
     * Returns true if the given object is an instance of Asset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Asset;
    /**
     * The ARN of the Asset.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The time the Asset was initially submitted for Ingest.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The list of egress endpoints available for the Asset.
     */
    readonly egressEndpoints: pulumi.Output<outputs.mediapackage.AssetEgressEndpoint[]>;
    /**
     * The ID of the PackagingGroup for the Asset.
     */
    readonly packagingGroupId: pulumi.Output<string>;
    /**
     * The resource ID to include in SPEKE key requests.
     */
    readonly resourceId: pulumi.Output<string | undefined>;
    /**
     * ARN of the source object in S3.
     */
    readonly sourceArn: pulumi.Output<string>;
    /**
     * The IAM role_arn used to access the source S3 bucket.
     */
    readonly sourceRoleArn: pulumi.Output<string>;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags: pulumi.Output<outputs.mediapackage.AssetTag[] | undefined>;
    /**
     * Create a Asset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Asset resource.
 */
export interface AssetArgs {
    /**
     * The ID of the PackagingGroup for the Asset.
     */
    packagingGroupId: pulumi.Input<string>;
    /**
     * The resource ID to include in SPEKE key requests.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * ARN of the source object in S3.
     */
    sourceArn: pulumi.Input<string>;
    /**
     * The IAM role_arn used to access the source S3 bucket.
     */
    sourceRoleArn: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.mediapackage.AssetTagArgs>[]>;
}
