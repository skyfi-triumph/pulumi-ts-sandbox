import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Creates an AWS Firewall Manager policy.
 */
export declare class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Policy;
    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Policy;
    readonly arn: pulumi.Output<string>;
    readonly deleteAllPolicyResources: pulumi.Output<boolean | undefined>;
    readonly excludeMap: pulumi.Output<outputs.fms.PolicyIEMap | undefined>;
    readonly excludeResourceTags: pulumi.Output<boolean>;
    readonly includeMap: pulumi.Output<outputs.fms.PolicyIEMap | undefined>;
    readonly policyName: pulumi.Output<string>;
    readonly remediationEnabled: pulumi.Output<boolean>;
    readonly resourceTags: pulumi.Output<outputs.fms.PolicyResourceTag[] | undefined>;
    readonly resourceType: pulumi.Output<string>;
    readonly resourceTypeList: pulumi.Output<string[] | undefined>;
    readonly resourcesCleanUp: pulumi.Output<boolean | undefined>;
    readonly securityServicePolicyData: pulumi.Output<outputs.fms.SecurityServicePolicyDataProperties>;
    readonly tags: pulumi.Output<outputs.fms.PolicyTag[] | undefined>;
    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    deleteAllPolicyResources?: pulumi.Input<boolean>;
    excludeMap?: pulumi.Input<inputs.fms.PolicyIEMapArgs>;
    excludeResourceTags: pulumi.Input<boolean>;
    includeMap?: pulumi.Input<inputs.fms.PolicyIEMapArgs>;
    policyName?: pulumi.Input<string>;
    remediationEnabled: pulumi.Input<boolean>;
    resourceTags?: pulumi.Input<pulumi.Input<inputs.fms.PolicyResourceTagArgs>[]>;
    resourceType: pulumi.Input<string>;
    resourceTypeList?: pulumi.Input<pulumi.Input<string>[]>;
    resourcesCleanUp?: pulumi.Input<boolean>;
    securityServicePolicyData: pulumi.Input<inputs.fms.SecurityServicePolicyDataPropertiesArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.fms.PolicyTagArgs>[]>;
}
