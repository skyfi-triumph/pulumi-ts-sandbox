import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * A Bot Alias enables you to change the version of a bot without updating applications that use the bot
 */
export declare class BotAlias extends pulumi.CustomResource {
    /**
     * Get an existing BotAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BotAlias;
    /**
     * Returns true if the given object is an instance of BotAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BotAlias;
    readonly arn: pulumi.Output<string>;
    readonly botAliasId: pulumi.Output<string>;
    readonly botAliasLocaleSettings: pulumi.Output<outputs.lex.BotAliasLocaleSettingsItem[] | undefined>;
    readonly botAliasName: pulumi.Output<string>;
    readonly botAliasStatus: pulumi.Output<enums.lex.BotAliasStatus>;
    /**
     * A list of tags to add to the bot alias.
     */
    readonly botAliasTags: pulumi.Output<outputs.lex.BotAliasTag[] | undefined>;
    readonly botId: pulumi.Output<string>;
    readonly botVersion: pulumi.Output<string | undefined>;
    readonly conversationLogSettings: pulumi.Output<outputs.lex.BotAliasConversationLogSettings | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     */
    readonly sentimentAnalysisSettings: pulumi.Output<outputs.lex.SentimentAnalysisSettingsProperties | undefined>;
    /**
     * Create a BotAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotAliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BotAlias resource.
 */
export interface BotAliasArgs {
    botAliasLocaleSettings?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasLocaleSettingsItemArgs>[]>;
    botAliasName?: pulumi.Input<string>;
    /**
     * A list of tags to add to the bot alias.
     */
    botAliasTags?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasTagArgs>[]>;
    botId: pulumi.Input<string>;
    botVersion?: pulumi.Input<string>;
    conversationLogSettings?: pulumi.Input<inputs.lex.BotAliasConversationLogSettingsArgs>;
    description?: pulumi.Input<string>;
    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     */
    sentimentAnalysisSettings?: pulumi.Input<inputs.lex.SentimentAnalysisSettingsPropertiesArgs>;
}
