import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A version is a numbered snapshot of your work that you can publish for use in different parts of your workflow, such as development, beta deployment, and production.
 */
export declare class BotVersion extends pulumi.CustomResource {
    /**
     * Get an existing BotVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BotVersion;
    /**
     * Returns true if the given object is an instance of BotVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BotVersion;
    readonly botId: pulumi.Output<string>;
    readonly botVersion: pulumi.Output<string>;
    readonly botVersionLocaleSpecification: pulumi.Output<outputs.lex.BotVersionLocaleSpecificationItemProperties[]>;
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Create a BotVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BotVersion resource.
 */
export interface BotVersionArgs {
    botId: pulumi.Input<string>;
    botVersionLocaleSpecification: pulumi.Input<pulumi.Input<inputs.lex.BotVersionLocaleSpecificationItemPropertiesArgs>[]>;
    description?: pulumi.Input<string>;
}
