import * as pulumi from "@pulumi/pulumi";
/**
 * Resource schema for AWS::Chatbot::SlackChannelConfiguration.
 */
export declare class SlackChannelConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing SlackChannelConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SlackChannelConfiguration;
    /**
     * Returns true if the given object is an instance of SlackChannelConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SlackChannelConfiguration;
    /**
     * Amazon Resource Name (ARN) of the configuration
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name of the configuration
     */
    readonly configurationName: pulumi.Output<string>;
    /**
     * The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.
     */
    readonly guardrailPolicies: pulumi.Output<string[] | undefined>;
    /**
     * The ARN of the IAM role that defines the permissions for AWS Chatbot
     */
    readonly iamRoleArn: pulumi.Output<string>;
    /**
     * Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs
     */
    readonly loggingLevel: pulumi.Output<string | undefined>;
    /**
     * The id of the Slack channel
     */
    readonly slackChannelId: pulumi.Output<string>;
    /**
     * The id of the Slack workspace
     */
    readonly slackWorkspaceId: pulumi.Output<string>;
    /**
     * ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications.
     */
    readonly snsTopicArns: pulumi.Output<string[] | undefined>;
    /**
     * Enables use of a user role requirement in your chat configuration
     */
    readonly userRoleRequired: pulumi.Output<boolean | undefined>;
    /**
     * Create a SlackChannelConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlackChannelConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SlackChannelConfiguration resource.
 */
export interface SlackChannelConfigurationArgs {
    /**
     * The name of the configuration
     */
    configurationName: pulumi.Input<string>;
    /**
     * The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.
     */
    guardrailPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the IAM role that defines the permissions for AWS Chatbot
     */
    iamRoleArn: pulumi.Input<string>;
    /**
     * Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs
     */
    loggingLevel?: pulumi.Input<string>;
    /**
     * The id of the Slack channel
     */
    slackChannelId: pulumi.Input<string>;
    /**
     * The id of the Slack workspace
     */
    slackWorkspaceId: pulumi.Input<string>;
    /**
     * ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications.
     */
    snsTopicArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables use of a user role requirement in your chat configuration
     */
    userRoleRequired?: pulumi.Input<boolean>;
}
