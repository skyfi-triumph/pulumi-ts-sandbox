import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::OpsWorksCM::Server
 */
export declare class Server extends pulumi.CustomResource {
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Server;
    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Server;
    readonly arn: pulumi.Output<string>;
    readonly associatePublicIpAddress: pulumi.Output<boolean | undefined>;
    readonly backupId: pulumi.Output<string | undefined>;
    readonly backupRetentionCount: pulumi.Output<number | undefined>;
    readonly customCertificate: pulumi.Output<string | undefined>;
    readonly customDomain: pulumi.Output<string | undefined>;
    readonly customPrivateKey: pulumi.Output<string | undefined>;
    readonly disableAutomatedBackup: pulumi.Output<boolean | undefined>;
    readonly endpoint: pulumi.Output<string>;
    readonly engine: pulumi.Output<string | undefined>;
    readonly engineAttributes: pulumi.Output<outputs.opsworkscm.ServerEngineAttribute[] | undefined>;
    readonly engineModel: pulumi.Output<string | undefined>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly instanceProfileArn: pulumi.Output<string>;
    readonly instanceType: pulumi.Output<string>;
    readonly keyPair: pulumi.Output<string | undefined>;
    readonly preferredBackupWindow: pulumi.Output<string | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly serverName: pulumi.Output<string | undefined>;
    readonly serviceRoleArn: pulumi.Output<string>;
    readonly subnetIds: pulumi.Output<string[] | undefined>;
    readonly tags: pulumi.Output<outputs.opsworkscm.ServerTag[] | undefined>;
    /**
     * Create a Server resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Server resource.
 */
export interface ServerArgs {
    associatePublicIpAddress?: pulumi.Input<boolean>;
    backupId?: pulumi.Input<string>;
    backupRetentionCount?: pulumi.Input<number>;
    customCertificate?: pulumi.Input<string>;
    customDomain?: pulumi.Input<string>;
    customPrivateKey?: pulumi.Input<string>;
    disableAutomatedBackup?: pulumi.Input<boolean>;
    engine?: pulumi.Input<string>;
    engineAttributes?: pulumi.Input<pulumi.Input<inputs.opsworkscm.ServerEngineAttributeArgs>[]>;
    engineModel?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    instanceProfileArn: pulumi.Input<string>;
    instanceType: pulumi.Input<string>;
    keyPair?: pulumi.Input<string>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    serverName?: pulumi.Input<string>;
    serviceRoleArn: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.opsworkscm.ServerTagArgs>[]>;
}
