import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Version: None. Resource Type definition for AWS::DynamoDB::GlobalTable
 */
export declare class GlobalTable extends pulumi.CustomResource {
    /**
     * Get an existing GlobalTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GlobalTable;
    /**
     * Returns true if the given object is an instance of GlobalTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GlobalTable;
    readonly arn: pulumi.Output<string>;
    readonly attributeDefinitions: pulumi.Output<outputs.dynamodb.GlobalTableAttributeDefinition[]>;
    readonly billingMode: pulumi.Output<string | undefined>;
    readonly globalSecondaryIndexes: pulumi.Output<outputs.dynamodb.GlobalTableGlobalSecondaryIndex[] | undefined>;
    readonly keySchema: pulumi.Output<outputs.dynamodb.GlobalTableKeySchema[]>;
    readonly localSecondaryIndexes: pulumi.Output<outputs.dynamodb.GlobalTableLocalSecondaryIndex[] | undefined>;
    readonly replicas: pulumi.Output<outputs.dynamodb.GlobalTableReplicaSpecification[]>;
    readonly sSESpecification: pulumi.Output<outputs.dynamodb.GlobalTableSSESpecification | undefined>;
    readonly streamArn: pulumi.Output<string>;
    readonly streamSpecification: pulumi.Output<outputs.dynamodb.GlobalTableStreamSpecification | undefined>;
    readonly tableId: pulumi.Output<string>;
    readonly tableName: pulumi.Output<string | undefined>;
    readonly timeToLiveSpecification: pulumi.Output<outputs.dynamodb.GlobalTableTimeToLiveSpecification | undefined>;
    readonly writeProvisionedThroughputSettings: pulumi.Output<outputs.dynamodb.GlobalTableWriteProvisionedThroughputSettings | undefined>;
    /**
     * Create a GlobalTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalTableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GlobalTable resource.
 */
export interface GlobalTableArgs {
    attributeDefinitions: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableAttributeDefinitionArgs>[]>;
    billingMode?: pulumi.Input<string>;
    globalSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableGlobalSecondaryIndexArgs>[]>;
    keySchema: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableKeySchemaArgs>[]>;
    localSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableLocalSecondaryIndexArgs>[]>;
    replicas: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableReplicaSpecificationArgs>[]>;
    sSESpecification?: pulumi.Input<inputs.dynamodb.GlobalTableSSESpecificationArgs>;
    streamSpecification?: pulumi.Input<inputs.dynamodb.GlobalTableStreamSpecificationArgs>;
    tableName?: pulumi.Input<string>;
    timeToLiveSpecification?: pulumi.Input<inputs.dynamodb.GlobalTableTimeToLiveSpecificationArgs>;
    writeProvisionedThroughputSettings?: pulumi.Input<inputs.dynamodb.GlobalTableWriteProvisionedThroughputSettingsArgs>;
}
