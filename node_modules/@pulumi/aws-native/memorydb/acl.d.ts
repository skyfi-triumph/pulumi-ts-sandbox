import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::MemoryDB::ACL
 */
export declare class ACL extends pulumi.CustomResource {
    /**
     * Get an existing ACL resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ACL;
    /**
     * Returns true if the given object is an instance of ACL.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ACL;
    /**
     * The name of the acl.
     */
    readonly aCLName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the acl.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Indicates acl status. Can be "creating", "active", "modifying", "deleting".
     */
    readonly status: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this cluster.
     */
    readonly tags: pulumi.Output<outputs.memorydb.ACLTag[] | undefined>;
    /**
     * List of users associated to this acl.
     */
    readonly userNames: pulumi.Output<string[] | undefined>;
    /**
     * Create a ACL resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ACLArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ACL resource.
 */
export interface ACLArgs {
    /**
     * The name of the acl.
     */
    aCLName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this cluster.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.memorydb.ACLTagArgs>[]>;
    /**
     * List of users associated to this acl.
     */
    userNames?: pulumi.Input<pulumi.Input<string>[]>;
}
