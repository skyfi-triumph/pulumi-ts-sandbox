export declare const AnomalyDetectorCsvFormatDescriptorFileCompression: {
    readonly None: "NONE";
    readonly Gzip: "GZIP";
};
export declare type AnomalyDetectorCsvFormatDescriptorFileCompression = (typeof AnomalyDetectorCsvFormatDescriptorFileCompression)[keyof typeof AnomalyDetectorCsvFormatDescriptorFileCompression];
export declare const AnomalyDetectorFrequency: {
    readonly Pt5m: "PT5M";
    readonly Pt10m: "PT10M";
    readonly Pt1h: "PT1H";
    readonly P1d: "P1D";
};
/**
 * Frequency of anomaly detection
 */
export declare type AnomalyDetectorFrequency = (typeof AnomalyDetectorFrequency)[keyof typeof AnomalyDetectorFrequency];
export declare const AnomalyDetectorJsonFormatDescriptorFileCompression: {
    readonly None: "NONE";
    readonly Gzip: "GZIP";
};
export declare type AnomalyDetectorJsonFormatDescriptorFileCompression = (typeof AnomalyDetectorJsonFormatDescriptorFileCompression)[keyof typeof AnomalyDetectorJsonFormatDescriptorFileCompression];
export declare const AnomalyDetectorMetricAggregationFunction: {
    readonly Avg: "AVG";
    readonly Sum: "SUM";
};
/**
 * Operator used to aggregate metric values
 */
export declare type AnomalyDetectorMetricAggregationFunction = (typeof AnomalyDetectorMetricAggregationFunction)[keyof typeof AnomalyDetectorMetricAggregationFunction];
export declare const AnomalyDetectorMetricSetMetricSetFrequency: {
    readonly Pt5m: "PT5M";
    readonly Pt10m: "PT10M";
    readonly Pt1h: "PT1H";
    readonly P1d: "P1D";
};
/**
 * A frequency period to aggregate the data
 */
export declare type AnomalyDetectorMetricSetMetricSetFrequency = (typeof AnomalyDetectorMetricSetMetricSetFrequency)[keyof typeof AnomalyDetectorMetricSetMetricSetFrequency];
