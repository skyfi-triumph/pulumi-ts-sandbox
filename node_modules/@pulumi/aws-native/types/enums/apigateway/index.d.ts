export declare const MethodAuthorizationType: {
    readonly None: "NONE";
    readonly AwsIam: "AWS_IAM";
    readonly Custom: "CUSTOM";
    readonly CognitoUserPools: "COGNITO_USER_POOLS";
};
/**
 * The method's authorization type.
 */
export declare type MethodAuthorizationType = (typeof MethodAuthorizationType)[keyof typeof MethodAuthorizationType];
export declare const MethodIntegrationConnectionType: {
    readonly Internet: "INTERNET";
    readonly VpcLink: "VPC_LINK";
};
/**
 * The type of the network connection to the integration endpoint.
 */
export declare type MethodIntegrationConnectionType = (typeof MethodIntegrationConnectionType)[keyof typeof MethodIntegrationConnectionType];
export declare const MethodIntegrationContentHandling: {
    readonly ConvertToBinary: "CONVERT_TO_BINARY";
    readonly ConvertToText: "CONVERT_TO_TEXT";
};
/**
 * Specifies how to handle request payload content type conversions.
 */
export declare type MethodIntegrationContentHandling = (typeof MethodIntegrationContentHandling)[keyof typeof MethodIntegrationContentHandling];
export declare const MethodIntegrationPassthroughBehavior: {
    readonly WhenNoMatch: "WHEN_NO_MATCH";
    readonly WhenNoTemplates: "WHEN_NO_TEMPLATES";
    readonly Never: "NEVER";
};
/**
 * Indicates when API Gateway passes requests to the targeted backend.
 */
export declare type MethodIntegrationPassthroughBehavior = (typeof MethodIntegrationPassthroughBehavior)[keyof typeof MethodIntegrationPassthroughBehavior];
export declare const MethodIntegrationResponseContentHandling: {
    readonly ConvertToBinary: "CONVERT_TO_BINARY";
    readonly ConvertToText: "CONVERT_TO_TEXT";
};
/**
 * Specifies how to handle request payload content type conversions.
 */
export declare type MethodIntegrationResponseContentHandling = (typeof MethodIntegrationResponseContentHandling)[keyof typeof MethodIntegrationResponseContentHandling];
export declare const MethodIntegrationType: {
    readonly Aws: "AWS";
    readonly AwsProxy: "AWS_PROXY";
    readonly Http: "HTTP";
    readonly HttpProxy: "HTTP_PROXY";
    readonly Mock: "MOCK";
};
/**
 * The type of backend that your method is running.
 */
export declare type MethodIntegrationType = (typeof MethodIntegrationType)[keyof typeof MethodIntegrationType];
export declare const UsagePlanKeyKeyType: {
    readonly ApiKey: "API_KEY";
};
/**
 * The type of usage plan key. Currently, the only valid key type is API_KEY.
 */
export declare type UsagePlanKeyKeyType = (typeof UsagePlanKeyKeyType)[keyof typeof UsagePlanKeyKeyType];
