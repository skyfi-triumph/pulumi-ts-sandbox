export declare const LaunchProfileStreamingClipboardMode: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export declare type LaunchProfileStreamingClipboardMode = (typeof LaunchProfileStreamingClipboardMode)[keyof typeof LaunchProfileStreamingClipboardMode];
export declare const LaunchProfileStreamingInstanceType: {
    readonly G4dnXlarge: "g4dn.xlarge";
    readonly G4dn2xlarge: "g4dn.2xlarge";
    readonly G4dn4xlarge: "g4dn.4xlarge";
    readonly G4dn8xlarge: "g4dn.8xlarge";
    readonly G4dn12xlarge: "g4dn.12xlarge";
    readonly G4dn16xlarge: "g4dn.16xlarge";
};
export declare type LaunchProfileStreamingInstanceType = (typeof LaunchProfileStreamingInstanceType)[keyof typeof LaunchProfileStreamingInstanceType];
export declare const StreamingImageEncryptionConfigurationKeyType: {
    readonly CustomerManagedKey: "CUSTOMER_MANAGED_KEY";
};
/**
 * <p/>
 */
export declare type StreamingImageEncryptionConfigurationKeyType = (typeof StreamingImageEncryptionConfigurationKeyType)[keyof typeof StreamingImageEncryptionConfigurationKeyType];
export declare const StudioComponentInitializationScriptRunContext: {
    readonly SystemInitialization: "SYSTEM_INITIALIZATION";
    readonly UserInitialization: "USER_INITIALIZATION";
};
export declare type StudioComponentInitializationScriptRunContext = (typeof StudioComponentInitializationScriptRunContext)[keyof typeof StudioComponentInitializationScriptRunContext];
export declare const StudioComponentLaunchProfilePlatform: {
    readonly Linux: "LINUX";
    readonly Windows: "WINDOWS";
};
export declare type StudioComponentLaunchProfilePlatform = (typeof StudioComponentLaunchProfilePlatform)[keyof typeof StudioComponentLaunchProfilePlatform];
export declare const StudioComponentSubtype: {
    readonly AwsManagedMicrosoftAd: "AWS_MANAGED_MICROSOFT_AD";
    readonly AmazonFsxForWindows: "AMAZON_FSX_FOR_WINDOWS";
    readonly AmazonFsxForLustre: "AMAZON_FSX_FOR_LUSTRE";
    readonly Custom: "CUSTOM";
};
export declare type StudioComponentSubtype = (typeof StudioComponentSubtype)[keyof typeof StudioComponentSubtype];
export declare const StudioComponentType: {
    readonly ActiveDirectory: "ACTIVE_DIRECTORY";
    readonly SharedFileSystem: "SHARED_FILE_SYSTEM";
    readonly ComputeFarm: "COMPUTE_FARM";
    readonly LicenseService: "LICENSE_SERVICE";
    readonly Custom: "CUSTOM";
};
export declare type StudioComponentType = (typeof StudioComponentType)[keyof typeof StudioComponentType];
export declare const StudioEncryptionConfigurationKeyType: {
    readonly AwsOwnedKey: "AWS_OWNED_KEY";
    readonly CustomerManagedKey: "CUSTOMER_MANAGED_KEY";
};
/**
 * <p>The type of KMS key that is used to encrypt studio data.</p>
 */
export declare type StudioEncryptionConfigurationKeyType = (typeof StudioEncryptionConfigurationKeyType)[keyof typeof StudioEncryptionConfigurationKeyType];
