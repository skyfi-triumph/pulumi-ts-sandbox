export declare const CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment: {
    readonly Warn: "Warn";
    readonly Enforce: "Enforce";
};
/**
 * Indicates how Lambda operations involve updating the code artifact will operate. Default to Warn if not provided
 */
export declare type CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment = (typeof CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment)[keyof typeof CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment];
export declare const EventSourceMappingFunctionResponseTypesItem: {
    readonly ReportBatchItemFailures: "ReportBatchItemFailures";
};
export declare type EventSourceMappingFunctionResponseTypesItem = (typeof EventSourceMappingFunctionResponseTypesItem)[keyof typeof EventSourceMappingFunctionResponseTypesItem];
export declare const EventSourceMappingSourceAccessConfigurationType: {
    readonly BasicAuth: "BASIC_AUTH";
    readonly VpcSubnet: "VPC_SUBNET";
    readonly VpcSecurityGroup: "VPC_SECURITY_GROUP";
    readonly SaslScram512Auth: "SASL_SCRAM_512_AUTH";
    readonly SaslScram256Auth: "SASL_SCRAM_256_AUTH";
    readonly VirtualHost: "VIRTUAL_HOST";
    readonly ClientCertificateTlsAuth: "CLIENT_CERTIFICATE_TLS_AUTH";
    readonly ServerRootCaCertificate: "SERVER_ROOT_CA_CERTIFICATE";
};
/**
 * The type of source access configuration.
 */
export declare type EventSourceMappingSourceAccessConfigurationType = (typeof EventSourceMappingSourceAccessConfigurationType)[keyof typeof EventSourceMappingSourceAccessConfigurationType];
export declare const FunctionArchitecturesItem: {
    readonly X8664: "x86_64";
    readonly Arm64: "arm64";
};
export declare type FunctionArchitecturesItem = (typeof FunctionArchitecturesItem)[keyof typeof FunctionArchitecturesItem];
export declare const FunctionPackageType: {
    readonly Image: "Image";
    readonly Zip: "Zip";
};
/**
 * PackageType.
 */
export declare type FunctionPackageType = (typeof FunctionPackageType)[keyof typeof FunctionPackageType];
export declare const FunctionTracingConfigMode: {
    readonly Active: "Active";
    readonly PassThrough: "PassThrough";
};
/**
 * The tracing mode.
 */
export declare type FunctionTracingConfigMode = (typeof FunctionTracingConfigMode)[keyof typeof FunctionTracingConfigMode];
export declare const UrlAllowMethodsItem: {
    readonly Get: "GET";
    readonly Put: "PUT";
    readonly Head: "HEAD";
    readonly Post: "POST";
    readonly Patch: "PATCH";
    readonly Delete: "DELETE";
    readonly Asterisk: "*";
};
export declare type UrlAllowMethodsItem = (typeof UrlAllowMethodsItem)[keyof typeof UrlAllowMethodsItem];
export declare const UrlAuthorizationType: {
    readonly AwsIam: "AWS_IAM";
    readonly None: "NONE";
};
/**
 * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
 */
export declare type UrlAuthorizationType = (typeof UrlAuthorizationType)[keyof typeof UrlAuthorizationType];
