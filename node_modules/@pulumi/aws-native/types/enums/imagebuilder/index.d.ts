export declare const ComponentPlatform: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * The platform of the component.
 */
export declare type ComponentPlatform = (typeof ComponentPlatform)[keyof typeof ComponentPlatform];
export declare const ComponentType: {
    readonly Build: "BUILD";
    readonly Test: "TEST";
};
/**
 * The type of the component denotes whether the component is used to build the image or only to test it.
 */
export declare type ComponentType = (typeof ComponentType)[keyof typeof ComponentType];
export declare const ContainerRecipeContainerType: {
    readonly Docker: "DOCKER";
};
/**
 * Specifies the type of container, such as Docker.
 */
export declare type ContainerRecipeContainerType = (typeof ContainerRecipeContainerType)[keyof typeof ContainerRecipeContainerType];
export declare const ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType: {
    readonly Standard: "standard";
    readonly Io1: "io1";
    readonly Io2: "io2";
    readonly Gp2: "gp2";
    readonly Gp3: "gp3";
    readonly Sc1: "sc1";
    readonly St1: "st1";
};
/**
 * Use to override the device's volume type.
 */
export declare type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType = (typeof ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)[keyof typeof ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType];
export declare const ContainerRecipePlatformOverride: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * Specifies the operating system platform when you use a custom source image.
 */
export declare type ContainerRecipePlatformOverride = (typeof ContainerRecipePlatformOverride)[keyof typeof ContainerRecipePlatformOverride];
export declare const ContainerRecipeTargetContainerRepositoryService: {
    readonly Ecr: "ECR";
};
/**
 * Specifies the service in which this image was registered.
 */
export declare type ContainerRecipeTargetContainerRepositoryService = (typeof ContainerRecipeTargetContainerRepositoryService)[keyof typeof ContainerRecipeTargetContainerRepositoryService];
export declare const DistributionConfigurationTargetContainerRepositoryService: {
    readonly Ecr: "ECR";
};
/**
 * The service of target container repository.
 */
export declare type DistributionConfigurationTargetContainerRepositoryService = (typeof DistributionConfigurationTargetContainerRepositoryService)[keyof typeof DistributionConfigurationTargetContainerRepositoryService];
export declare const ImagePipelineSchedulePipelineExecutionStartCondition: {
    readonly ExpressionMatchOnly: "EXPRESSION_MATCH_ONLY";
    readonly ExpressionMatchAndDependencyUpdatesAvailable: "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE";
};
/**
 * The condition configures when the pipeline should trigger a new image build.
 */
export declare type ImagePipelineSchedulePipelineExecutionStartCondition = (typeof ImagePipelineSchedulePipelineExecutionStartCondition)[keyof typeof ImagePipelineSchedulePipelineExecutionStartCondition];
export declare const ImagePipelineStatus: {
    readonly Disabled: "DISABLED";
    readonly Enabled: "ENABLED";
};
/**
 * The status of the image pipeline.
 */
export declare type ImagePipelineStatus = (typeof ImagePipelineStatus)[keyof typeof ImagePipelineStatus];
export declare const ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType: {
    readonly Standard: "standard";
    readonly Io1: "io1";
    readonly Io2: "io2";
    readonly Gp2: "gp2";
    readonly Gp3: "gp3";
    readonly Sc1: "sc1";
    readonly St1: "st1";
};
/**
 * Use to override the device's volume type.
 */
export declare type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType = (typeof ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)[keyof typeof ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType];
export declare const InfrastructureConfigurationInstanceMetadataOptionsHttpTokens: {
    readonly Required: "required";
    readonly Optional: "optional";
};
/**
 * Indicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:
 */
export declare type InfrastructureConfigurationInstanceMetadataOptionsHttpTokens = (typeof InfrastructureConfigurationInstanceMetadataOptionsHttpTokens)[keyof typeof InfrastructureConfigurationInstanceMetadataOptionsHttpTokens];
