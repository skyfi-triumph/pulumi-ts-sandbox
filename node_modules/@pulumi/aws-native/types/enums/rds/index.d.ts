export declare const DBProxyAuthFormatAuthScheme: {
    readonly Secrets: "SECRETS";
};
/**
 * The type of authentication that the proxy uses for connections from the proxy to the underlying database.
 */
export declare type DBProxyAuthFormatAuthScheme = (typeof DBProxyAuthFormatAuthScheme)[keyof typeof DBProxyAuthFormatAuthScheme];
export declare const DBProxyAuthFormatIAMAuth: {
    readonly Disabled: "DISABLED";
    readonly Required: "REQUIRED";
};
/**
 * Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
 */
export declare type DBProxyAuthFormatIAMAuth = (typeof DBProxyAuthFormatIAMAuth)[keyof typeof DBProxyAuthFormatIAMAuth];
export declare const DBProxyEndpointTargetRole: {
    readonly ReadWrite: "READ_WRITE";
    readonly ReadOnly: "READ_ONLY";
};
/**
 * A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations.
 */
export declare type DBProxyEndpointTargetRole = (typeof DBProxyEndpointTargetRole)[keyof typeof DBProxyEndpointTargetRole];
export declare const DBProxyEngineFamily: {
    readonly Mysql: "MYSQL";
    readonly Postgresql: "POSTGRESQL";
};
/**
 * The kinds of databases that the proxy can connect to.
 */
export declare type DBProxyEngineFamily = (typeof DBProxyEngineFamily)[keyof typeof DBProxyEngineFamily];
export declare const DBProxyTargetGroupTargetGroupName: {
    readonly Default: "default";
};
/**
 * The identifier for the DBProxyTargetGroup
 */
export declare type DBProxyTargetGroupTargetGroupName = (typeof DBProxyTargetGroupTargetGroupName)[keyof typeof DBProxyTargetGroupTargetGroupName];
export declare const GlobalClusterEngine: {
    readonly Aurora: "aurora";
    readonly AuroraMysql: "aurora-mysql";
    readonly AuroraPostgresql: "aurora-postgresql";
};
/**
 * The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).
 * If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
 */
export declare type GlobalClusterEngine = (typeof GlobalClusterEngine)[keyof typeof GlobalClusterEngine];
