export declare const HealthCheckConfigPropertiesInsufficientDataHealthStatus: {
    readonly Healthy: "Healthy";
    readonly LastKnownStatus: "LastKnownStatus";
    readonly Unhealthy: "Unhealthy";
};
export declare type HealthCheckConfigPropertiesInsufficientDataHealthStatus = (typeof HealthCheckConfigPropertiesInsufficientDataHealthStatus)[keyof typeof HealthCheckConfigPropertiesInsufficientDataHealthStatus];
export declare const HealthCheckConfigPropertiesType: {
    readonly Calculated: "CALCULATED";
    readonly CloudwatchMetric: "CLOUDWATCH_METRIC";
    readonly Http: "HTTP";
    readonly HttpStrMatch: "HTTP_STR_MATCH";
    readonly Https: "HTTPS";
    readonly HttpsStrMatch: "HTTPS_STR_MATCH";
    readonly Tcp: "TCP";
    readonly RecoveryControl: "RECOVERY_CONTROL";
};
export declare type HealthCheckConfigPropertiesType = (typeof HealthCheckConfigPropertiesType)[keyof typeof HealthCheckConfigPropertiesType];
export declare const KeySigningKeyStatus: {
    readonly Active: "ACTIVE";
    readonly Inactive: "INACTIVE";
};
/**
 * A string specifying the initial status of the key signing key (KSK). You can set the value to ACTIVE or INACTIVE.
 */
export declare type KeySigningKeyStatus = (typeof KeySigningKeyStatus)[keyof typeof KeySigningKeyStatus];
