export declare const DetectorEventVariableDataSource: {
    readonly Event: "EVENT";
};
export declare type DetectorEventVariableDataSource = (typeof DetectorEventVariableDataSource)[keyof typeof DetectorEventVariableDataSource];
export declare const DetectorEventVariableDataType: {
    readonly String: "STRING";
    readonly Integer: "INTEGER";
    readonly Float: "FLOAT";
    readonly Boolean: "BOOLEAN";
};
export declare type DetectorEventVariableDataType = (typeof DetectorEventVariableDataType)[keyof typeof DetectorEventVariableDataType];
export declare const DetectorEventVariableVariableType: {
    readonly AuthCode: "AUTH_CODE";
    readonly Avs: "AVS";
    readonly BillingAddressL1: "BILLING_ADDRESS_L1";
    readonly BillingAddressL2: "BILLING_ADDRESS_L2";
    readonly BillingCity: "BILLING_CITY";
    readonly BillingCountry: "BILLING_COUNTRY";
    readonly BillingName: "BILLING_NAME";
    readonly BillingPhone: "BILLING_PHONE";
    readonly BillingState: "BILLING_STATE";
    readonly BillingZip: "BILLING_ZIP";
    readonly CardBin: "CARD_BIN";
    readonly Categorical: "CATEGORICAL";
    readonly CurrencyCode: "CURRENCY_CODE";
    readonly EmailAddress: "EMAIL_ADDRESS";
    readonly Fingerprint: "FINGERPRINT";
    readonly FraudLabel: "FRAUD_LABEL";
    readonly FreeFormText: "FREE_FORM_TEXT";
    readonly IpAddress: "IP_ADDRESS";
    readonly Numeric: "NUMERIC";
    readonly OrderId: "ORDER_ID";
    readonly PaymentType: "PAYMENT_TYPE";
    readonly PhoneNumber: "PHONE_NUMBER";
    readonly Price: "PRICE";
    readonly ProductCategory: "PRODUCT_CATEGORY";
    readonly ShippingAddressL1: "SHIPPING_ADDRESS_L1";
    readonly ShippingAddressL2: "SHIPPING_ADDRESS_L2";
    readonly ShippingCity: "SHIPPING_CITY";
    readonly ShippingCountry: "SHIPPING_COUNTRY";
    readonly ShippingName: "SHIPPING_NAME";
    readonly ShippingPhone: "SHIPPING_PHONE";
    readonly ShippingState: "SHIPPING_STATE";
    readonly ShippingZip: "SHIPPING_ZIP";
    readonly Useragent: "USERAGENT";
};
export declare type DetectorEventVariableVariableType = (typeof DetectorEventVariableVariableType)[keyof typeof DetectorEventVariableVariableType];
export declare const DetectorRuleExecutionMode: {
    readonly FirstMatched: "FIRST_MATCHED";
    readonly AllMatched: "ALL_MATCHED";
};
export declare type DetectorRuleExecutionMode = (typeof DetectorRuleExecutionMode)[keyof typeof DetectorRuleExecutionMode];
export declare const DetectorRuleLanguage: {
    readonly Detectorpl: "DETECTORPL";
};
export declare type DetectorRuleLanguage = (typeof DetectorRuleLanguage)[keyof typeof DetectorRuleLanguage];
export declare const DetectorVersionStatus: {
    readonly Draft: "DRAFT";
    readonly Active: "ACTIVE";
};
/**
 * The desired detector version status for the detector
 */
export declare type DetectorVersionStatus = (typeof DetectorVersionStatus)[keyof typeof DetectorVersionStatus];
export declare const EventTypeEventVariableDataSource: {
    readonly Event: "EVENT";
};
export declare type EventTypeEventVariableDataSource = (typeof EventTypeEventVariableDataSource)[keyof typeof EventTypeEventVariableDataSource];
export declare const EventTypeEventVariableDataType: {
    readonly String: "STRING";
    readonly Integer: "INTEGER";
    readonly Float: "FLOAT";
    readonly Boolean: "BOOLEAN";
};
export declare type EventTypeEventVariableDataType = (typeof EventTypeEventVariableDataType)[keyof typeof EventTypeEventVariableDataType];
export declare const EventTypeEventVariableVariableType: {
    readonly AuthCode: "AUTH_CODE";
    readonly Avs: "AVS";
    readonly BillingAddressL1: "BILLING_ADDRESS_L1";
    readonly BillingAddressL2: "BILLING_ADDRESS_L2";
    readonly BillingCity: "BILLING_CITY";
    readonly BillingCountry: "BILLING_COUNTRY";
    readonly BillingName: "BILLING_NAME";
    readonly BillingPhone: "BILLING_PHONE";
    readonly BillingState: "BILLING_STATE";
    readonly BillingZip: "BILLING_ZIP";
    readonly CardBin: "CARD_BIN";
    readonly Categorical: "CATEGORICAL";
    readonly CurrencyCode: "CURRENCY_CODE";
    readonly EmailAddress: "EMAIL_ADDRESS";
    readonly Fingerprint: "FINGERPRINT";
    readonly FraudLabel: "FRAUD_LABEL";
    readonly FreeFormText: "FREE_FORM_TEXT";
    readonly IpAddress: "IP_ADDRESS";
    readonly Numeric: "NUMERIC";
    readonly OrderId: "ORDER_ID";
    readonly PaymentType: "PAYMENT_TYPE";
    readonly PhoneNumber: "PHONE_NUMBER";
    readonly Price: "PRICE";
    readonly ProductCategory: "PRODUCT_CATEGORY";
    readonly ShippingAddressL1: "SHIPPING_ADDRESS_L1";
    readonly ShippingAddressL2: "SHIPPING_ADDRESS_L2";
    readonly ShippingCity: "SHIPPING_CITY";
    readonly ShippingCountry: "SHIPPING_COUNTRY";
    readonly ShippingName: "SHIPPING_NAME";
    readonly ShippingPhone: "SHIPPING_PHONE";
    readonly ShippingState: "SHIPPING_STATE";
    readonly ShippingZip: "SHIPPING_ZIP";
    readonly Useragent: "USERAGENT";
};
export declare type EventTypeEventVariableVariableType = (typeof EventTypeEventVariableVariableType)[keyof typeof EventTypeEventVariableVariableType];
export declare const VariableDataSource: {
    readonly Event: "EVENT";
    readonly ExternalModelScore: "EXTERNAL_MODEL_SCORE";
};
/**
 * The source of the data.
 */
export declare type VariableDataSource = (typeof VariableDataSource)[keyof typeof VariableDataSource];
export declare const VariableDataType: {
    readonly String: "STRING";
    readonly Integer: "INTEGER";
    readonly Float: "FLOAT";
    readonly Boolean: "BOOLEAN";
};
/**
 * The data type.
 */
export declare type VariableDataType = (typeof VariableDataType)[keyof typeof VariableDataType];
export declare const VariableType: {
    readonly AuthCode: "AUTH_CODE";
    readonly Avs: "AVS";
    readonly BillingAddressL1: "BILLING_ADDRESS_L1";
    readonly BillingAddressL2: "BILLING_ADDRESS_L2";
    readonly BillingCity: "BILLING_CITY";
    readonly BillingCountry: "BILLING_COUNTRY";
    readonly BillingName: "BILLING_NAME";
    readonly BillingPhone: "BILLING_PHONE";
    readonly BillingState: "BILLING_STATE";
    readonly BillingZip: "BILLING_ZIP";
    readonly CardBin: "CARD_BIN";
    readonly Categorical: "CATEGORICAL";
    readonly CurrencyCode: "CURRENCY_CODE";
    readonly EmailAddress: "EMAIL_ADDRESS";
    readonly Fingerprint: "FINGERPRINT";
    readonly FraudLabel: "FRAUD_LABEL";
    readonly FreeFormText: "FREE_FORM_TEXT";
    readonly IpAddress: "IP_ADDRESS";
    readonly Numeric: "NUMERIC";
    readonly OrderId: "ORDER_ID";
    readonly PaymentType: "PAYMENT_TYPE";
    readonly PhoneNumber: "PHONE_NUMBER";
    readonly Price: "PRICE";
    readonly ProductCategory: "PRODUCT_CATEGORY";
    readonly ShippingAddressL1: "SHIPPING_ADDRESS_L1";
    readonly ShippingAddressL2: "SHIPPING_ADDRESS_L2";
    readonly ShippingCity: "SHIPPING_CITY";
    readonly ShippingCountry: "SHIPPING_COUNTRY";
    readonly ShippingName: "SHIPPING_NAME";
    readonly ShippingPhone: "SHIPPING_PHONE";
    readonly ShippingState: "SHIPPING_STATE";
    readonly ShippingZip: "SHIPPING_ZIP";
    readonly Useragent: "USERAGENT";
};
/**
 * The variable type. For more information see https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types
 */
export declare type VariableType = (typeof VariableType)[keyof typeof VariableType];
