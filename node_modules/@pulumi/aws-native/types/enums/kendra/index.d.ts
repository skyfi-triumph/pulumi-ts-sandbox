export declare const DataSourceConfluenceAttachmentFieldName: {
    readonly Author: "AUTHOR";
    readonly ContentType: "CONTENT_TYPE";
    readonly CreatedDate: "CREATED_DATE";
    readonly DisplayUrl: "DISPLAY_URL";
    readonly FileSize: "FILE_SIZE";
    readonly ItemType: "ITEM_TYPE";
    readonly ParentId: "PARENT_ID";
    readonly SpaceKey: "SPACE_KEY";
    readonly SpaceName: "SPACE_NAME";
    readonly Url: "URL";
    readonly Version: "VERSION";
};
export declare type DataSourceConfluenceAttachmentFieldName = (typeof DataSourceConfluenceAttachmentFieldName)[keyof typeof DataSourceConfluenceAttachmentFieldName];
export declare const DataSourceConfluenceBlogFieldName: {
    readonly Author: "AUTHOR";
    readonly DisplayUrl: "DISPLAY_URL";
    readonly ItemType: "ITEM_TYPE";
    readonly Labels: "LABELS";
    readonly PublishDate: "PUBLISH_DATE";
    readonly SpaceKey: "SPACE_KEY";
    readonly SpaceName: "SPACE_NAME";
    readonly Url: "URL";
    readonly Version: "VERSION";
};
export declare type DataSourceConfluenceBlogFieldName = (typeof DataSourceConfluenceBlogFieldName)[keyof typeof DataSourceConfluenceBlogFieldName];
export declare const DataSourceConfluencePageFieldName: {
    readonly Author: "AUTHOR";
    readonly ContentStatus: "CONTENT_STATUS";
    readonly CreatedDate: "CREATED_DATE";
    readonly DisplayUrl: "DISPLAY_URL";
    readonly ItemType: "ITEM_TYPE";
    readonly Labels: "LABELS";
    readonly ModifiedDate: "MODIFIED_DATE";
    readonly ParentId: "PARENT_ID";
    readonly SpaceKey: "SPACE_KEY";
    readonly SpaceName: "SPACE_NAME";
    readonly Url: "URL";
    readonly Version: "VERSION";
};
export declare type DataSourceConfluencePageFieldName = (typeof DataSourceConfluencePageFieldName)[keyof typeof DataSourceConfluencePageFieldName];
export declare const DataSourceConfluenceSpaceFieldName: {
    readonly DisplayUrl: "DISPLAY_URL";
    readonly ItemType: "ITEM_TYPE";
    readonly SpaceKey: "SPACE_KEY";
    readonly Url: "URL";
};
export declare type DataSourceConfluenceSpaceFieldName = (typeof DataSourceConfluenceSpaceFieldName)[keyof typeof DataSourceConfluenceSpaceFieldName];
export declare const DataSourceConfluenceVersion: {
    readonly Cloud: "CLOUD";
    readonly Server: "SERVER";
};
export declare type DataSourceConfluenceVersion = (typeof DataSourceConfluenceVersion)[keyof typeof DataSourceConfluenceVersion];
export declare const DataSourceDatabaseEngineType: {
    readonly RdsAuroraMysql: "RDS_AURORA_MYSQL";
    readonly RdsAuroraPostgresql: "RDS_AURORA_POSTGRESQL";
    readonly RdsMysql: "RDS_MYSQL";
    readonly RdsPostgresql: "RDS_POSTGRESQL";
};
export declare type DataSourceDatabaseEngineType = (typeof DataSourceDatabaseEngineType)[keyof typeof DataSourceDatabaseEngineType];
export declare const DataSourceQueryIdentifiersEnclosingOption: {
    readonly DoubleQuotes: "DOUBLE_QUOTES";
    readonly None: "NONE";
};
export declare type DataSourceQueryIdentifiersEnclosingOption = (typeof DataSourceQueryIdentifiersEnclosingOption)[keyof typeof DataSourceQueryIdentifiersEnclosingOption];
export declare const DataSourceSalesforceChatterFeedIncludeFilterType: {
    readonly ActiveUser: "ACTIVE_USER";
    readonly StandardUser: "STANDARD_USER";
};
export declare type DataSourceSalesforceChatterFeedIncludeFilterType = (typeof DataSourceSalesforceChatterFeedIncludeFilterType)[keyof typeof DataSourceSalesforceChatterFeedIncludeFilterType];
export declare const DataSourceSalesforceKnowledgeArticleState: {
    readonly Draft: "DRAFT";
    readonly Published: "PUBLISHED";
    readonly Archived: "ARCHIVED";
};
export declare type DataSourceSalesforceKnowledgeArticleState = (typeof DataSourceSalesforceKnowledgeArticleState)[keyof typeof DataSourceSalesforceKnowledgeArticleState];
export declare const DataSourceSalesforceStandardObjectName: {
    readonly Account: "ACCOUNT";
    readonly Campaign: "CAMPAIGN";
    readonly Case: "CASE";
    readonly Contact: "CONTACT";
    readonly Contract: "CONTRACT";
    readonly Document: "DOCUMENT";
    readonly Group: "GROUP";
    readonly Idea: "IDEA";
    readonly Lead: "LEAD";
    readonly Opportunity: "OPPORTUNITY";
    readonly Partner: "PARTNER";
    readonly Pricebook: "PRICEBOOK";
    readonly Product: "PRODUCT";
    readonly Profile: "PROFILE";
    readonly Solution: "SOLUTION";
    readonly Task: "TASK";
    readonly User: "USER";
};
export declare type DataSourceSalesforceStandardObjectName = (typeof DataSourceSalesforceStandardObjectName)[keyof typeof DataSourceSalesforceStandardObjectName];
export declare const DataSourceServiceNowAuthenticationType: {
    readonly HttpBasic: "HTTP_BASIC";
    readonly Oauth2: "OAUTH2";
};
export declare type DataSourceServiceNowAuthenticationType = (typeof DataSourceServiceNowAuthenticationType)[keyof typeof DataSourceServiceNowAuthenticationType];
export declare const DataSourceServiceNowBuildVersionType: {
    readonly London: "LONDON";
    readonly Others: "OTHERS";
};
export declare type DataSourceServiceNowBuildVersionType = (typeof DataSourceServiceNowBuildVersionType)[keyof typeof DataSourceServiceNowBuildVersionType];
export declare const DataSourceSharePointConfigurationSharePointVersion: {
    readonly SharepointOnline: "SHAREPOINT_ONLINE";
    readonly Sharepoint2013: "SHAREPOINT_2013";
    readonly Sharepoint2016: "SHAREPOINT_2016";
};
export declare type DataSourceSharePointConfigurationSharePointVersion = (typeof DataSourceSharePointConfigurationSharePointVersion)[keyof typeof DataSourceSharePointConfigurationSharePointVersion];
export declare const DataSourceType: {
    readonly S3: "S3";
    readonly Sharepoint: "SHAREPOINT";
    readonly Salesforce: "SALESFORCE";
    readonly Onedrive: "ONEDRIVE";
    readonly Servicenow: "SERVICENOW";
    readonly Database: "DATABASE";
    readonly Custom: "CUSTOM";
    readonly Confluence: "CONFLUENCE";
    readonly Googledrive: "GOOGLEDRIVE";
    readonly Webcrawler: "WEBCRAWLER";
    readonly Workdocs: "WORKDOCS";
};
/**
 * Data source type
 */
export declare type DataSourceType = (typeof DataSourceType)[keyof typeof DataSourceType];
export declare const DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode: {
    readonly HostOnly: "HOST_ONLY";
    readonly Subdomains: "SUBDOMAINS";
    readonly Everything: "EVERYTHING";
};
export declare type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode = (typeof DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode)[keyof typeof DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode];
export declare const FaqFileFormat: {
    readonly Csv: "CSV";
    readonly CsvWithHeader: "CSV_WITH_HEADER";
    readonly Json: "JSON";
};
/**
 * Format of the input file
 */
export declare type FaqFileFormat = (typeof FaqFileFormat)[keyof typeof FaqFileFormat];
export declare const IndexDocumentAttributeValueType: {
    readonly StringValue: "STRING_VALUE";
    readonly StringListValue: "STRING_LIST_VALUE";
    readonly LongValue: "LONG_VALUE";
    readonly DateValue: "DATE_VALUE";
};
export declare type IndexDocumentAttributeValueType = (typeof IndexDocumentAttributeValueType)[keyof typeof IndexDocumentAttributeValueType];
export declare const IndexEdition: {
    readonly DeveloperEdition: "DEVELOPER_EDITION";
    readonly EnterpriseEdition: "ENTERPRISE_EDITION";
};
/**
 * Edition of index
 */
export declare type IndexEdition = (typeof IndexEdition)[keyof typeof IndexEdition];
export declare const IndexKeyLocation: {
    readonly Url: "URL";
    readonly SecretManager: "SECRET_MANAGER";
};
export declare type IndexKeyLocation = (typeof IndexKeyLocation)[keyof typeof IndexKeyLocation];
export declare const IndexOrder: {
    readonly Ascending: "ASCENDING";
    readonly Descending: "DESCENDING";
};
export declare type IndexOrder = (typeof IndexOrder)[keyof typeof IndexOrder];
export declare const IndexUserContextPolicy: {
    readonly AttributeFilter: "ATTRIBUTE_FILTER";
    readonly UserToken: "USER_TOKEN";
};
export declare type IndexUserContextPolicy = (typeof IndexUserContextPolicy)[keyof typeof IndexUserContextPolicy];
