"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicRuleDestinationStatus = exports.TopicRuleCannedAccessControlList = exports.SecurityProfileStatisticalThresholdStatistic = exports.SecurityProfileMetricDimensionOperator = exports.SecurityProfileMachineLearningDetectionConfigConfidenceLevel = exports.SecurityProfileBehaviorCriteriaComparisonOperator = exports.ScheduledAuditFrequency = exports.ScheduledAuditDayOfWeek = exports.ResourceSpecificLoggingTargetType = exports.ResourceSpecificLoggingLogLevel = exports.MitigationActionUpdateDeviceCertificateParamsAction = exports.MitigationActionUpdateCACertificateParamsAction = exports.MitigationActionReplaceDefaultPolicyVersionParamsTemplateName = exports.MitigationActionEnableIoTLoggingParamsLogLevel = exports.LoggingDefaultLogLevel = exports.JobTemplateFailureType = exports.JobTemplateAction = exports.DomainConfigurationStatus = exports.DomainConfigurationServiceType = exports.DomainConfigurationServerCertificateSummaryServerCertificateStatus = exports.DomainConfigurationDomainType = exports.DimensionType = exports.CustomMetricMetricType = exports.CertificateStatus = exports.CertificateMode = exports.AuthorizerStatus = void 0;
exports.AuthorizerStatus = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
};
exports.CertificateMode = {
    Default: "DEFAULT",
    SniOnly: "SNI_ONLY",
};
exports.CertificateStatus = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
    Revoked: "REVOKED",
    PendingTransfer: "PENDING_TRANSFER",
    PendingActivation: "PENDING_ACTIVATION",
};
exports.CustomMetricMetricType = {
    StringList: "string-list",
    IpAddressList: "ip-address-list",
    NumberList: "number-list",
    Number: "number",
};
exports.DimensionType = {
    TopicFilter: "TOPIC_FILTER",
};
exports.DomainConfigurationDomainType = {
    Endpoint: "ENDPOINT",
    AwsManaged: "AWS_MANAGED",
    CustomerManaged: "CUSTOMER_MANAGED",
};
exports.DomainConfigurationServerCertificateSummaryServerCertificateStatus = {
    Invalid: "INVALID",
    Valid: "VALID",
};
exports.DomainConfigurationServiceType = {
    Data: "DATA",
    CredentialProvider: "CREDENTIAL_PROVIDER",
    Jobs: "JOBS",
};
exports.DomainConfigurationStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.JobTemplateAction = {
    Cancel: "CANCEL",
};
exports.JobTemplateFailureType = {
    Failed: "FAILED",
    Rejected: "REJECTED",
    TimedOut: "TIMED_OUT",
    All: "ALL",
};
exports.LoggingDefaultLogLevel = {
    Error: "ERROR",
    Warn: "WARN",
    Info: "INFO",
    Debug: "DEBUG",
    Disabled: "DISABLED",
};
exports.MitigationActionEnableIoTLoggingParamsLogLevel = {
    Debug: "DEBUG",
    Info: "INFO",
    Error: "ERROR",
    Warn: "WARN",
};
exports.MitigationActionReplaceDefaultPolicyVersionParamsTemplateName = {
    BlankPolicy: "BLANK_POLICY",
};
exports.MitigationActionUpdateCACertificateParamsAction = {
    Deactivate: "DEACTIVATE",
};
exports.MitigationActionUpdateDeviceCertificateParamsAction = {
    Deactivate: "DEACTIVATE",
};
exports.ResourceSpecificLoggingLogLevel = {
    Error: "ERROR",
    Warn: "WARN",
    Info: "INFO",
    Debug: "DEBUG",
    Disabled: "DISABLED",
};
exports.ResourceSpecificLoggingTargetType = {
    ThingGroup: "THING_GROUP",
};
exports.ScheduledAuditDayOfWeek = {
    Sun: "SUN",
    Mon: "MON",
    Tue: "TUE",
    Wed: "WED",
    Thu: "THU",
    Fri: "FRI",
    Sat: "SAT",
};
exports.ScheduledAuditFrequency = {
    Daily: "DAILY",
    Weekly: "WEEKLY",
    Biweekly: "BIWEEKLY",
    Monthly: "MONTHLY",
};
exports.SecurityProfileBehaviorCriteriaComparisonOperator = {
    LessThan: "less-than",
    LessThanEquals: "less-than-equals",
    GreaterThan: "greater-than",
    GreaterThanEquals: "greater-than-equals",
    InCidrSet: "in-cidr-set",
    NotInCidrSet: "not-in-cidr-set",
    InPortSet: "in-port-set",
    NotInPortSet: "not-in-port-set",
    InSet: "in-set",
    NotInSet: "not-in-set",
};
exports.SecurityProfileMachineLearningDetectionConfigConfidenceLevel = {
    Low: "LOW",
    Medium: "MEDIUM",
    High: "HIGH",
};
exports.SecurityProfileMetricDimensionOperator = {
    In: "IN",
    NotIn: "NOT_IN",
};
exports.SecurityProfileStatisticalThresholdStatistic = {
    Average: "Average",
    P0: "p0",
    P01: "p0.1",
    P001: "p0.01",
    P1: "p1",
    P10: "p10",
    P50: "p50",
    P90: "p90",
    P99: "p99",
    P999: "p99.9",
    P9999: "p99.99",
    P100: "p100",
};
exports.TopicRuleCannedAccessControlList = {
    Private: "private",
    PublicRead: "public-read",
    PublicReadWrite: "public-read-write",
    AwsExecRead: "aws-exec-read",
    AuthenticatedRead: "authenticated-read",
    BucketOwnerRead: "bucket-owner-read",
    BucketOwnerFullControl: "bucket-owner-full-control",
    LogDeliveryWrite: "log-delivery-write",
};
exports.TopicRuleDestinationStatus = {
    Enabled: "ENABLED",
    InProgress: "IN_PROGRESS",
    Disabled: "DISABLED",
};
//# sourceMappingURL=index.js.map