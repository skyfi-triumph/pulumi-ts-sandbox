export declare const DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod: {
    readonly NoRotation: "NoRotation";
    readonly OneHour: "OneHour";
    readonly OneDay: "OneDay";
    readonly OneWeek: "OneWeek";
    readonly OneMonth: "OneMonth";
};
export declare type DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod = (typeof DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod)[keyof typeof DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod];
export declare const DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode: {
    readonly FailedDocumentsOnly: "FailedDocumentsOnly";
    readonly AllDocuments: "AllDocuments";
};
export declare type DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode = (typeof DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode)[keyof typeof DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode];
export declare const DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod: {
    readonly NoRotation: "NoRotation";
    readonly OneHour: "OneHour";
    readonly OneDay: "OneDay";
    readonly OneWeek: "OneWeek";
    readonly OneMonth: "OneMonth";
};
export declare type DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod = (typeof DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod)[keyof typeof DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod];
export declare const DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode: {
    readonly FailedDocumentsOnly: "FailedDocumentsOnly";
    readonly AllDocuments: "AllDocuments";
};
export declare type DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode = (typeof DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode)[keyof typeof DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode];
export declare const DeliveryStreamEncryptionConfigurationInputKeyType: {
    readonly AwsOwnedCmk: "AWS_OWNED_CMK";
    readonly CustomerManagedCmk: "CUSTOMER_MANAGED_CMK";
};
export declare type DeliveryStreamEncryptionConfigurationInputKeyType = (typeof DeliveryStreamEncryptionConfigurationInputKeyType)[keyof typeof DeliveryStreamEncryptionConfigurationInputKeyType];
export declare const DeliveryStreamEncryptionConfigurationNoEncryptionConfig: {
    readonly NoEncryption: "NoEncryption";
};
export declare type DeliveryStreamEncryptionConfigurationNoEncryptionConfig = (typeof DeliveryStreamEncryptionConfigurationNoEncryptionConfig)[keyof typeof DeliveryStreamEncryptionConfigurationNoEncryptionConfig];
export declare const DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat: {
    readonly Uncompressed: "UNCOMPRESSED";
    readonly Gzip: "GZIP";
    readonly Zip: "ZIP";
    readonly Snappy: "Snappy";
    readonly HadoopSnappy: "HADOOP_SNAPPY";
};
export declare type DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat = (typeof DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat)[keyof typeof DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat];
export declare const DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
export declare type DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode = (typeof DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode)[keyof typeof DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode];
export declare const DeliveryStreamHttpEndpointRequestConfigurationContentEncoding: {
    readonly None: "NONE";
    readonly Gzip: "GZIP";
};
export declare type DeliveryStreamHttpEndpointRequestConfigurationContentEncoding = (typeof DeliveryStreamHttpEndpointRequestConfigurationContentEncoding)[keyof typeof DeliveryStreamHttpEndpointRequestConfigurationContentEncoding];
export declare const DeliveryStreamProcessorType: {
    readonly RecordDeAggregation: "RecordDeAggregation";
    readonly Lambda: "Lambda";
    readonly MetadataExtraction: "MetadataExtraction";
    readonly AppendDelimiterToRecord: "AppendDelimiterToRecord";
};
export declare type DeliveryStreamProcessorType = (typeof DeliveryStreamProcessorType)[keyof typeof DeliveryStreamProcessorType];
export declare const DeliveryStreamRedshiftDestinationConfigurationS3BackupMode: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
export declare type DeliveryStreamRedshiftDestinationConfigurationS3BackupMode = (typeof DeliveryStreamRedshiftDestinationConfigurationS3BackupMode)[keyof typeof DeliveryStreamRedshiftDestinationConfigurationS3BackupMode];
export declare const DeliveryStreamS3DestinationConfigurationCompressionFormat: {
    readonly Uncompressed: "UNCOMPRESSED";
    readonly Gzip: "GZIP";
    readonly Zip: "ZIP";
    readonly Snappy: "Snappy";
    readonly HadoopSnappy: "HADOOP_SNAPPY";
};
export declare type DeliveryStreamS3DestinationConfigurationCompressionFormat = (typeof DeliveryStreamS3DestinationConfigurationCompressionFormat)[keyof typeof DeliveryStreamS3DestinationConfigurationCompressionFormat];
export declare const DeliveryStreamSplunkDestinationConfigurationHECEndpointType: {
    readonly Raw: "Raw";
    readonly Event: "Event";
};
export declare type DeliveryStreamSplunkDestinationConfigurationHECEndpointType = (typeof DeliveryStreamSplunkDestinationConfigurationHECEndpointType)[keyof typeof DeliveryStreamSplunkDestinationConfigurationHECEndpointType];
export declare const DeliveryStreamType: {
    readonly DirectPut: "DirectPut";
    readonly KinesisStreamAsSource: "KinesisStreamAsSource";
};
export declare type DeliveryStreamType = (typeof DeliveryStreamType)[keyof typeof DeliveryStreamType];
