import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::SageMaker::DeviceFleet
 */
export declare class DeviceFleet extends pulumi.CustomResource {
    /**
     * Get an existing DeviceFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeviceFleet;
    /**
     * Returns true if the given object is an instance of DeviceFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeviceFleet;
    /**
     * Description for the edge device fleet
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the edge device fleet
     */
    readonly deviceFleetName: pulumi.Output<string>;
    /**
     * S3 bucket and an ecryption key id (if available) to store outputs for the fleet
     */
    readonly outputConfig: pulumi.Output<outputs.sagemaker.DeviceFleetEdgeOutputConfig>;
    /**
     * Role associated with the device fleet
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * Associate tags with the resource
     */
    readonly tags: pulumi.Output<outputs.sagemaker.DeviceFleetTag[] | undefined>;
    /**
     * Create a DeviceFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceFleetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeviceFleet resource.
 */
export interface DeviceFleetArgs {
    /**
     * Description for the edge device fleet
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the edge device fleet
     */
    deviceFleetName?: pulumi.Input<string>;
    /**
     * S3 bucket and an ecryption key id (if available) to store outputs for the fleet
     */
    outputConfig: pulumi.Input<inputs.sagemaker.DeviceFleetEdgeOutputConfigArgs>;
    /**
     * Role associated with the device fleet
     */
    roleArn: pulumi.Input<string>;
    /**
     * Associate tags with the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.sagemaker.DeviceFleetTagArgs>[]>;
}
