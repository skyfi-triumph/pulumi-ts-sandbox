"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Domain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::SageMaker::Domain
 */
class Domain extends pulumi.CustomResource {
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authMode'");
            }
            if ((!args || args.defaultUserSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultUserSettings'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            inputs["appNetworkAccessType"] = args ? args.appNetworkAccessType : undefined;
            inputs["authMode"] = args ? args.authMode : undefined;
            inputs["defaultUserSettings"] = args ? args.defaultUserSettings : undefined;
            inputs["domainName"] = args ? args.domainName : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["domainArn"] = undefined /*out*/;
            inputs["domainId"] = undefined /*out*/;
            inputs["homeEfsFileSystemId"] = undefined /*out*/;
            inputs["singleSignOnManagedApplicationInstanceId"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        else {
            inputs["appNetworkAccessType"] = undefined /*out*/;
            inputs["authMode"] = undefined /*out*/;
            inputs["defaultUserSettings"] = undefined /*out*/;
            inputs["domainArn"] = undefined /*out*/;
            inputs["domainId"] = undefined /*out*/;
            inputs["domainName"] = undefined /*out*/;
            inputs["homeEfsFileSystemId"] = undefined /*out*/;
            inputs["kmsKeyId"] = undefined /*out*/;
            inputs["singleSignOnManagedApplicationInstanceId"] = undefined /*out*/;
            inputs["subnetIds"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Domain.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Domain(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }
}
exports.Domain = Domain;
/** @internal */
Domain.__pulumiType = 'aws-native:sagemaker:Domain';
//# sourceMappingURL=domain.js.map