import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::SageMaker::FeatureGroup
 */
export declare class FeatureGroup extends pulumi.CustomResource {
    /**
     * Get an existing FeatureGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FeatureGroup;
    /**
     * Returns true if the given object is an instance of FeatureGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FeatureGroup;
    /**
     * Description about the FeatureGroup.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Event Time Feature Name.
     */
    readonly eventTimeFeatureName: pulumi.Output<string>;
    /**
     * An Array of Feature Definition
     */
    readonly featureDefinitions: pulumi.Output<outputs.sagemaker.FeatureGroupFeatureDefinition[]>;
    /**
     * The Name of the FeatureGroup.
     */
    readonly featureGroupName: pulumi.Output<string>;
    readonly offlineStoreConfig: pulumi.Output<outputs.sagemaker.OfflineStoreConfigProperties | undefined>;
    readonly onlineStoreConfig: pulumi.Output<outputs.sagemaker.OnlineStoreConfigProperties | undefined>;
    /**
     * The Record Identifier Feature Name.
     */
    readonly recordIdentifierFeatureName: pulumi.Output<string>;
    /**
     * Role Arn
     */
    readonly roleArn: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pair to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.sagemaker.FeatureGroupTag[] | undefined>;
    /**
     * Create a FeatureGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FeatureGroup resource.
 */
export interface FeatureGroupArgs {
    /**
     * Description about the FeatureGroup.
     */
    description?: pulumi.Input<string>;
    /**
     * The Event Time Feature Name.
     */
    eventTimeFeatureName: pulumi.Input<string>;
    /**
     * An Array of Feature Definition
     */
    featureDefinitions: pulumi.Input<pulumi.Input<inputs.sagemaker.FeatureGroupFeatureDefinitionArgs>[]>;
    /**
     * The Name of the FeatureGroup.
     */
    featureGroupName?: pulumi.Input<string>;
    offlineStoreConfig?: pulumi.Input<inputs.sagemaker.OfflineStoreConfigPropertiesArgs>;
    onlineStoreConfig?: pulumi.Input<inputs.sagemaker.OnlineStoreConfigPropertiesArgs>;
    /**
     * The Record Identifier Feature Name.
     */
    recordIdentifierFeatureName: pulumi.Input<string>;
    /**
     * Role Arn
     */
    roleArn?: pulumi.Input<string>;
    /**
     * An array of key-value pair to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.sagemaker.FeatureGroupTagArgs>[]>;
}
