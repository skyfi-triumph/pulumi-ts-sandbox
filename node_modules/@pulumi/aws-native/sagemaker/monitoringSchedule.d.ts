import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::SageMaker::MonitoringSchedule
 */
export declare class MonitoringSchedule extends pulumi.CustomResource {
    /**
     * Get an existing MonitoringSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MonitoringSchedule;
    /**
     * Returns true if the given object is an instance of MonitoringSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MonitoringSchedule;
    /**
     * The time at which the schedule was created.
     */
    readonly creationTime: pulumi.Output<string>;
    readonly endpointName: pulumi.Output<string | undefined>;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    readonly failureReason: pulumi.Output<string | undefined>;
    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    readonly lastMonitoringExecutionSummary: pulumi.Output<outputs.sagemaker.MonitoringScheduleMonitoringExecutionSummary | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    readonly monitoringScheduleArn: pulumi.Output<string>;
    readonly monitoringScheduleConfig: pulumi.Output<outputs.sagemaker.MonitoringScheduleConfig>;
    readonly monitoringScheduleName: pulumi.Output<string>;
    /**
     * The status of a schedule job.
     */
    readonly monitoringScheduleStatus: pulumi.Output<enums.sagemaker.MonitoringScheduleStatus | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.sagemaker.MonitoringScheduleTag[] | undefined>;
    /**
     * Create a MonitoringSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoringScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MonitoringSchedule resource.
 */
export interface MonitoringScheduleArgs {
    endpointName?: pulumi.Input<string>;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    failureReason?: pulumi.Input<string>;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    lastMonitoringExecutionSummary?: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringExecutionSummaryArgs>;
    monitoringScheduleConfig: pulumi.Input<inputs.sagemaker.MonitoringScheduleConfigArgs>;
    monitoringScheduleName?: pulumi.Input<string>;
    /**
     * The status of a schedule job.
     */
    monitoringScheduleStatus?: pulumi.Input<enums.sagemaker.MonitoringScheduleStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.sagemaker.MonitoringScheduleTagArgs>[]>;
}
