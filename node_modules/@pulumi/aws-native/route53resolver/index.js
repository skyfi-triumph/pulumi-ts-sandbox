"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./firewallDomainList"), exports);
__exportStar(require("./firewallRuleGroup"), exports);
__exportStar(require("./firewallRuleGroupAssociation"), exports);
__exportStar(require("./resolverConfig"), exports);
__exportStar(require("./resolverDNSSECConfig"), exports);
__exportStar(require("./resolverEndpoint"), exports);
__exportStar(require("./resolverQueryLoggingConfig"), exports);
__exportStar(require("./resolverQueryLoggingConfigAssociation"), exports);
__exportStar(require("./resolverRule"), exports);
__exportStar(require("./resolverRuleAssociation"), exports);
// Export enums:
__exportStar(require("../types/enums/route53resolver"), exports);
// Import resources to register:
const firewallDomainList_1 = require("./firewallDomainList");
const firewallRuleGroup_1 = require("./firewallRuleGroup");
const firewallRuleGroupAssociation_1 = require("./firewallRuleGroupAssociation");
const resolverConfig_1 = require("./resolverConfig");
const resolverDNSSECConfig_1 = require("./resolverDNSSECConfig");
const resolverEndpoint_1 = require("./resolverEndpoint");
const resolverQueryLoggingConfig_1 = require("./resolverQueryLoggingConfig");
const resolverQueryLoggingConfigAssociation_1 = require("./resolverQueryLoggingConfigAssociation");
const resolverRule_1 = require("./resolverRule");
const resolverRuleAssociation_1 = require("./resolverRuleAssociation");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:route53resolver:FirewallDomainList":
                return new firewallDomainList_1.FirewallDomainList(name, undefined, { urn });
            case "aws-native:route53resolver:FirewallRuleGroup":
                return new firewallRuleGroup_1.FirewallRuleGroup(name, undefined, { urn });
            case "aws-native:route53resolver:FirewallRuleGroupAssociation":
                return new firewallRuleGroupAssociation_1.FirewallRuleGroupAssociation(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverConfig":
                return new resolverConfig_1.ResolverConfig(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverDNSSECConfig":
                return new resolverDNSSECConfig_1.ResolverDNSSECConfig(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverEndpoint":
                return new resolverEndpoint_1.ResolverEndpoint(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverQueryLoggingConfig":
                return new resolverQueryLoggingConfig_1.ResolverQueryLoggingConfig(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverQueryLoggingConfigAssociation":
                return new resolverQueryLoggingConfigAssociation_1.ResolverQueryLoggingConfigAssociation(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverRule":
                return new resolverRule_1.ResolverRule(name, undefined, { urn });
            case "aws-native:route53resolver:ResolverRuleAssociation":
                return new resolverRuleAssociation_1.ResolverRuleAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "route53resolver", _module);
//# sourceMappingURL=index.js.map