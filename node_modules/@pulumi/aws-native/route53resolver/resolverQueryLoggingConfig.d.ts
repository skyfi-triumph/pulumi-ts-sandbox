import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * Resource schema for AWS::Route53Resolver::ResolverQueryLoggingConfig.
 */
export declare class ResolverQueryLoggingConfig extends pulumi.CustomResource {
    /**
     * Get an existing ResolverQueryLoggingConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResolverQueryLoggingConfig;
    /**
     * Returns true if the given object is an instance of ResolverQueryLoggingConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResolverQueryLoggingConfig;
    /**
     * Arn
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Count
     */
    readonly associationCount: pulumi.Output<number>;
    /**
     * Rfc3339TimeString
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The id of the creator request.
     */
    readonly creatorRequestId: pulumi.Output<string>;
    /**
     * destination arn
     */
    readonly destinationArn: pulumi.Output<string | undefined>;
    /**
     * ResolverQueryLogConfigName
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * AccountId
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
     */
    readonly shareStatus: pulumi.Output<enums.route53resolver.ResolverQueryLoggingConfigShareStatus>;
    /**
     * ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
     */
    readonly status: pulumi.Output<enums.route53resolver.ResolverQueryLoggingConfigStatus>;
    /**
     * Create a ResolverQueryLoggingConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResolverQueryLoggingConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResolverQueryLoggingConfig resource.
 */
export interface ResolverQueryLoggingConfigArgs {
    /**
     * destination arn
     */
    destinationArn?: pulumi.Input<string>;
    /**
     * ResolverQueryLogConfigName
     */
    name?: pulumi.Input<string>;
}
