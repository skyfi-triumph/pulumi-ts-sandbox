"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./cachePolicy"), exports);
__exportStar(require("./cloudFrontOriginAccessIdentity"), exports);
__exportStar(require("./distribution"), exports);
__exportStar(require("./function"), exports);
__exportStar(require("./keyGroup"), exports);
__exportStar(require("./originRequestPolicy"), exports);
__exportStar(require("./publicKey"), exports);
__exportStar(require("./realtimeLogConfig"), exports);
__exportStar(require("./responseHeadersPolicy"), exports);
__exportStar(require("./streamingDistribution"), exports);
// Import resources to register:
const cachePolicy_1 = require("./cachePolicy");
const cloudFrontOriginAccessIdentity_1 = require("./cloudFrontOriginAccessIdentity");
const distribution_1 = require("./distribution");
const function_1 = require("./function");
const keyGroup_1 = require("./keyGroup");
const originRequestPolicy_1 = require("./originRequestPolicy");
const publicKey_1 = require("./publicKey");
const realtimeLogConfig_1 = require("./realtimeLogConfig");
const responseHeadersPolicy_1 = require("./responseHeadersPolicy");
const streamingDistribution_1 = require("./streamingDistribution");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:cloudfront:CachePolicy":
                return new cachePolicy_1.CachePolicy(name, undefined, { urn });
            case "aws-native:cloudfront:CloudFrontOriginAccessIdentity":
                return new cloudFrontOriginAccessIdentity_1.CloudFrontOriginAccessIdentity(name, undefined, { urn });
            case "aws-native:cloudfront:Distribution":
                return new distribution_1.Distribution(name, undefined, { urn });
            case "aws-native:cloudfront:Function":
                return new function_1.Function(name, undefined, { urn });
            case "aws-native:cloudfront:KeyGroup":
                return new keyGroup_1.KeyGroup(name, undefined, { urn });
            case "aws-native:cloudfront:OriginRequestPolicy":
                return new originRequestPolicy_1.OriginRequestPolicy(name, undefined, { urn });
            case "aws-native:cloudfront:PublicKey":
                return new publicKey_1.PublicKey(name, undefined, { urn });
            case "aws-native:cloudfront:RealtimeLogConfig":
                return new realtimeLogConfig_1.RealtimeLogConfig(name, undefined, { urn });
            case "aws-native:cloudfront:ResponseHeadersPolicy":
                return new responseHeadersPolicy_1.ResponseHeadersPolicy(name, undefined, { urn });
            case "aws-native:cloudfront:StreamingDistribution":
                return new streamingDistribution_1.StreamingDistribution(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "cloudfront", _module);
//# sourceMappingURL=index.js.map