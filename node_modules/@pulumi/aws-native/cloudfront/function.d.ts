import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::CloudFront::Function
 */
export declare class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Function;
    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Function;
    readonly autoPublish: pulumi.Output<boolean | undefined>;
    readonly functionARN: pulumi.Output<string>;
    readonly functionCode: pulumi.Output<string | undefined>;
    readonly functionConfig: pulumi.Output<outputs.cloudfront.FunctionConfig | undefined>;
    readonly functionMetadata: pulumi.Output<outputs.cloudfront.FunctionMetadata | undefined>;
    readonly name: pulumi.Output<string>;
    readonly stage: pulumi.Output<string>;
    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FunctionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    autoPublish?: pulumi.Input<boolean>;
    functionCode?: pulumi.Input<string>;
    functionConfig?: pulumi.Input<inputs.cloudfront.FunctionConfigArgs>;
    functionMetadata?: pulumi.Input<inputs.cloudfront.FunctionMetadataArgs>;
    name?: pulumi.Input<string>;
}
