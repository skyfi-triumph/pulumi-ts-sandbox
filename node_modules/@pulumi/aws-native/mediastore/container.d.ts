import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::MediaStore::Container
 *
 * @deprecated Container is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Container extends pulumi.CustomResource {
    /**
     * Get an existing Container resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Container;
    /**
     * Returns true if the given object is an instance of Container.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Container;
    readonly accessLoggingEnabled: pulumi.Output<boolean | undefined>;
    readonly containerName: pulumi.Output<string>;
    readonly corsPolicy: pulumi.Output<outputs.mediastore.ContainerCorsRule[] | undefined>;
    readonly endpoint: pulumi.Output<string>;
    readonly lifecyclePolicy: pulumi.Output<string | undefined>;
    readonly metricPolicy: pulumi.Output<outputs.mediastore.ContainerMetricPolicy | undefined>;
    readonly policy: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.mediastore.ContainerTag[] | undefined>;
    /**
     * Create a Container resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Container is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: ContainerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Container resource.
 */
export interface ContainerArgs {
    accessLoggingEnabled?: pulumi.Input<boolean>;
    containerName?: pulumi.Input<string>;
    corsPolicy?: pulumi.Input<pulumi.Input<inputs.mediastore.ContainerCorsRuleArgs>[]>;
    lifecyclePolicy?: pulumi.Input<string>;
    metricPolicy?: pulumi.Input<inputs.mediastore.ContainerMetricPolicyArgs>;
    policy?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.mediastore.ContainerTagArgs>[]>;
}
