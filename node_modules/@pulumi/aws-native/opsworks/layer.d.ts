import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::OpsWorks::Layer
 *
 * @deprecated Layer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Layer extends pulumi.CustomResource {
    /**
     * Get an existing Layer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Layer;
    /**
     * Returns true if the given object is an instance of Layer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Layer;
    readonly attributes: pulumi.Output<any | undefined>;
    readonly autoAssignElasticIps: pulumi.Output<boolean>;
    readonly autoAssignPublicIps: pulumi.Output<boolean>;
    readonly customInstanceProfileArn: pulumi.Output<string | undefined>;
    readonly customJson: pulumi.Output<any | undefined>;
    readonly customRecipes: pulumi.Output<outputs.opsworks.LayerRecipes | undefined>;
    readonly customSecurityGroupIds: pulumi.Output<string[] | undefined>;
    readonly enableAutoHealing: pulumi.Output<boolean>;
    readonly installUpdatesOnBoot: pulumi.Output<boolean | undefined>;
    readonly lifecycleEventConfiguration: pulumi.Output<outputs.opsworks.LayerLifecycleEventConfiguration | undefined>;
    readonly loadBasedAutoScaling: pulumi.Output<outputs.opsworks.LayerLoadBasedAutoScaling | undefined>;
    readonly name: pulumi.Output<string>;
    readonly packages: pulumi.Output<string[] | undefined>;
    readonly shortname: pulumi.Output<string>;
    readonly stackId: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.opsworks.LayerTag[] | undefined>;
    readonly type: pulumi.Output<string>;
    readonly useEbsOptimizedInstances: pulumi.Output<boolean | undefined>;
    readonly volumeConfigurations: pulumi.Output<outputs.opsworks.LayerVolumeConfiguration[] | undefined>;
    /**
     * Create a Layer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Layer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: LayerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Layer resource.
 */
export interface LayerArgs {
    attributes?: any;
    autoAssignElasticIps: pulumi.Input<boolean>;
    autoAssignPublicIps: pulumi.Input<boolean>;
    customInstanceProfileArn?: pulumi.Input<string>;
    customJson?: any;
    customRecipes?: pulumi.Input<inputs.opsworks.LayerRecipesArgs>;
    customSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    enableAutoHealing: pulumi.Input<boolean>;
    installUpdatesOnBoot?: pulumi.Input<boolean>;
    lifecycleEventConfiguration?: pulumi.Input<inputs.opsworks.LayerLifecycleEventConfigurationArgs>;
    loadBasedAutoScaling?: pulumi.Input<inputs.opsworks.LayerLoadBasedAutoScalingArgs>;
    name?: pulumi.Input<string>;
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    shortname: pulumi.Input<string>;
    stackId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.opsworks.LayerTagArgs>[]>;
    type: pulumi.Input<string>;
    useEbsOptimizedInstances?: pulumi.Input<boolean>;
    volumeConfigurations?: pulumi.Input<pulumi.Input<inputs.opsworks.LayerVolumeConfigurationArgs>[]>;
}
