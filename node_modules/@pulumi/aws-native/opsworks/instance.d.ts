import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::OpsWorks::Instance
 *
 * @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance;
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Instance;
    readonly agentVersion: pulumi.Output<string | undefined>;
    readonly amiId: pulumi.Output<string | undefined>;
    readonly architecture: pulumi.Output<string | undefined>;
    readonly autoScalingType: pulumi.Output<string | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly blockDeviceMappings: pulumi.Output<outputs.opsworks.InstanceBlockDeviceMapping[] | undefined>;
    readonly ebsOptimized: pulumi.Output<boolean | undefined>;
    readonly elasticIps: pulumi.Output<string[] | undefined>;
    readonly hostname: pulumi.Output<string | undefined>;
    readonly installUpdatesOnBoot: pulumi.Output<boolean | undefined>;
    readonly instanceType: pulumi.Output<string>;
    readonly layerIds: pulumi.Output<string[]>;
    readonly os: pulumi.Output<string | undefined>;
    readonly privateDnsName: pulumi.Output<string>;
    readonly privateIp: pulumi.Output<string>;
    readonly publicDnsName: pulumi.Output<string>;
    readonly publicIp: pulumi.Output<string>;
    readonly rootDeviceType: pulumi.Output<string | undefined>;
    readonly sshKeyName: pulumi.Output<string | undefined>;
    readonly stackId: pulumi.Output<string>;
    readonly subnetId: pulumi.Output<string | undefined>;
    readonly tenancy: pulumi.Output<string | undefined>;
    readonly timeBasedAutoScaling: pulumi.Output<outputs.opsworks.InstanceTimeBasedAutoScaling | undefined>;
    readonly virtualizationType: pulumi.Output<string | undefined>;
    readonly volumes: pulumi.Output<string[] | undefined>;
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    agentVersion?: pulumi.Input<string>;
    amiId?: pulumi.Input<string>;
    architecture?: pulumi.Input<string>;
    autoScalingType?: pulumi.Input<string>;
    availabilityZone?: pulumi.Input<string>;
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.opsworks.InstanceBlockDeviceMappingArgs>[]>;
    ebsOptimized?: pulumi.Input<boolean>;
    elasticIps?: pulumi.Input<pulumi.Input<string>[]>;
    hostname?: pulumi.Input<string>;
    installUpdatesOnBoot?: pulumi.Input<boolean>;
    instanceType: pulumi.Input<string>;
    layerIds: pulumi.Input<pulumi.Input<string>[]>;
    os?: pulumi.Input<string>;
    rootDeviceType?: pulumi.Input<string>;
    sshKeyName?: pulumi.Input<string>;
    stackId: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tenancy?: pulumi.Input<string>;
    timeBasedAutoScaling?: pulumi.Input<inputs.opsworks.InstanceTimeBasedAutoScalingArgs>;
    virtualizationType?: pulumi.Input<string>;
    volumes?: pulumi.Input<pulumi.Input<string>[]>;
}
