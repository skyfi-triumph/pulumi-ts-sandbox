import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::OpsWorks::Stack
 *
 * @deprecated Stack is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Stack extends pulumi.CustomResource {
    /**
     * Get an existing Stack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Stack;
    /**
     * Returns true if the given object is an instance of Stack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Stack;
    readonly agentVersion: pulumi.Output<string | undefined>;
    readonly attributes: pulumi.Output<any | undefined>;
    readonly chefConfiguration: pulumi.Output<outputs.opsworks.StackChefConfiguration | undefined>;
    readonly cloneAppIds: pulumi.Output<string[] | undefined>;
    readonly clonePermissions: pulumi.Output<boolean | undefined>;
    readonly configurationManager: pulumi.Output<outputs.opsworks.StackConfigurationManager | undefined>;
    readonly customCookbooksSource: pulumi.Output<outputs.opsworks.StackSource | undefined>;
    readonly customJson: pulumi.Output<any | undefined>;
    readonly defaultAvailabilityZone: pulumi.Output<string | undefined>;
    readonly defaultInstanceProfileArn: pulumi.Output<string>;
    readonly defaultOs: pulumi.Output<string | undefined>;
    readonly defaultRootDeviceType: pulumi.Output<string | undefined>;
    readonly defaultSshKeyName: pulumi.Output<string | undefined>;
    readonly defaultSubnetId: pulumi.Output<string | undefined>;
    readonly ecsClusterArn: pulumi.Output<string | undefined>;
    readonly elasticIps: pulumi.Output<outputs.opsworks.StackElasticIp[] | undefined>;
    readonly hostnameTheme: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string>;
    readonly rdsDbInstances: pulumi.Output<outputs.opsworks.StackRdsDbInstance[] | undefined>;
    readonly serviceRoleArn: pulumi.Output<string>;
    readonly sourceStackId: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.opsworks.StackTag[] | undefined>;
    readonly useCustomCookbooks: pulumi.Output<boolean | undefined>;
    readonly useOpsworksSecurityGroups: pulumi.Output<boolean | undefined>;
    readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * Create a Stack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Stack is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: StackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Stack resource.
 */
export interface StackArgs {
    agentVersion?: pulumi.Input<string>;
    attributes?: any;
    chefConfiguration?: pulumi.Input<inputs.opsworks.StackChefConfigurationArgs>;
    cloneAppIds?: pulumi.Input<pulumi.Input<string>[]>;
    clonePermissions?: pulumi.Input<boolean>;
    configurationManager?: pulumi.Input<inputs.opsworks.StackConfigurationManagerArgs>;
    customCookbooksSource?: pulumi.Input<inputs.opsworks.StackSourceArgs>;
    customJson?: any;
    defaultAvailabilityZone?: pulumi.Input<string>;
    defaultInstanceProfileArn: pulumi.Input<string>;
    defaultOs?: pulumi.Input<string>;
    defaultRootDeviceType?: pulumi.Input<string>;
    defaultSshKeyName?: pulumi.Input<string>;
    defaultSubnetId?: pulumi.Input<string>;
    ecsClusterArn?: pulumi.Input<string>;
    elasticIps?: pulumi.Input<pulumi.Input<inputs.opsworks.StackElasticIpArgs>[]>;
    hostnameTheme?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rdsDbInstances?: pulumi.Input<pulumi.Input<inputs.opsworks.StackRdsDbInstanceArgs>[]>;
    serviceRoleArn: pulumi.Input<string>;
    sourceStackId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.opsworks.StackTagArgs>[]>;
    useCustomCookbooks?: pulumi.Input<boolean>;
    useOpsworksSecurityGroups?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
}
