"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::OpsWorks::Instance
 *
 * @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class Instance extends pulumi.CustomResource {
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("Instance is deprecated: Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.layerIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'layerIds'");
            }
            if ((!args || args.stackId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackId'");
            }
            inputs["agentVersion"] = args ? args.agentVersion : undefined;
            inputs["amiId"] = args ? args.amiId : undefined;
            inputs["architecture"] = args ? args.architecture : undefined;
            inputs["autoScalingType"] = args ? args.autoScalingType : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            inputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            inputs["elasticIps"] = args ? args.elasticIps : undefined;
            inputs["hostname"] = args ? args.hostname : undefined;
            inputs["installUpdatesOnBoot"] = args ? args.installUpdatesOnBoot : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["layerIds"] = args ? args.layerIds : undefined;
            inputs["os"] = args ? args.os : undefined;
            inputs["rootDeviceType"] = args ? args.rootDeviceType : undefined;
            inputs["sshKeyName"] = args ? args.sshKeyName : undefined;
            inputs["stackId"] = args ? args.stackId : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tenancy"] = args ? args.tenancy : undefined;
            inputs["timeBasedAutoScaling"] = args ? args.timeBasedAutoScaling : undefined;
            inputs["virtualizationType"] = args ? args.virtualizationType : undefined;
            inputs["volumes"] = args ? args.volumes : undefined;
            inputs["privateDnsName"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["publicDnsName"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
        }
        else {
            inputs["agentVersion"] = undefined /*out*/;
            inputs["amiId"] = undefined /*out*/;
            inputs["architecture"] = undefined /*out*/;
            inputs["autoScalingType"] = undefined /*out*/;
            inputs["availabilityZone"] = undefined /*out*/;
            inputs["blockDeviceMappings"] = undefined /*out*/;
            inputs["ebsOptimized"] = undefined /*out*/;
            inputs["elasticIps"] = undefined /*out*/;
            inputs["hostname"] = undefined /*out*/;
            inputs["installUpdatesOnBoot"] = undefined /*out*/;
            inputs["instanceType"] = undefined /*out*/;
            inputs["layerIds"] = undefined /*out*/;
            inputs["os"] = undefined /*out*/;
            inputs["privateDnsName"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["publicDnsName"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
            inputs["rootDeviceType"] = undefined /*out*/;
            inputs["sshKeyName"] = undefined /*out*/;
            inputs["stackId"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["tenancy"] = undefined /*out*/;
            inputs["timeBasedAutoScaling"] = undefined /*out*/;
            inputs["virtualizationType"] = undefined /*out*/;
            inputs["volumes"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Instance.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("Instance is deprecated: Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new Instance(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }
}
exports.Instance = Instance;
/** @internal */
Instance.__pulumiType = 'aws-native:opsworks:Instance';
//# sourceMappingURL=instance.js.map