import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ApiGateway::RestApi
 *
 * @deprecated RestApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class RestApi extends pulumi.CustomResource {
    /**
     * Get an existing RestApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RestApi;
    /**
     * Returns true if the given object is an instance of RestApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RestApi;
    readonly apiKeySourceType: pulumi.Output<string | undefined>;
    readonly binaryMediaTypes: pulumi.Output<string[] | undefined>;
    readonly body: pulumi.Output<any | undefined>;
    readonly bodyS3Location: pulumi.Output<outputs.apigateway.RestApiS3Location | undefined>;
    readonly cloneFrom: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly disableExecuteApiEndpoint: pulumi.Output<boolean | undefined>;
    readonly endpointConfiguration: pulumi.Output<outputs.apigateway.RestApiEndpointConfiguration | undefined>;
    readonly failOnWarnings: pulumi.Output<boolean | undefined>;
    readonly minimumCompressionSize: pulumi.Output<number | undefined>;
    readonly mode: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    readonly parameters: pulumi.Output<any | undefined>;
    readonly policy: pulumi.Output<any | undefined>;
    readonly rootResourceId: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.apigateway.RestApiTag[] | undefined>;
    /**
     * Create a RestApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated RestApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: RestApiArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RestApi resource.
 */
export interface RestApiArgs {
    apiKeySourceType?: pulumi.Input<string>;
    binaryMediaTypes?: pulumi.Input<pulumi.Input<string>[]>;
    body?: any;
    bodyS3Location?: pulumi.Input<inputs.apigateway.RestApiS3LocationArgs>;
    cloneFrom?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disableExecuteApiEndpoint?: pulumi.Input<boolean>;
    endpointConfiguration?: pulumi.Input<inputs.apigateway.RestApiEndpointConfigurationArgs>;
    failOnWarnings?: pulumi.Input<boolean>;
    minimumCompressionSize?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: any;
    policy?: any;
    tags?: pulumi.Input<pulumi.Input<inputs.apigateway.RestApiTagArgs>[]>;
}
