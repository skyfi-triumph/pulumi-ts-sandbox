import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ApiGateway::DomainName.
 */
export declare class DomainName extends pulumi.CustomResource {
    /**
     * Get an existing DomainName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DomainName;
    /**
     * Returns true if the given object is an instance of DomainName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DomainName;
    readonly certificateArn: pulumi.Output<string | undefined>;
    readonly distributionDomainName: pulumi.Output<string>;
    readonly distributionHostedZoneId: pulumi.Output<string>;
    readonly domainName: pulumi.Output<string | undefined>;
    readonly endpointConfiguration: pulumi.Output<outputs.apigateway.DomainNameEndpointConfiguration | undefined>;
    readonly mutualTlsAuthentication: pulumi.Output<outputs.apigateway.DomainNameMutualTlsAuthentication | undefined>;
    readonly ownershipVerificationCertificateArn: pulumi.Output<string | undefined>;
    readonly regionalCertificateArn: pulumi.Output<string | undefined>;
    readonly regionalDomainName: pulumi.Output<string>;
    readonly regionalHostedZoneId: pulumi.Output<string>;
    readonly securityPolicy: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.apigateway.DomainNameTag[] | undefined>;
    /**
     * Create a DomainName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DomainNameArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DomainName resource.
 */
export interface DomainNameArgs {
    certificateArn?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    endpointConfiguration?: pulumi.Input<inputs.apigateway.DomainNameEndpointConfigurationArgs>;
    mutualTlsAuthentication?: pulumi.Input<inputs.apigateway.DomainNameMutualTlsAuthenticationArgs>;
    ownershipVerificationCertificateArn?: pulumi.Input<string>;
    regionalCertificateArn?: pulumi.Input<string>;
    securityPolicy?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.apigateway.DomainNameTagArgs>[]>;
}
