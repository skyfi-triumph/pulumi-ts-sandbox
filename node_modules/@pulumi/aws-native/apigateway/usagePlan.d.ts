import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ApiGateway::UsagePlan
 */
export declare class UsagePlan extends pulumi.CustomResource {
    /**
     * Get an existing UsagePlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UsagePlan;
    /**
     * Returns true if the given object is an instance of UsagePlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UsagePlan;
    /**
     * The API stages to associate with this usage plan.
     */
    readonly apiStages: pulumi.Output<outputs.apigateway.UsagePlanApiStage[] | undefined>;
    /**
     * A description of the usage plan.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Configures the number of requests that users can make within a given interval.
     */
    readonly quota: pulumi.Output<outputs.apigateway.UsagePlanQuotaSettings | undefined>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     */
    readonly tags: pulumi.Output<outputs.apigateway.UsagePlanTag[] | undefined>;
    /**
     * Configures the overall request rate (average requests per second) and burst capacity.
     */
    readonly throttle: pulumi.Output<outputs.apigateway.UsagePlanThrottleSettings | undefined>;
    /**
     * A name for the usage plan.
     */
    readonly usagePlanName: pulumi.Output<string | undefined>;
    /**
     * Create a UsagePlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UsagePlanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a UsagePlan resource.
 */
export interface UsagePlanArgs {
    /**
     * The API stages to associate with this usage plan.
     */
    apiStages?: pulumi.Input<pulumi.Input<inputs.apigateway.UsagePlanApiStageArgs>[]>;
    /**
     * A description of the usage plan.
     */
    description?: pulumi.Input<string>;
    /**
     * Configures the number of requests that users can make within a given interval.
     */
    quota?: pulumi.Input<inputs.apigateway.UsagePlanQuotaSettingsArgs>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.apigateway.UsagePlanTagArgs>[]>;
    /**
     * Configures the overall request rate (average requests per second) and burst capacity.
     */
    throttle?: pulumi.Input<inputs.apigateway.UsagePlanThrottleSettingsArgs>;
    /**
     * A name for the usage plan.
     */
    usagePlanName?: pulumi.Input<string>;
}
