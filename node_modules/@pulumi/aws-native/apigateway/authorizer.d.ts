import * as pulumi from "@pulumi/pulumi";
/**
 * Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.
 */
export declare class Authorizer extends pulumi.CustomResource {
    /**
     * Get an existing Authorizer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Authorizer;
    /**
     * Returns true if the given object is an instance of Authorizer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Authorizer;
    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     */
    readonly authType: pulumi.Output<string | undefined>;
    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     */
    readonly authorizerCredentials: pulumi.Output<string | undefined>;
    readonly authorizerId: pulumi.Output<string>;
    /**
     * The TTL in seconds of cached authorizer results.
     */
    readonly authorizerResultTtlInSeconds: pulumi.Output<number | undefined>;
    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     */
    readonly authorizerUri: pulumi.Output<string | undefined>;
    /**
     * The identity source for which authorization is requested.
     */
    readonly identitySource: pulumi.Output<string | undefined>;
    /**
     * A validation expression for the incoming identity token.
     */
    readonly identityValidationExpression: pulumi.Output<string | undefined>;
    /**
     * The name of the authorizer.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     */
    readonly providerARNs: pulumi.Output<string[] | undefined>;
    /**
     * The identifier of the API.
     */
    readonly restApiId: pulumi.Output<string>;
    /**
     * The authorizer type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Authorizer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Authorizer resource.
 */
export interface AuthorizerArgs {
    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     */
    authType?: pulumi.Input<string>;
    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     */
    authorizerCredentials?: pulumi.Input<string>;
    /**
     * The TTL in seconds of cached authorizer results.
     */
    authorizerResultTtlInSeconds?: pulumi.Input<number>;
    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     */
    authorizerUri?: pulumi.Input<string>;
    /**
     * The identity source for which authorization is requested.
     */
    identitySource?: pulumi.Input<string>;
    /**
     * A validation expression for the incoming identity token.
     */
    identityValidationExpression?: pulumi.Input<string>;
    /**
     * The name of the authorizer.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     */
    providerARNs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier of the API.
     */
    restApiId: pulumi.Input<string>;
    /**
     * The authorizer type.
     */
    type: pulumi.Input<string>;
}
