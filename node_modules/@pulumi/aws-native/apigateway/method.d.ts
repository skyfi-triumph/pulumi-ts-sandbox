import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::ApiGateway::Method
 */
export declare class Method extends pulumi.CustomResource {
    /**
     * Get an existing Method resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Method;
    /**
     * Returns true if the given object is an instance of Method.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Method;
    /**
     * Indicates whether the method requires clients to submit a valid API key.
     */
    readonly apiKeyRequired: pulumi.Output<boolean | undefined>;
    /**
     * A list of authorization scopes configured on the method.
     */
    readonly authorizationScopes: pulumi.Output<string[] | undefined>;
    /**
     * The method's authorization type.
     */
    readonly authorizationType: pulumi.Output<enums.apigateway.MethodAuthorizationType | undefined>;
    /**
     * The identifier of the authorizer to use on this method.
     */
    readonly authorizerId: pulumi.Output<string | undefined>;
    /**
     * The backend system that the method calls when it receives a request.
     */
    readonly httpMethod: pulumi.Output<string>;
    /**
     * The backend system that the method calls when it receives a request.
     */
    readonly integration: pulumi.Output<outputs.apigateway.MethodIntegration | undefined>;
    /**
     * The responses that can be sent to the client who calls the method.
     */
    readonly methodResponses: pulumi.Output<outputs.apigateway.MethodResponse[] | undefined>;
    /**
     * A friendly operation name for the method.
     */
    readonly operationName: pulumi.Output<string | undefined>;
    /**
     * The resources that are used for the request's content type. Specify request models as key-value pairs (string-to-string mapping), with a content type as the key and a Model resource name as the value.
     */
    readonly requestModels: pulumi.Output<any | undefined>;
    /**
     * The request parameters that API Gateway accepts. Specify request parameters as key-value pairs (string-to-Boolean mapping), with a source as the key and a Boolean as the value.
     */
    readonly requestParameters: pulumi.Output<any | undefined>;
    /**
     * The ID of the associated request validator.
     */
    readonly requestValidatorId: pulumi.Output<string | undefined>;
    /**
     * The ID of an API Gateway resource.
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * The ID of the RestApi resource in which API Gateway creates the method.
     */
    readonly restApiId: pulumi.Output<string>;
    /**
     * Create a Method resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MethodArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Method resource.
 */
export interface MethodArgs {
    /**
     * Indicates whether the method requires clients to submit a valid API key.
     */
    apiKeyRequired?: pulumi.Input<boolean>;
    /**
     * A list of authorization scopes configured on the method.
     */
    authorizationScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method's authorization type.
     */
    authorizationType?: pulumi.Input<enums.apigateway.MethodAuthorizationType>;
    /**
     * The identifier of the authorizer to use on this method.
     */
    authorizerId?: pulumi.Input<string>;
    /**
     * The backend system that the method calls when it receives a request.
     */
    httpMethod: pulumi.Input<string>;
    /**
     * The backend system that the method calls when it receives a request.
     */
    integration?: pulumi.Input<inputs.apigateway.MethodIntegrationArgs>;
    /**
     * The responses that can be sent to the client who calls the method.
     */
    methodResponses?: pulumi.Input<pulumi.Input<inputs.apigateway.MethodResponseArgs>[]>;
    /**
     * A friendly operation name for the method.
     */
    operationName?: pulumi.Input<string>;
    /**
     * The resources that are used for the request's content type. Specify request models as key-value pairs (string-to-string mapping), with a content type as the key and a Model resource name as the value.
     */
    requestModels?: any;
    /**
     * The request parameters that API Gateway accepts. Specify request parameters as key-value pairs (string-to-Boolean mapping), with a source as the key and a Boolean as the value.
     */
    requestParameters?: any;
    /**
     * The ID of the associated request validator.
     */
    requestValidatorId?: pulumi.Input<string>;
    /**
     * The ID of an API Gateway resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The ID of the RestApi resource in which API Gateway creates the method.
     */
    restApiId: pulumi.Input<string>;
}
