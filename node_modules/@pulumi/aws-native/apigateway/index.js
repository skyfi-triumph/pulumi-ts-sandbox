"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./account"), exports);
__exportStar(require("./apiKey"), exports);
__exportStar(require("./authorizer"), exports);
__exportStar(require("./basePathMapping"), exports);
__exportStar(require("./clientCertificate"), exports);
__exportStar(require("./deployment"), exports);
__exportStar(require("./documentationPart"), exports);
__exportStar(require("./documentationVersion"), exports);
__exportStar(require("./domainName"), exports);
__exportStar(require("./gatewayResponse"), exports);
__exportStar(require("./method"), exports);
__exportStar(require("./model"), exports);
__exportStar(require("./requestValidator"), exports);
__exportStar(require("./resource"), exports);
__exportStar(require("./restApi"), exports);
__exportStar(require("./stage"), exports);
__exportStar(require("./usagePlan"), exports);
__exportStar(require("./usagePlanKey"), exports);
__exportStar(require("./vpcLink"), exports);
// Export enums:
__exportStar(require("../types/enums/apigateway"), exports);
// Import resources to register:
const account_1 = require("./account");
const apiKey_1 = require("./apiKey");
const authorizer_1 = require("./authorizer");
const basePathMapping_1 = require("./basePathMapping");
const clientCertificate_1 = require("./clientCertificate");
const deployment_1 = require("./deployment");
const documentationPart_1 = require("./documentationPart");
const documentationVersion_1 = require("./documentationVersion");
const domainName_1 = require("./domainName");
const gatewayResponse_1 = require("./gatewayResponse");
const method_1 = require("./method");
const model_1 = require("./model");
const requestValidator_1 = require("./requestValidator");
const resource_1 = require("./resource");
const restApi_1 = require("./restApi");
const stage_1 = require("./stage");
const usagePlan_1 = require("./usagePlan");
const usagePlanKey_1 = require("./usagePlanKey");
const vpcLink_1 = require("./vpcLink");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:apigateway:Account":
                return new account_1.Account(name, undefined, { urn });
            case "aws-native:apigateway:ApiKey":
                return new apiKey_1.ApiKey(name, undefined, { urn });
            case "aws-native:apigateway:Authorizer":
                return new authorizer_1.Authorizer(name, undefined, { urn });
            case "aws-native:apigateway:BasePathMapping":
                return new basePathMapping_1.BasePathMapping(name, undefined, { urn });
            case "aws-native:apigateway:ClientCertificate":
                return new clientCertificate_1.ClientCertificate(name, undefined, { urn });
            case "aws-native:apigateway:Deployment":
                return new deployment_1.Deployment(name, undefined, { urn });
            case "aws-native:apigateway:DocumentationPart":
                return new documentationPart_1.DocumentationPart(name, undefined, { urn });
            case "aws-native:apigateway:DocumentationVersion":
                return new documentationVersion_1.DocumentationVersion(name, undefined, { urn });
            case "aws-native:apigateway:DomainName":
                return new domainName_1.DomainName(name, undefined, { urn });
            case "aws-native:apigateway:GatewayResponse":
                return new gatewayResponse_1.GatewayResponse(name, undefined, { urn });
            case "aws-native:apigateway:Method":
                return new method_1.Method(name, undefined, { urn });
            case "aws-native:apigateway:Model":
                return new model_1.Model(name, undefined, { urn });
            case "aws-native:apigateway:RequestValidator":
                return new requestValidator_1.RequestValidator(name, undefined, { urn });
            case "aws-native:apigateway:Resource":
                return new resource_1.Resource(name, undefined, { urn });
            case "aws-native:apigateway:RestApi":
                return new restApi_1.RestApi(name, undefined, { urn });
            case "aws-native:apigateway:Stage":
                return new stage_1.Stage(name, undefined, { urn });
            case "aws-native:apigateway:UsagePlan":
                return new usagePlan_1.UsagePlan(name, undefined, { urn });
            case "aws-native:apigateway:UsagePlanKey":
                return new usagePlanKey_1.UsagePlanKey(name, undefined, { urn });
            case "aws-native:apigateway:VpcLink":
                return new vpcLink_1.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "apigateway", _module);
//# sourceMappingURL=index.js.map