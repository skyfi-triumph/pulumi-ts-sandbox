"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Method = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::ApiGateway::Method
 */
class Method extends pulumi.CustomResource {
    /**
     * Create a Method resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.httpMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpMethod'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.restApiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restApiId'");
            }
            inputs["apiKeyRequired"] = args ? args.apiKeyRequired : undefined;
            inputs["authorizationScopes"] = args ? args.authorizationScopes : undefined;
            inputs["authorizationType"] = args ? args.authorizationType : undefined;
            inputs["authorizerId"] = args ? args.authorizerId : undefined;
            inputs["httpMethod"] = args ? args.httpMethod : undefined;
            inputs["integration"] = args ? args.integration : undefined;
            inputs["methodResponses"] = args ? args.methodResponses : undefined;
            inputs["operationName"] = args ? args.operationName : undefined;
            inputs["requestModels"] = args ? args.requestModels : undefined;
            inputs["requestParameters"] = args ? args.requestParameters : undefined;
            inputs["requestValidatorId"] = args ? args.requestValidatorId : undefined;
            inputs["resourceId"] = args ? args.resourceId : undefined;
            inputs["restApiId"] = args ? args.restApiId : undefined;
        }
        else {
            inputs["apiKeyRequired"] = undefined /*out*/;
            inputs["authorizationScopes"] = undefined /*out*/;
            inputs["authorizationType"] = undefined /*out*/;
            inputs["authorizerId"] = undefined /*out*/;
            inputs["httpMethod"] = undefined /*out*/;
            inputs["integration"] = undefined /*out*/;
            inputs["methodResponses"] = undefined /*out*/;
            inputs["operationName"] = undefined /*out*/;
            inputs["requestModels"] = undefined /*out*/;
            inputs["requestParameters"] = undefined /*out*/;
            inputs["requestValidatorId"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["restApiId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Method.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Method resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Method(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Method.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Method.__pulumiType;
    }
}
exports.Method = Method;
/** @internal */
Method.__pulumiType = 'aws-native:apigateway:Method';
//# sourceMappingURL=method.js.map