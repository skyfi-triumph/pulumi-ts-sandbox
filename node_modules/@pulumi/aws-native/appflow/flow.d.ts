import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::AppFlow::Flow.
 */
export declare class Flow extends pulumi.CustomResource {
    /**
     * Get an existing Flow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Flow;
    /**
     * Returns true if the given object is an instance of Flow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Flow;
    /**
     * Description of the flow.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * List of Destination connectors of the flow.
     */
    readonly destinationFlowConfigList: pulumi.Output<outputs.appflow.FlowDestinationFlowConfig[]>;
    /**
     * ARN identifier of the flow.
     */
    readonly flowArn: pulumi.Output<string>;
    /**
     * Name of the flow.
     */
    readonly flowName: pulumi.Output<string>;
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
     */
    readonly kMSArn: pulumi.Output<string | undefined>;
    /**
     * Configurations of Source connector of the flow.
     */
    readonly sourceFlowConfig: pulumi.Output<outputs.appflow.FlowSourceFlowConfig>;
    /**
     * List of Tags.
     */
    readonly tags: pulumi.Output<outputs.appflow.FlowTag[] | undefined>;
    /**
     * List of tasks for the flow.
     */
    readonly tasks: pulumi.Output<outputs.appflow.FlowTask[]>;
    /**
     * Trigger settings of the flow.
     */
    readonly triggerConfig: pulumi.Output<outputs.appflow.FlowTriggerConfig>;
    /**
     * Create a Flow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Flow resource.
 */
export interface FlowArgs {
    /**
     * Description of the flow.
     */
    description?: pulumi.Input<string>;
    /**
     * List of Destination connectors of the flow.
     */
    destinationFlowConfigList: pulumi.Input<pulumi.Input<inputs.appflow.FlowDestinationFlowConfigArgs>[]>;
    /**
     * Name of the flow.
     */
    flowName?: pulumi.Input<string>;
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
     */
    kMSArn?: pulumi.Input<string>;
    /**
     * Configurations of Source connector of the flow.
     */
    sourceFlowConfig: pulumi.Input<inputs.appflow.FlowSourceFlowConfigArgs>;
    /**
     * List of Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.appflow.FlowTagArgs>[]>;
    /**
     * List of tasks for the flow.
     */
    tasks: pulumi.Input<pulumi.Input<inputs.appflow.FlowTaskArgs>[]>;
    /**
     * Trigger settings of the flow.
     */
    triggerConfig: pulumi.Input<inputs.appflow.FlowTriggerConfigArgs>;
}
