import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::AppFlow::ConnectorProfile
 */
export declare class ConnectorProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectorProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectorProfile;
    /**
     * Returns true if the given object is an instance of ConnectorProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConnectorProfile;
    /**
     * Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular
     */
    readonly connectionMode: pulumi.Output<enums.appflow.ConnectorProfileConnectionMode>;
    /**
     * Unique identifier for connector profile resources
     */
    readonly connectorProfileArn: pulumi.Output<string>;
    /**
     * Connector specific configurations needed to create connector profile
     */
    readonly connectorProfileConfig: pulumi.Output<outputs.appflow.ConnectorProfileConfig | undefined>;
    /**
     * The maximum number of items to retrieve in a single batch.
     */
    readonly connectorProfileName: pulumi.Output<string>;
    /**
     * List of Saas providers that need connector profile to be created
     */
    readonly connectorType: pulumi.Output<enums.appflow.ConnectorProfileConnectorType>;
    /**
     * A unique Arn for Connector-Profile resource
     */
    readonly credentialsArn: pulumi.Output<string>;
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
     */
    readonly kMSArn: pulumi.Output<string | undefined>;
    /**
     * Create a ConnectorProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConnectorProfile resource.
 */
export interface ConnectorProfileArgs {
    /**
     * Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular
     */
    connectionMode: pulumi.Input<enums.appflow.ConnectorProfileConnectionMode>;
    /**
     * Connector specific configurations needed to create connector profile
     */
    connectorProfileConfig?: pulumi.Input<inputs.appflow.ConnectorProfileConfigArgs>;
    /**
     * The maximum number of items to retrieve in a single batch.
     */
    connectorProfileName?: pulumi.Input<string>;
    /**
     * List of Saas providers that need connector profile to be created
     */
    connectorType: pulumi.Input<enums.appflow.ConnectorProfileConnectorType>;
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
     */
    kMSArn?: pulumi.Input<string>;
}
