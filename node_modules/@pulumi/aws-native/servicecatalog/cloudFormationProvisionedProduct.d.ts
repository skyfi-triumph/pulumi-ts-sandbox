import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 */
export declare class CloudFormationProvisionedProduct extends pulumi.CustomResource {
    /**
     * Get an existing CloudFormationProvisionedProduct resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CloudFormationProvisionedProduct;
    /**
     * Returns true if the given object is an instance of CloudFormationProvisionedProduct.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudFormationProvisionedProduct;
    readonly acceptLanguage: pulumi.Output<enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage | undefined>;
    readonly cloudformationStackArn: pulumi.Output<string>;
    readonly notificationArns: pulumi.Output<string[] | undefined>;
    /**
     * List of key-value pair outputs.
     */
    readonly outputs: pulumi.Output<any>;
    readonly pathId: pulumi.Output<string | undefined>;
    readonly pathName: pulumi.Output<string | undefined>;
    readonly productId: pulumi.Output<string | undefined>;
    readonly productName: pulumi.Output<string | undefined>;
    readonly provisionedProductId: pulumi.Output<string>;
    readonly provisionedProductName: pulumi.Output<string | undefined>;
    readonly provisioningArtifactId: pulumi.Output<string | undefined>;
    readonly provisioningArtifactName: pulumi.Output<string | undefined>;
    readonly provisioningParameters: pulumi.Output<outputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameter[] | undefined>;
    readonly provisioningPreferences: pulumi.Output<outputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferences | undefined>;
    readonly recordId: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.servicecatalog.CloudFormationProvisionedProductTag[] | undefined>;
    /**
     * Create a CloudFormationProvisionedProduct resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudFormationProvisionedProductArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CloudFormationProvisionedProduct resource.
 */
export interface CloudFormationProvisionedProductArgs {
    acceptLanguage?: pulumi.Input<enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage>;
    notificationArns?: pulumi.Input<pulumi.Input<string>[]>;
    pathId?: pulumi.Input<string>;
    pathName?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    productName?: pulumi.Input<string>;
    provisionedProductName?: pulumi.Input<string>;
    provisioningArtifactId?: pulumi.Input<string>;
    provisioningArtifactName?: pulumi.Input<string>;
    provisioningParameters?: pulumi.Input<pulumi.Input<inputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameterArgs>[]>;
    provisioningPreferences?: pulumi.Input<inputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferencesArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.servicecatalog.CloudFormationProvisionedProductTagArgs>[]>;
}
