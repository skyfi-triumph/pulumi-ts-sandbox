import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::IAM::Role
 */
export declare class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Role;
    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Role;
    /**
     * The Amazon Resource Name (ARN) for the role.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The trust policy that is associated with this role.
     */
    readonly assumeRolePolicyDocument: pulumi.Output<any>;
    /**
     * A description of the role that you provide.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     */
    readonly managedPolicyArns: pulumi.Output<string[] | undefined>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     */
    readonly maxSessionDuration: pulumi.Output<number | undefined>;
    /**
     * The path to the role.
     */
    readonly path: pulumi.Output<string | undefined>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     */
    readonly permissionsBoundary: pulumi.Output<string | undefined>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     */
    readonly policies: pulumi.Output<outputs.iam.RolePolicy[] | undefined>;
    /**
     * The stable and unique string identifying the role.
     */
    readonly roleId: pulumi.Output<string>;
    /**
     * A name for the IAM role, up to 64 characters in length.
     */
    readonly roleName: pulumi.Output<string | undefined>;
    /**
     * A list of tags that are attached to the role.
     */
    readonly tags: pulumi.Output<outputs.iam.RoleTag[] | undefined>;
    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * The trust policy that is associated with this role.
     */
    assumeRolePolicyDocument: any;
    /**
     * A description of the role that you provide.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     */
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     */
    maxSessionDuration?: pulumi.Input<number>;
    /**
     * The path to the role.
     */
    path?: pulumi.Input<string>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     */
    permissionsBoundary?: pulumi.Input<string>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.iam.RolePolicyArgs>[]>;
    /**
     * A name for the IAM role, up to 64 characters in length.
     */
    roleName?: pulumi.Input<string>;
    /**
     * A list of tags that are attached to the role.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iam.RoleTagArgs>[]>;
}
