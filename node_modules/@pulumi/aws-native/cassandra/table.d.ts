import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::Cassandra::Table
 */
export declare class Table extends pulumi.CustomResource {
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Table;
    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Table;
    readonly billingMode: pulumi.Output<outputs.cassandra.TableBillingMode | undefined>;
    /**
     * Clustering key columns of the table
     */
    readonly clusteringKeyColumns: pulumi.Output<outputs.cassandra.TableClusteringKeyColumn[] | undefined>;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     */
    readonly defaultTimeToLive: pulumi.Output<number | undefined>;
    readonly encryptionSpecification: pulumi.Output<outputs.cassandra.TableEncryptionSpecification | undefined>;
    /**
     * Name for Cassandra keyspace
     */
    readonly keyspaceName: pulumi.Output<string>;
    /**
     * Partition key columns of the table
     */
    readonly partitionKeyColumns: pulumi.Output<outputs.cassandra.TableColumn[]>;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    readonly pointInTimeRecoveryEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Non-key columns of the table
     */
    readonly regularColumns: pulumi.Output<outputs.cassandra.TableColumn[] | undefined>;
    /**
     * Name for Cassandra table
     */
    readonly tableName: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource
     */
    readonly tags: pulumi.Output<outputs.cassandra.TableTag[] | undefined>;
    /**
     * Create a Table resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Table resource.
 */
export interface TableArgs {
    billingMode?: pulumi.Input<inputs.cassandra.TableBillingModeArgs>;
    /**
     * Clustering key columns of the table
     */
    clusteringKeyColumns?: pulumi.Input<pulumi.Input<inputs.cassandra.TableClusteringKeyColumnArgs>[]>;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     */
    defaultTimeToLive?: pulumi.Input<number>;
    encryptionSpecification?: pulumi.Input<inputs.cassandra.TableEncryptionSpecificationArgs>;
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: pulumi.Input<string>;
    /**
     * Partition key columns of the table
     */
    partitionKeyColumns: pulumi.Input<pulumi.Input<inputs.cassandra.TableColumnArgs>[]>;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    pointInTimeRecoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Non-key columns of the table
     */
    regularColumns?: pulumi.Input<pulumi.Input<inputs.cassandra.TableColumnArgs>[]>;
    /**
     * Name for Cassandra table
     */
    tableName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cassandra.TableTagArgs>[]>;
}
