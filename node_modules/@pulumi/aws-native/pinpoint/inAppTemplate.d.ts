import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::Pinpoint::InAppTemplate
 */
export declare class InAppTemplate extends pulumi.CustomResource {
    /**
     * Get an existing InAppTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InAppTemplate;
    /**
     * Returns true if the given object is an instance of InAppTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InAppTemplate;
    readonly arn: pulumi.Output<string>;
    readonly content: pulumi.Output<outputs.pinpoint.InAppTemplateInAppMessageContent[] | undefined>;
    readonly customConfig: pulumi.Output<any | undefined>;
    readonly layout: pulumi.Output<enums.pinpoint.InAppTemplateLayout | undefined>;
    readonly tags: pulumi.Output<any | undefined>;
    readonly templateDescription: pulumi.Output<string | undefined>;
    readonly templateName: pulumi.Output<string>;
    /**
     * Create a InAppTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InAppTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InAppTemplate resource.
 */
export interface InAppTemplateArgs {
    content?: pulumi.Input<pulumi.Input<inputs.pinpoint.InAppTemplateInAppMessageContentArgs>[]>;
    customConfig?: any;
    layout?: pulumi.Input<enums.pinpoint.InAppTemplateLayout>;
    tags?: any;
    templateDescription?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
