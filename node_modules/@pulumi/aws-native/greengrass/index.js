"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./connectorDefinition"), exports);
__exportStar(require("./connectorDefinitionVersion"), exports);
__exportStar(require("./coreDefinition"), exports);
__exportStar(require("./coreDefinitionVersion"), exports);
__exportStar(require("./deviceDefinition"), exports);
__exportStar(require("./deviceDefinitionVersion"), exports);
__exportStar(require("./functionDefinition"), exports);
__exportStar(require("./functionDefinitionVersion"), exports);
__exportStar(require("./group"), exports);
__exportStar(require("./groupVersion"), exports);
__exportStar(require("./loggerDefinition"), exports);
__exportStar(require("./loggerDefinitionVersion"), exports);
__exportStar(require("./resourceDefinition"), exports);
__exportStar(require("./resourceDefinitionVersion"), exports);
__exportStar(require("./subscriptionDefinition"), exports);
__exportStar(require("./subscriptionDefinitionVersion"), exports);
// Import resources to register:
const connectorDefinition_1 = require("./connectorDefinition");
const connectorDefinitionVersion_1 = require("./connectorDefinitionVersion");
const coreDefinition_1 = require("./coreDefinition");
const coreDefinitionVersion_1 = require("./coreDefinitionVersion");
const deviceDefinition_1 = require("./deviceDefinition");
const deviceDefinitionVersion_1 = require("./deviceDefinitionVersion");
const functionDefinition_1 = require("./functionDefinition");
const functionDefinitionVersion_1 = require("./functionDefinitionVersion");
const group_1 = require("./group");
const groupVersion_1 = require("./groupVersion");
const loggerDefinition_1 = require("./loggerDefinition");
const loggerDefinitionVersion_1 = require("./loggerDefinitionVersion");
const resourceDefinition_1 = require("./resourceDefinition");
const resourceDefinitionVersion_1 = require("./resourceDefinitionVersion");
const subscriptionDefinition_1 = require("./subscriptionDefinition");
const subscriptionDefinitionVersion_1 = require("./subscriptionDefinitionVersion");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:greengrass:ConnectorDefinition":
                return new connectorDefinition_1.ConnectorDefinition(name, undefined, { urn });
            case "aws-native:greengrass:ConnectorDefinitionVersion":
                return new connectorDefinitionVersion_1.ConnectorDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:CoreDefinition":
                return new coreDefinition_1.CoreDefinition(name, undefined, { urn });
            case "aws-native:greengrass:CoreDefinitionVersion":
                return new coreDefinitionVersion_1.CoreDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:DeviceDefinition":
                return new deviceDefinition_1.DeviceDefinition(name, undefined, { urn });
            case "aws-native:greengrass:DeviceDefinitionVersion":
                return new deviceDefinitionVersion_1.DeviceDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:FunctionDefinition":
                return new functionDefinition_1.FunctionDefinition(name, undefined, { urn });
            case "aws-native:greengrass:FunctionDefinitionVersion":
                return new functionDefinitionVersion_1.FunctionDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:Group":
                return new group_1.Group(name, undefined, { urn });
            case "aws-native:greengrass:GroupVersion":
                return new groupVersion_1.GroupVersion(name, undefined, { urn });
            case "aws-native:greengrass:LoggerDefinition":
                return new loggerDefinition_1.LoggerDefinition(name, undefined, { urn });
            case "aws-native:greengrass:LoggerDefinitionVersion":
                return new loggerDefinitionVersion_1.LoggerDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:ResourceDefinition":
                return new resourceDefinition_1.ResourceDefinition(name, undefined, { urn });
            case "aws-native:greengrass:ResourceDefinitionVersion":
                return new resourceDefinitionVersion_1.ResourceDefinitionVersion(name, undefined, { urn });
            case "aws-native:greengrass:SubscriptionDefinition":
                return new subscriptionDefinition_1.SubscriptionDefinition(name, undefined, { urn });
            case "aws-native:greengrass:SubscriptionDefinitionVersion":
                return new subscriptionDefinitionVersion_1.SubscriptionDefinitionVersion(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "greengrass", _module);
//# sourceMappingURL=index.js.map