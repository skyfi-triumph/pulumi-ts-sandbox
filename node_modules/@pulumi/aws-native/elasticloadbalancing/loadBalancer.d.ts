import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ElasticLoadBalancing::LoadBalancer
 *
 * @deprecated LoadBalancer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LoadBalancer;
    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadBalancer;
    readonly accessLoggingPolicy: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerAccessLoggingPolicy | undefined>;
    readonly appCookieStickinessPolicy: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerAppCookieStickinessPolicy[] | undefined>;
    readonly availabilityZones: pulumi.Output<string[] | undefined>;
    readonly canonicalHostedZoneName: pulumi.Output<string>;
    readonly canonicalHostedZoneNameID: pulumi.Output<string>;
    readonly connectionDrainingPolicy: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerConnectionDrainingPolicy | undefined>;
    readonly connectionSettings: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerConnectionSettings | undefined>;
    readonly crossZone: pulumi.Output<boolean | undefined>;
    readonly dNSName: pulumi.Output<string>;
    readonly healthCheck: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerHealthCheck | undefined>;
    readonly instances: pulumi.Output<string[] | undefined>;
    readonly lBCookieStickinessPolicy: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerLBCookieStickinessPolicy[] | undefined>;
    readonly listeners: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerListeners[]>;
    readonly loadBalancerName: pulumi.Output<string | undefined>;
    readonly policies: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerPolicies[] | undefined>;
    readonly scheme: pulumi.Output<string | undefined>;
    readonly securityGroups: pulumi.Output<string[] | undefined>;
    readonly sourceSecurityGroupGroupName: pulumi.Output<string | undefined>;
    readonly sourceSecurityGroupOwnerAlias: pulumi.Output<string | undefined>;
    readonly subnets: pulumi.Output<string[] | undefined>;
    readonly tags: pulumi.Output<outputs.elasticloadbalancing.LoadBalancerTag[] | undefined>;
    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated LoadBalancer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    accessLoggingPolicy?: pulumi.Input<inputs.elasticloadbalancing.LoadBalancerAccessLoggingPolicyArgs>;
    appCookieStickinessPolicy?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancing.LoadBalancerAppCookieStickinessPolicyArgs>[]>;
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    connectionDrainingPolicy?: pulumi.Input<inputs.elasticloadbalancing.LoadBalancerConnectionDrainingPolicyArgs>;
    connectionSettings?: pulumi.Input<inputs.elasticloadbalancing.LoadBalancerConnectionSettingsArgs>;
    crossZone?: pulumi.Input<boolean>;
    healthCheck?: pulumi.Input<inputs.elasticloadbalancing.LoadBalancerHealthCheckArgs>;
    instances?: pulumi.Input<pulumi.Input<string>[]>;
    lBCookieStickinessPolicy?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancing.LoadBalancerLBCookieStickinessPolicyArgs>[]>;
    listeners: pulumi.Input<pulumi.Input<inputs.elasticloadbalancing.LoadBalancerListenersArgs>[]>;
    loadBalancerName?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancing.LoadBalancerPoliciesArgs>[]>;
    scheme?: pulumi.Input<string>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    sourceSecurityGroupGroupName?: pulumi.Input<string>;
    sourceSecurityGroupOwnerAlias?: pulumi.Input<string>;
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancing.LoadBalancerTagArgs>[]>;
}
