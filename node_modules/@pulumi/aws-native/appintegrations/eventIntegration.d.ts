import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::AppIntegrations::EventIntegration
 */
export declare class EventIntegration extends pulumi.CustomResource {
    /**
     * Get an existing EventIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EventIntegration;
    /**
     * Returns true if the given object is an instance of EventIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EventIntegration;
    /**
     * The associations with the event integration.
     */
    readonly associations: pulumi.Output<outputs.appintegrations.EventIntegrationAssociation[]>;
    /**
     * The event integration description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Amazon Eventbridge bus for the event integration.
     */
    readonly eventBridgeBus: pulumi.Output<string>;
    /**
     * The EventFilter (source) associated with the event integration.
     */
    readonly eventFilter: pulumi.Output<outputs.appintegrations.EventIntegrationEventFilter>;
    /**
     * The Amazon Resource Name (ARN) of the event integration.
     */
    readonly eventIntegrationArn: pulumi.Output<string>;
    /**
     * The name of the event integration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the event integration.
     */
    readonly tags: pulumi.Output<outputs.appintegrations.EventIntegrationTag[] | undefined>;
    /**
     * Create a EventIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventIntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EventIntegration resource.
 */
export interface EventIntegrationArgs {
    /**
     * The event integration description.
     */
    description?: pulumi.Input<string>;
    /**
     * The Amazon Eventbridge bus for the event integration.
     */
    eventBridgeBus: pulumi.Input<string>;
    /**
     * The EventFilter (source) associated with the event integration.
     */
    eventFilter: pulumi.Input<inputs.appintegrations.EventIntegrationEventFilterArgs>;
    /**
     * The name of the event integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the event integration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.appintegrations.EventIntegrationTagArgs>[]>;
}
