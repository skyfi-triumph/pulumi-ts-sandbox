import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource schema for AWS::DataSync::Task.
 */
export declare class Task extends pulumi.CustomResource {
    /**
     * Get an existing Task resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Task;
    /**
     * Returns true if the given object is an instance of Task.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Task;
    /**
     * The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
     */
    readonly cloudWatchLogGroupArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of an AWS storage resource's location.
     */
    readonly destinationLocationArn: pulumi.Output<string>;
    readonly destinationNetworkInterfaceArns: pulumi.Output<string[]>;
    /**
     * Errors that AWS DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues.
     */
    readonly errorCode: pulumi.Output<string>;
    /**
     * Detailed description of an error that was encountered during the task execution.
     */
    readonly errorDetail: pulumi.Output<string>;
    readonly excludes: pulumi.Output<outputs.datasync.TaskFilterRule[] | undefined>;
    readonly includes: pulumi.Output<outputs.datasync.TaskFilterRule[] | undefined>;
    /**
     * The name of a task. This value is a text reference that is used to identify the task in the console.
     */
    readonly name: pulumi.Output<string | undefined>;
    readonly options: pulumi.Output<outputs.datasync.TaskOptions | undefined>;
    readonly schedule: pulumi.Output<outputs.datasync.TaskSchedule | undefined>;
    /**
     * The ARN of the source location for the task.
     */
    readonly sourceLocationArn: pulumi.Output<string>;
    readonly sourceNetworkInterfaceArns: pulumi.Output<string[]>;
    /**
     * The status of the task that was described.
     */
    readonly status: pulumi.Output<enums.datasync.TaskStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.datasync.TaskTag[] | undefined>;
    /**
     * The ARN of the task.
     */
    readonly taskArn: pulumi.Output<string>;
    /**
     * Create a Task resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Task resource.
 */
export interface TaskArgs {
    /**
     * The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
     */
    cloudWatchLogGroupArn?: pulumi.Input<string>;
    /**
     * The ARN of an AWS storage resource's location.
     */
    destinationLocationArn: pulumi.Input<string>;
    excludes?: pulumi.Input<pulumi.Input<inputs.datasync.TaskFilterRuleArgs>[]>;
    includes?: pulumi.Input<pulumi.Input<inputs.datasync.TaskFilterRuleArgs>[]>;
    /**
     * The name of a task. This value is a text reference that is used to identify the task in the console.
     */
    name?: pulumi.Input<string>;
    options?: pulumi.Input<inputs.datasync.TaskOptionsArgs>;
    schedule?: pulumi.Input<inputs.datasync.TaskScheduleArgs>;
    /**
     * The ARN of the source location for the task.
     */
    sourceLocationArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.datasync.TaskTagArgs>[]>;
}
