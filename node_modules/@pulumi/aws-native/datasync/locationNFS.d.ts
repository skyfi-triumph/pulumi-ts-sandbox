import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::DataSync::LocationNFS
 */
export declare class LocationNFS extends pulumi.CustomResource {
    /**
     * Get an existing LocationNFS resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationNFS;
    /**
     * Returns true if the given object is an instance of LocationNFS.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LocationNFS;
    /**
     * The Amazon Resource Name (ARN) of the NFS location.
     */
    readonly locationArn: pulumi.Output<string>;
    /**
     * The URL of the NFS location that was described.
     */
    readonly locationUri: pulumi.Output<string>;
    readonly mountOptions: pulumi.Output<outputs.datasync.LocationNFSMountOptions | undefined>;
    readonly onPremConfig: pulumi.Output<outputs.datasync.LocationNFSOnPremConfig>;
    /**
     * The name of the NFS server. This value is the IP address or DNS name of the NFS server.
     */
    readonly serverHostname: pulumi.Output<string>;
    /**
     * The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination.
     */
    readonly subdirectory: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.datasync.LocationNFSTag[] | undefined>;
    /**
     * Create a LocationNFS resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationNFSArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LocationNFS resource.
 */
export interface LocationNFSArgs {
    mountOptions?: pulumi.Input<inputs.datasync.LocationNFSMountOptionsArgs>;
    onPremConfig: pulumi.Input<inputs.datasync.LocationNFSOnPremConfigArgs>;
    /**
     * The name of the NFS server. This value is the IP address or DNS name of the NFS server.
     */
    serverHostname: pulumi.Input<string>;
    /**
     * The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination.
     */
    subdirectory: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.datasync.LocationNFSTagArgs>[]>;
}
