import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::DataSync::LocationEFS.
 */
export declare class LocationEFS extends pulumi.CustomResource {
    /**
     * Get an existing LocationEFS resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationEFS;
    /**
     * Returns true if the given object is an instance of LocationEFS.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LocationEFS;
    readonly ec2Config: pulumi.Output<outputs.datasync.LocationEFSEc2Config>;
    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS file system.
     */
    readonly efsFilesystemArn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
     */
    readonly locationArn: pulumi.Output<string>;
    /**
     * The URL of the EFS location that was described.
     */
    readonly locationUri: pulumi.Output<string>;
    /**
     * A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     */
    readonly subdirectory: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.datasync.LocationEFSTag[] | undefined>;
    /**
     * Create a LocationEFS resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationEFSArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LocationEFS resource.
 */
export interface LocationEFSArgs {
    ec2Config: pulumi.Input<inputs.datasync.LocationEFSEc2ConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS file system.
     */
    efsFilesystemArn: pulumi.Input<string>;
    /**
     * A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.datasync.LocationEFSTagArgs>[]>;
}
