import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::DataSync::LocationSMB.
 */
export declare class LocationSMB extends pulumi.CustomResource {
    /**
     * Get an existing LocationSMB resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationSMB;
    /**
     * Returns true if the given object is an instance of LocationSMB.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LocationSMB;
    /**
     * The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
     */
    readonly agentArns: pulumi.Output<string[]>;
    /**
     * The name of the Windows domain that the SMB server belongs to.
     */
    readonly domain: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the SMB location that is created.
     */
    readonly locationArn: pulumi.Output<string>;
    /**
     * The URL of the SMB location that was described.
     */
    readonly locationUri: pulumi.Output<string>;
    readonly mountOptions: pulumi.Output<outputs.datasync.LocationSMBMountOptions | undefined>;
    /**
     * The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
     */
    readonly password: pulumi.Output<string>;
    /**
     * The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
     */
    readonly serverHostname: pulumi.Output<string>;
    /**
     * The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
     */
    readonly subdirectory: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.datasync.LocationSMBTag[] | undefined>;
    /**
     * The user who can mount the share, has the permissions to access files and folders in the SMB share.
     */
    readonly user: pulumi.Output<string>;
    /**
     * Create a LocationSMB resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationSMBArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LocationSMB resource.
 */
export interface LocationSMBArgs {
    /**
     * The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
     */
    agentArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Windows domain that the SMB server belongs to.
     */
    domain?: pulumi.Input<string>;
    mountOptions?: pulumi.Input<inputs.datasync.LocationSMBMountOptionsArgs>;
    /**
     * The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
     */
    password: pulumi.Input<string>;
    /**
     * The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
     */
    serverHostname: pulumi.Input<string>;
    /**
     * The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
     */
    subdirectory: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.datasync.LocationSMBTagArgs>[]>;
    /**
     * The user who can mount the share, has the permissions to access files and folders in the SMB share.
     */
    user: pulumi.Input<string>;
}
