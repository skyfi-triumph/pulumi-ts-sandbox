import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::FIS::ExperimentTemplate
 */
export declare class ExperimentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ExperimentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ExperimentTemplate;
    /**
     * Returns true if the given object is an instance of ExperimentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ExperimentTemplate;
    readonly actions: pulumi.Output<outputs.fis.ExperimentTemplateActionMap | undefined>;
    readonly description: pulumi.Output<string>;
    readonly roleArn: pulumi.Output<string>;
    readonly stopConditions: pulumi.Output<outputs.fis.ExperimentTemplateStopCondition[]>;
    readonly tags: pulumi.Output<any>;
    readonly targets: pulumi.Output<outputs.fis.ExperimentTemplateTargetMap>;
    /**
     * Create a ExperimentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExperimentTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ExperimentTemplate resource.
 */
export interface ExperimentTemplateArgs {
    actions?: pulumi.Input<inputs.fis.ExperimentTemplateActionMapArgs>;
    description: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    stopConditions: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateStopConditionArgs>[]>;
    tags: any;
    targets: pulumi.Input<inputs.fis.ExperimentTemplateTargetMapArgs>;
}
