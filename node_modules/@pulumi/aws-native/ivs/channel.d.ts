import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::IVS::Channel
 */
export declare class Channel extends pulumi.CustomResource {
    /**
     * Get an existing Channel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Channel;
    /**
     * Returns true if the given object is an instance of Channel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Channel;
    /**
     * Channel ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Whether the channel is authorized.
     */
    readonly authorized: pulumi.Output<boolean | undefined>;
    /**
     * Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
     */
    readonly ingestEndpoint: pulumi.Output<string>;
    /**
     * Channel latency mode.
     */
    readonly latencyMode: pulumi.Output<enums.ivs.ChannelLatencyMode | undefined>;
    /**
     * Channel
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Channel Playback URL.
     */
    readonly playbackUrl: pulumi.Output<string>;
    /**
     * Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: “” (recording is disabled).
     */
    readonly recordingConfigurationArn: pulumi.Output<string | undefined>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    readonly tags: pulumi.Output<outputs.ivs.ChannelTag[] | undefined>;
    /**
     * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
     */
    readonly type: pulumi.Output<enums.ivs.ChannelType | undefined>;
    /**
     * Create a Channel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ChannelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Channel resource.
 */
export interface ChannelArgs {
    /**
     * Whether the channel is authorized.
     */
    authorized?: pulumi.Input<boolean>;
    /**
     * Channel latency mode.
     */
    latencyMode?: pulumi.Input<enums.ivs.ChannelLatencyMode>;
    /**
     * Channel
     */
    name?: pulumi.Input<string>;
    /**
     * Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: “” (recording is disabled).
     */
    recordingConfigurationArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ivs.ChannelTagArgs>[]>;
    /**
     * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
     */
    type?: pulumi.Input<enums.ivs.ChannelType>;
}
