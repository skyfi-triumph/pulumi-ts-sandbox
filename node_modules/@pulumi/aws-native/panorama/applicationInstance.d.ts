import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Schema for ApplicationInstance CloudFormation Resource
 */
export declare class ApplicationInstance extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApplicationInstance;
    /**
     * Returns true if the given object is an instance of ApplicationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApplicationInstance;
    readonly applicationInstanceId: pulumi.Output<string>;
    readonly applicationInstanceIdToReplace: pulumi.Output<string | undefined>;
    readonly arn: pulumi.Output<string>;
    readonly createdTime: pulumi.Output<number>;
    readonly defaultRuntimeContextDevice: pulumi.Output<string>;
    readonly defaultRuntimeContextDeviceName: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly deviceId: pulumi.Output<string | undefined>;
    readonly healthStatus: pulumi.Output<enums.panorama.ApplicationInstanceHealthStatus>;
    readonly lastUpdatedTime: pulumi.Output<number>;
    readonly manifestOverridesPayload: pulumi.Output<outputs.panorama.ApplicationInstanceManifestOverridesPayload | undefined>;
    readonly manifestPayload: pulumi.Output<outputs.panorama.ApplicationInstanceManifestPayload>;
    readonly name: pulumi.Output<string | undefined>;
    readonly runtimeRoleArn: pulumi.Output<string | undefined>;
    readonly status: pulumi.Output<enums.panorama.ApplicationInstanceStatus>;
    readonly statusDescription: pulumi.Output<string>;
    readonly statusFilter: pulumi.Output<enums.panorama.ApplicationInstanceStatusFilter | undefined>;
    readonly tags: pulumi.Output<outputs.panorama.ApplicationInstanceTag[] | undefined>;
    /**
     * Create a ApplicationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ApplicationInstance resource.
 */
export interface ApplicationInstanceArgs {
    applicationInstanceIdToReplace?: pulumi.Input<string>;
    defaultRuntimeContextDevice: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    manifestOverridesPayload?: pulumi.Input<inputs.panorama.ApplicationInstanceManifestOverridesPayloadArgs>;
    manifestPayload: pulumi.Input<inputs.panorama.ApplicationInstanceManifestPayloadArgs>;
    name?: pulumi.Input<string>;
    runtimeRoleArn?: pulumi.Input<string>;
    statusFilter?: pulumi.Input<enums.panorama.ApplicationInstanceStatusFilter>;
    tags?: pulumi.Input<pulumi.Input<inputs.panorama.ApplicationInstanceTagArgs>[]>;
}
