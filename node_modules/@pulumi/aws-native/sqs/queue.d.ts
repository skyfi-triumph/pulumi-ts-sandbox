import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::SQS::Queue
 *
 * @deprecated Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Queue;
    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Queue;
    readonly arn: pulumi.Output<string>;
    readonly contentBasedDeduplication: pulumi.Output<boolean | undefined>;
    readonly deduplicationScope: pulumi.Output<string | undefined>;
    readonly delaySeconds: pulumi.Output<number | undefined>;
    readonly fifoQueue: pulumi.Output<boolean | undefined>;
    readonly fifoThroughputLimit: pulumi.Output<string | undefined>;
    readonly kmsDataKeyReusePeriodSeconds: pulumi.Output<number | undefined>;
    readonly kmsMasterKeyId: pulumi.Output<string | undefined>;
    readonly maximumMessageSize: pulumi.Output<number | undefined>;
    readonly messageRetentionPeriod: pulumi.Output<number | undefined>;
    readonly queueName: pulumi.Output<string | undefined>;
    readonly receiveMessageWaitTimeSeconds: pulumi.Output<number | undefined>;
    readonly redriveAllowPolicy: pulumi.Output<any | undefined>;
    readonly redrivePolicy: pulumi.Output<any | undefined>;
    readonly tags: pulumi.Output<outputs.sqs.QueueTag[] | undefined>;
    readonly visibilityTimeout: pulumi.Output<number | undefined>;
    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: QueueArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deduplicationScope?: pulumi.Input<string>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    fifoThroughputLimit?: pulumi.Input<string>;
    kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    maximumMessageSize?: pulumi.Input<number>;
    messageRetentionPeriod?: pulumi.Input<number>;
    queueName?: pulumi.Input<string>;
    receiveMessageWaitTimeSeconds?: pulumi.Input<number>;
    redriveAllowPolicy?: any;
    redrivePolicy?: any;
    tags?: pulumi.Input<pulumi.Input<inputs.sqs.QueueTagArgs>[]>;
    visibilityTimeout?: pulumi.Input<number>;
}
