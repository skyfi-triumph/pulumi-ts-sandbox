import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * The `AWS::Redshift::EventSubscription` resource creates an Amazon Redshift Event Subscription.
 */
export declare class EventSubscription extends pulumi.CustomResource {
    /**
     * Get an existing EventSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EventSubscription;
    /**
     * Returns true if the given object is an instance of EventSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EventSubscription;
    /**
     * The name of the Amazon Redshift event notification subscription.
     */
    readonly custSubscriptionId: pulumi.Output<string>;
    /**
     * The AWS account associated with the Amazon Redshift event notification subscription.
     */
    readonly customerAwsId: pulumi.Output<string>;
    /**
     * A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the Amazon Redshift event categories to be published by the event notification subscription.
     */
    readonly eventCategories: pulumi.Output<enums.redshift.EventSubscriptionEventCategoriesItem[] | undefined>;
    /**
     * The list of Amazon Redshift event categories specified in the event notification subscription.
     */
    readonly eventCategoriesList: pulumi.Output<string[]>;
    /**
     * Specifies the Amazon Redshift event severity to be published by the event notification subscription.
     */
    readonly severity: pulumi.Output<enums.redshift.EventSubscriptionSeverity | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications.
     */
    readonly snsTopicArn: pulumi.Output<string | undefined>;
    /**
     * A list of one or more identifiers of Amazon Redshift source objects.
     */
    readonly sourceIds: pulumi.Output<string[] | undefined>;
    /**
     * A list of the sources that publish events to the Amazon Redshift event notification subscription.
     */
    readonly sourceIdsList: pulumi.Output<string[]>;
    /**
     * The type of source that will be generating the events.
     */
    readonly sourceType: pulumi.Output<enums.redshift.EventSubscriptionSourceType | undefined>;
    /**
     * The status of the Amazon Redshift event notification subscription.
     */
    readonly status: pulumi.Output<enums.redshift.EventSubscriptionStatus>;
    /**
     * The date and time the Amazon Redshift event notification subscription was created.
     */
    readonly subscriptionCreationTime: pulumi.Output<string>;
    /**
     * The name of the Amazon Redshift event notification subscription
     */
    readonly subscriptionName: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.redshift.EventSubscriptionTag[] | undefined>;
    /**
     * Create a EventSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EventSubscription resource.
 */
export interface EventSubscriptionArgs {
    /**
     * A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Amazon Redshift event categories to be published by the event notification subscription.
     */
    eventCategories?: pulumi.Input<pulumi.Input<enums.redshift.EventSubscriptionEventCategoriesItem>[]>;
    /**
     * Specifies the Amazon Redshift event severity to be published by the event notification subscription.
     */
    severity?: pulumi.Input<enums.redshift.EventSubscriptionSeverity>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications.
     */
    snsTopicArn?: pulumi.Input<string>;
    /**
     * A list of one or more identifiers of Amazon Redshift source objects.
     */
    sourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of source that will be generating the events.
     */
    sourceType?: pulumi.Input<enums.redshift.EventSubscriptionSourceType>;
    /**
     * The name of the Amazon Redshift event notification subscription
     */
    subscriptionName: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.redshift.EventSubscriptionTagArgs>[]>;
}
