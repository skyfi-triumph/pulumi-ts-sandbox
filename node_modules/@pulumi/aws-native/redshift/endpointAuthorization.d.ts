import * as pulumi from "@pulumi/pulumi";
/**
 * Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across AWS accounts.
 */
export declare class EndpointAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing EndpointAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EndpointAuthorization;
    /**
     * Returns true if the given object is an instance of EndpointAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EndpointAuthorization;
    /**
     * The target AWS account ID to grant or revoke access for.
     */
    readonly account: pulumi.Output<string>;
    /**
     * Indicates whether all VPCs in the grantee account are allowed access to the cluster.
     */
    readonly allowedAllVPCs: pulumi.Output<boolean>;
    /**
     * The VPCs allowed access to the cluster.
     */
    readonly allowedVPCs: pulumi.Output<string[]>;
    /**
     * The time (UTC) when the authorization was created.
     */
    readonly authorizeTime: pulumi.Output<string>;
    /**
     * The cluster identifier.
     */
    readonly clusterIdentifier: pulumi.Output<string>;
    /**
     * The status of the cluster.
     */
    readonly clusterStatus: pulumi.Output<string>;
    /**
     * The number of Redshift-managed VPC endpoints created for the authorization.
     */
    readonly endpointCount: pulumi.Output<number>;
    /**
     *  Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.
     */
    readonly force: pulumi.Output<boolean | undefined>;
    /**
     * The AWS account ID of the grantee of the cluster.
     */
    readonly grantee: pulumi.Output<string>;
    /**
     * The AWS account ID of the cluster owner.
     */
    readonly grantor: pulumi.Output<string>;
    /**
     * The status of the authorization action.
     */
    readonly status: pulumi.Output<string>;
    /**
     * The virtual private cloud (VPC) identifiers to grant or revoke access to.
     */
    readonly vpcIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a EndpointAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointAuthorizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EndpointAuthorization resource.
 */
export interface EndpointAuthorizationArgs {
    /**
     * The target AWS account ID to grant or revoke access for.
     */
    account: pulumi.Input<string>;
    /**
     * The cluster identifier.
     */
    clusterIdentifier: pulumi.Input<string>;
    /**
     *  Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.
     */
    force?: pulumi.Input<boolean>;
    /**
     * The virtual private cloud (VPC) identifiers to grant or revoke access to.
     */
    vpcIds?: pulumi.Input<pulumi.Input<string>[]>;
}
