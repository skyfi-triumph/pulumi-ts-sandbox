import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * The `AWS::Redshift::ScheduledAction` resource creates an Amazon Redshift Scheduled Action.
 */
export declare class ScheduledAction extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledAction;
    /**
     * Returns true if the given object is an instance of ScheduledAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScheduledAction;
    /**
     * If true, the schedule is enabled. If false, the scheduled action does not trigger.
     */
    readonly enable: pulumi.Output<boolean | undefined>;
    /**
     * The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger.
     */
    readonly endTime: pulumi.Output<string | undefined>;
    /**
     * The IAM role to assume to run the target action.
     */
    readonly iamRole: pulumi.Output<string | undefined>;
    /**
     * List of times when the scheduled action will run.
     */
    readonly nextInvocations: pulumi.Output<string[]>;
    /**
     * The schedule in `at( )` or `cron( )` format.
     */
    readonly schedule: pulumi.Output<string | undefined>;
    /**
     * The description of the scheduled action.
     */
    readonly scheduledActionDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the scheduled action. The name must be unique within an account.
     */
    readonly scheduledActionName: pulumi.Output<string>;
    /**
     * The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger.
     */
    readonly startTime: pulumi.Output<string | undefined>;
    /**
     * The state of the scheduled action.
     */
    readonly state: pulumi.Output<enums.redshift.ScheduledActionState>;
    /**
     * A JSON format string of the Amazon Redshift API operation with input parameters.
     */
    readonly targetAction: pulumi.Output<outputs.redshift.ScheduledActionType | undefined>;
    /**
     * Create a ScheduledAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ScheduledActionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScheduledAction resource.
 */
export interface ScheduledActionArgs {
    /**
     * If true, the schedule is enabled. If false, the scheduled action does not trigger.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The IAM role to assume to run the target action.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * The schedule in `at( )` or `cron( )` format.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The description of the scheduled action.
     */
    scheduledActionDescription?: pulumi.Input<string>;
    /**
     * The name of the scheduled action. The name must be unique within an account.
     */
    scheduledActionName?: pulumi.Input<string>;
    /**
     * The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger.
     */
    startTime?: pulumi.Input<string>;
    /**
     * A JSON format string of the Amazon Redshift API operation with input parameters.
     */
    targetAction?: pulumi.Input<inputs.redshift.ScheduledActionTypeArgs>;
}
