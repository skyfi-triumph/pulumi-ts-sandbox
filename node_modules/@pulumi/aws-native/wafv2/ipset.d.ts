import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
 */
export declare class IPSet extends pulumi.CustomResource {
    /**
     * Get an existing IPSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IPSet;
    /**
     * Returns true if the given object is an instance of IPSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IPSet;
    /**
     * List of IPAddresses.
     */
    readonly addresses: pulumi.Output<string[]>;
    readonly arn: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly iPAddressVersion: pulumi.Output<enums.wafv2.IPSetIPAddressVersion>;
    readonly name: pulumi.Output<string | undefined>;
    readonly scope: pulumi.Output<enums.wafv2.IPSetScope>;
    readonly tags: pulumi.Output<outputs.wafv2.IPSetTag[] | undefined>;
    /**
     * Create a IPSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IPSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IPSet resource.
 */
export interface IPSetArgs {
    /**
     * List of IPAddresses.
     */
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    iPAddressVersion: pulumi.Input<enums.wafv2.IPSetIPAddressVersion>;
    name?: pulumi.Input<string>;
    scope: pulumi.Input<enums.wafv2.IPSetScope>;
    tags?: pulumi.Input<pulumi.Input<inputs.wafv2.IPSetTagArgs>[]>;
}
