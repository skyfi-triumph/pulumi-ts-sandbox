import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
 *
 * @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class AnomalySubscription extends pulumi.CustomResource {
    /**
     * Get an existing AnomalySubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnomalySubscription;
    /**
     * Returns true if the given object is an instance of AnomalySubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AnomalySubscription;
    /**
     * The accountId
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The frequency at which anomaly reports are sent over email.
     */
    readonly frequency: pulumi.Output<enums.ce.AnomalySubscriptionFrequency>;
    /**
     * A list of cost anomaly monitors.
     */
    readonly monitorArnList: pulumi.Output<string[]>;
    /**
     * A list of subscriber
     */
    readonly subscribers: pulumi.Output<outputs.ce.AnomalySubscriptionSubscriber[]>;
    readonly subscriptionArn: pulumi.Output<string>;
    /**
     * The name of the subscription.
     */
    readonly subscriptionName: pulumi.Output<string>;
    /**
     * The dollar value that triggers a notification if the threshold is exceeded.
     */
    readonly threshold: pulumi.Output<number>;
    /**
     * Create a AnomalySubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: AnomalySubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AnomalySubscription resource.
 */
export interface AnomalySubscriptionArgs {
    /**
     * The frequency at which anomaly reports are sent over email.
     */
    frequency: pulumi.Input<enums.ce.AnomalySubscriptionFrequency>;
    /**
     * A list of cost anomaly monitors.
     */
    monitorArnList: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of subscriber
     */
    subscribers: pulumi.Input<pulumi.Input<inputs.ce.AnomalySubscriptionSubscriberArgs>[]>;
    /**
     * The name of the subscription.
     */
    subscriptionName: pulumi.Input<string>;
    /**
     * The dollar value that triggers a notification if the threshold is exceeded.
     */
    threshold: pulumi.Input<number>;
}
