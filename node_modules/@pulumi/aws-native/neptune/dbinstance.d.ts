import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Neptune::DBInstance
 *
 * @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class DBInstance extends pulumi.CustomResource {
    /**
     * Get an existing DBInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DBInstance;
    /**
     * Returns true if the given object is an instance of DBInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DBInstance;
    readonly allowMajorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly dBClusterIdentifier: pulumi.Output<string | undefined>;
    readonly dBInstanceClass: pulumi.Output<string>;
    readonly dBInstanceIdentifier: pulumi.Output<string | undefined>;
    readonly dBParameterGroupName: pulumi.Output<string | undefined>;
    readonly dBSnapshotIdentifier: pulumi.Output<string | undefined>;
    readonly dBSubnetGroupName: pulumi.Output<string | undefined>;
    readonly endpoint: pulumi.Output<string>;
    readonly port: pulumi.Output<string>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.neptune.DBInstanceTag[] | undefined>;
    /**
     * Create a DBInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DBInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DBInstance resource.
 */
export interface DBInstanceArgs {
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    dBClusterIdentifier?: pulumi.Input<string>;
    dBInstanceClass: pulumi.Input<string>;
    dBInstanceIdentifier?: pulumi.Input<string>;
    dBParameterGroupName?: pulumi.Input<string>;
    dBSnapshotIdentifier?: pulumi.Input<string>;
    dBSubnetGroupName?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.neptune.DBInstanceTagArgs>[]>;
}
