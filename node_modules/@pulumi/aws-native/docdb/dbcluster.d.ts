import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::DocDB::DBCluster
 *
 * @deprecated DBCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class DBCluster extends pulumi.CustomResource {
    /**
     * Get an existing DBCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DBCluster;
    /**
     * Returns true if the given object is an instance of DBCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DBCluster;
    readonly availabilityZones: pulumi.Output<string[] | undefined>;
    readonly backupRetentionPeriod: pulumi.Output<number | undefined>;
    readonly clusterResourceId: pulumi.Output<string>;
    readonly dBClusterIdentifier: pulumi.Output<string | undefined>;
    readonly dBClusterParameterGroupName: pulumi.Output<string | undefined>;
    readonly dBSubnetGroupName: pulumi.Output<string | undefined>;
    readonly deletionProtection: pulumi.Output<boolean | undefined>;
    readonly enableCloudwatchLogsExports: pulumi.Output<string[] | undefined>;
    readonly endpoint: pulumi.Output<string>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly masterUserPassword: pulumi.Output<string>;
    readonly masterUsername: pulumi.Output<string>;
    readonly port: pulumi.Output<number | undefined>;
    readonly preferredBackupWindow: pulumi.Output<string | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly readEndpoint: pulumi.Output<string>;
    readonly snapshotIdentifier: pulumi.Output<string | undefined>;
    readonly storageEncrypted: pulumi.Output<boolean | undefined>;
    readonly tags: pulumi.Output<outputs.docdb.DBClusterTag[] | undefined>;
    readonly vpcSecurityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a DBCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DBCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DBClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DBCluster resource.
 */
export interface DBClusterArgs {
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    backupRetentionPeriod?: pulumi.Input<number>;
    dBClusterIdentifier?: pulumi.Input<string>;
    dBClusterParameterGroupName?: pulumi.Input<string>;
    dBSubnetGroupName?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    engineVersion?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    masterUserPassword: pulumi.Input<string>;
    masterUsername: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    snapshotIdentifier?: pulumi.Input<string>;
    storageEncrypted?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.docdb.DBClusterTagArgs>[]>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
