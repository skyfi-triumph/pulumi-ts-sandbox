import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Definition of AWS::Wisdom::KnowledgeBase Resource Type
 */
export declare class KnowledgeBase extends pulumi.CustomResource {
    /**
     * Get an existing KnowledgeBase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KnowledgeBase;
    /**
     * Returns true if the given object is an instance of KnowledgeBase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KnowledgeBase;
    readonly description: pulumi.Output<string | undefined>;
    readonly knowledgeBaseArn: pulumi.Output<string>;
    readonly knowledgeBaseId: pulumi.Output<string>;
    readonly knowledgeBaseType: pulumi.Output<enums.wisdom.KnowledgeBaseType>;
    readonly name: pulumi.Output<string>;
    readonly renderingConfiguration: pulumi.Output<outputs.wisdom.KnowledgeBaseRenderingConfiguration | undefined>;
    readonly serverSideEncryptionConfiguration: pulumi.Output<outputs.wisdom.KnowledgeBaseServerSideEncryptionConfiguration | undefined>;
    readonly sourceConfiguration: pulumi.Output<outputs.wisdom.KnowledgeBaseSourceConfiguration | undefined>;
    readonly tags: pulumi.Output<outputs.wisdom.KnowledgeBaseTag[] | undefined>;
    /**
     * Create a KnowledgeBase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KnowledgeBaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KnowledgeBase resource.
 */
export interface KnowledgeBaseArgs {
    description?: pulumi.Input<string>;
    knowledgeBaseType: pulumi.Input<enums.wisdom.KnowledgeBaseType>;
    name?: pulumi.Input<string>;
    renderingConfiguration?: pulumi.Input<inputs.wisdom.KnowledgeBaseRenderingConfigurationArgs>;
    serverSideEncryptionConfiguration?: pulumi.Input<inputs.wisdom.KnowledgeBaseServerSideEncryptionConfigurationArgs>;
    sourceConfiguration?: pulumi.Input<inputs.wisdom.KnowledgeBaseSourceConfigurationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.wisdom.KnowledgeBaseTagArgs>[]>;
}
