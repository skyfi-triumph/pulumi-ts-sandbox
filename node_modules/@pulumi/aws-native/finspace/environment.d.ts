import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    /**
     * AWS account ID associated with the Environment
     */
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * ARNs of FinSpace Data Bundles to install
     */
    readonly dataBundles: pulumi.Output<string[] | undefined>;
    /**
     * ID for FinSpace created account used to store Environment artifacts
     */
    readonly dedicatedServiceAccountId: pulumi.Output<string>;
    /**
     * Description of the Environment
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * ARN of the Environment
     */
    readonly environmentArn: pulumi.Output<string>;
    /**
     * Unique identifier for representing FinSpace Environment
     */
    readonly environmentId: pulumi.Output<string>;
    /**
     * URL used to login to the Environment
     */
    readonly environmentUrl: pulumi.Output<string>;
    /**
     * Federation mode used with the Environment
     */
    readonly federationMode: pulumi.Output<enums.finspace.EnvironmentFederationMode | undefined>;
    readonly federationParameters: pulumi.Output<outputs.finspace.EnvironmentFederationParameters | undefined>;
    /**
     * KMS key used to encrypt customer data within FinSpace Environment infrastructure
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * Name of the Environment
     */
    readonly name: pulumi.Output<string>;
    /**
     * SageMaker Studio Domain URL associated with the Environment
     */
    readonly sageMakerStudioDomainUrl: pulumi.Output<string>;
    /**
     * State of the Environment
     */
    readonly status: pulumi.Output<enums.finspace.EnvironmentStatus>;
    readonly superuserParameters: pulumi.Output<outputs.finspace.EnvironmentSuperuserParameters | undefined>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * ARNs of FinSpace Data Bundles to install
     */
    dataBundles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the Environment
     */
    description?: pulumi.Input<string>;
    /**
     * Federation mode used with the Environment
     */
    federationMode?: pulumi.Input<enums.finspace.EnvironmentFederationMode>;
    federationParameters?: pulumi.Input<inputs.finspace.EnvironmentFederationParametersArgs>;
    /**
     * KMS key used to encrypt customer data within FinSpace Environment infrastructure
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the Environment
     */
    name?: pulumi.Input<string>;
    superuserParameters?: pulumi.Input<inputs.finspace.EnvironmentSuperuserParametersArgs>;
}
