import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * Register as a publisher in the CloudFormation Registry.
 */
export declare class Publisher extends pulumi.CustomResource {
    /**
     * Get an existing Publisher resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Publisher;
    /**
     * Returns true if the given object is an instance of Publisher.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Publisher;
    /**
     * Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
     */
    readonly acceptTermsAndConditions: pulumi.Output<boolean>;
    /**
     * If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.
     */
    readonly connectionArn: pulumi.Output<string | undefined>;
    /**
     * The type of account used as the identity provider when registering this publisher with CloudFormation.
     */
    readonly identityProvider: pulumi.Output<enums.cloudformation.PublisherIdentityProvider>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    readonly publisherId: pulumi.Output<string>;
    /**
     * The URL to the publisher's profile with the identity provider.
     */
    readonly publisherProfile: pulumi.Output<string>;
    /**
     * Whether the publisher is verified.
     */
    readonly publisherStatus: pulumi.Output<enums.cloudformation.PublisherStatus>;
    /**
     * Create a Publisher resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublisherArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Publisher resource.
 */
export interface PublisherArgs {
    /**
     * Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
     */
    acceptTermsAndConditions: pulumi.Input<boolean>;
    /**
     * If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.
     */
    connectionArn?: pulumi.Input<string>;
}
