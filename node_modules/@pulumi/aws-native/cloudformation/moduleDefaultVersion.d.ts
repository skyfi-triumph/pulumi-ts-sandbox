import * as pulumi from "@pulumi/pulumi";
/**
 * A module that has been registered in the CloudFormation registry as the default version
 */
export declare class ModuleDefaultVersion extends pulumi.CustomResource {
    /**
     * Get an existing ModuleDefaultVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ModuleDefaultVersion;
    /**
     * Returns true if the given object is an instance of ModuleDefaultVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ModuleDefaultVersion;
    /**
     * The Amazon Resource Name (ARN) of the module version to set as the default version.
     */
    readonly arn: pulumi.Output<string | undefined>;
    /**
     * The name of a module existing in the registry.
     */
    readonly moduleName: pulumi.Output<string | undefined>;
    /**
     * The ID of an existing version of the named module to set as the default.
     */
    readonly versionId: pulumi.Output<string | undefined>;
    /**
     * Create a ModuleDefaultVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ModuleDefaultVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ModuleDefaultVersion resource.
 */
export interface ModuleDefaultVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the module version to set as the default version.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of a module existing in the registry.
     */
    moduleName?: pulumi.Input<string>;
    /**
     * The ID of an existing version of the named module to set as the default.
     */
    versionId?: pulumi.Input<string>;
}
