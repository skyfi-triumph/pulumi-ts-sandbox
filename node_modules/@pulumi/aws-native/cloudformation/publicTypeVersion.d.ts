import * as pulumi from "@pulumi/pulumi";
import { enums } from "../types";
/**
 * Test and Publish a resource that has been registered in the CloudFormation Registry.
 */
export declare class PublicTypeVersion extends pulumi.CustomResource {
    /**
     * Get an existing PublicTypeVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PublicTypeVersion;
    /**
     * Returns true if the given object is an instance of PublicTypeVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PublicTypeVersion;
    /**
     * The Amazon Resource Number (ARN) of the extension.
     */
    readonly arn: pulumi.Output<string | undefined>;
    /**
     * A url to the S3 bucket where logs for the testType run will be available
     */
    readonly logDeliveryBucket: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Number (ARN) assigned to the public extension upon publication
     */
    readonly publicTypeArn: pulumi.Output<string>;
    /**
     * The version number of a public third-party extension
     */
    readonly publicVersionNumber: pulumi.Output<string | undefined>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    readonly publisherId: pulumi.Output<string>;
    /**
     * The kind of extension
     */
    readonly type: pulumi.Output<enums.cloudformation.PublicTypeVersionType | undefined>;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Number (ARN) of the extension with the versionId.
     */
    readonly typeVersionArn: pulumi.Output<string>;
    /**
     * Create a PublicTypeVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PublicTypeVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PublicTypeVersion resource.
 */
export interface PublicTypeVersionArgs {
    /**
     * The Amazon Resource Number (ARN) of the extension.
     */
    arn?: pulumi.Input<string>;
    /**
     * A url to the S3 bucket where logs for the testType run will be available
     */
    logDeliveryBucket?: pulumi.Input<string>;
    /**
     * The version number of a public third-party extension
     */
    publicVersionNumber?: pulumi.Input<string>;
    /**
     * The kind of extension
     */
    type?: pulumi.Input<enums.cloudformation.PublicTypeVersionType>;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    typeName?: pulumi.Input<string>;
}
