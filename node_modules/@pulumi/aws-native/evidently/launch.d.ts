import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Evidently::Launch.
 */
export declare class Launch extends pulumi.CustomResource {
    /**
     * Get an existing Launch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Launch;
    /**
     * Returns true if the given object is an instance of Launch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Launch;
    readonly arn: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly groups: pulumi.Output<outputs.evidently.LaunchGroupObject[]>;
    readonly metricMonitors: pulumi.Output<outputs.evidently.LaunchMetricDefinitionObject[] | undefined>;
    readonly name: pulumi.Output<string>;
    readonly project: pulumi.Output<string>;
    readonly randomizationSalt: pulumi.Output<string | undefined>;
    readonly scheduledSplitsConfig: pulumi.Output<outputs.evidently.LaunchStepConfig[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.evidently.LaunchTag[] | undefined>;
    /**
     * Create a Launch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LaunchArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Launch resource.
 */
export interface LaunchArgs {
    description?: pulumi.Input<string>;
    groups: pulumi.Input<pulumi.Input<inputs.evidently.LaunchGroupObjectArgs>[]>;
    metricMonitors?: pulumi.Input<pulumi.Input<inputs.evidently.LaunchMetricDefinitionObjectArgs>[]>;
    name?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    randomizationSalt?: pulumi.Input<string>;
    scheduledSplitsConfig: pulumi.Input<pulumi.Input<inputs.evidently.LaunchStepConfigArgs>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.evidently.LaunchTagArgs>[]>;
}
