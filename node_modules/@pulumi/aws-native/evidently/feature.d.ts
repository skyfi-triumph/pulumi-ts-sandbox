import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::Evidently::Feature.
 */
export declare class Feature extends pulumi.CustomResource {
    /**
     * Get an existing Feature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Feature;
    /**
     * Returns true if the given object is an instance of Feature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Feature;
    readonly arn: pulumi.Output<string>;
    readonly defaultVariation: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly entityOverrides: pulumi.Output<outputs.evidently.FeatureEntityOverride[] | undefined>;
    readonly evaluationStrategy: pulumi.Output<enums.evidently.FeatureEvaluationStrategy | undefined>;
    readonly name: pulumi.Output<string>;
    readonly project: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.evidently.FeatureTag[] | undefined>;
    readonly variations: pulumi.Output<outputs.evidently.FeatureVariationObject[]>;
    /**
     * Create a Feature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Feature resource.
 */
export interface FeatureArgs {
    defaultVariation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    entityOverrides?: pulumi.Input<pulumi.Input<inputs.evidently.FeatureEntityOverrideArgs>[]>;
    evaluationStrategy?: pulumi.Input<enums.evidently.FeatureEvaluationStrategy>;
    name?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.evidently.FeatureTagArgs>[]>;
    variations: pulumi.Input<pulumi.Input<inputs.evidently.FeatureVariationObjectArgs>[]>;
}
