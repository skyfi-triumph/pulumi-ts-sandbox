import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A domain defined for 3rd party data source in Profile Service
 */
export declare class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Domain;
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Domain;
    /**
     * The time of this integration got created
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The URL of the SQS dead letter queue
     */
    readonly deadLetterQueueUrl: pulumi.Output<string | undefined>;
    /**
     * The default encryption key
     */
    readonly defaultEncryptionKey: pulumi.Output<string | undefined>;
    /**
     * The default number of days until the data within the domain expires.
     */
    readonly defaultExpirationDays: pulumi.Output<number | undefined>;
    /**
     * The unique name of the domain.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The time of this integration got last updated at
     */
    readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the domain
     */
    readonly tags: pulumi.Output<outputs.customerprofiles.DomainTag[] | undefined>;
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The URL of the SQS dead letter queue
     */
    deadLetterQueueUrl?: pulumi.Input<string>;
    /**
     * The default encryption key
     */
    defaultEncryptionKey?: pulumi.Input<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    defaultExpirationDays?: pulumi.Input<number>;
    /**
     * The unique name of the domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the domain
     */
    tags?: pulumi.Input<pulumi.Input<inputs.customerprofiles.DomainTagArgs>[]>;
}
