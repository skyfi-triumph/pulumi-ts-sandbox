import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * The resource schema for creating an Amazon Connect Customer Profiles Integration.
 */
export declare class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Integration;
    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Integration;
    /**
     * The time of this integration got created
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The unique name of the domain.
     */
    readonly domainName: pulumi.Output<string>;
    readonly flowDefinition: pulumi.Output<outputs.customerprofiles.IntegrationFlowDefinition | undefined>;
    /**
     * The time of this integration got last updated at
     */
    readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The name of the ObjectType defined for the 3rd party data in Profile Service
     */
    readonly objectTypeName: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the integration
     */
    readonly tags: pulumi.Output<outputs.customerprofiles.IntegrationTag[] | undefined>;
    /**
     * The URI of the S3 bucket or any other type of data source.
     */
    readonly uri: pulumi.Output<string | undefined>;
    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    flowDefinition?: pulumi.Input<inputs.customerprofiles.IntegrationFlowDefinitionArgs>;
    /**
     * The name of the ObjectType defined for the 3rd party data in Profile Service
     */
    objectTypeName: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the integration
     */
    tags?: pulumi.Input<pulumi.Input<inputs.customerprofiles.IntegrationTagArgs>[]>;
    /**
     * The URI of the S3 bucket or any other type of data source.
     */
    uri?: pulumi.Input<string>;
}
