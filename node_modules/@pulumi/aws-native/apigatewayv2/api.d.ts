import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ApiGatewayV2::Api
 *
 * @deprecated Api is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Api extends pulumi.CustomResource {
    /**
     * Get an existing Api resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Api;
    /**
     * Returns true if the given object is an instance of Api.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Api;
    readonly apiEndpoint: pulumi.Output<string>;
    readonly apiKeySelectionExpression: pulumi.Output<string | undefined>;
    readonly basePath: pulumi.Output<string | undefined>;
    readonly body: pulumi.Output<any | undefined>;
    readonly bodyS3Location: pulumi.Output<outputs.apigatewayv2.ApiBodyS3Location | undefined>;
    readonly corsConfiguration: pulumi.Output<outputs.apigatewayv2.ApiCors | undefined>;
    readonly credentialsArn: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly disableExecuteApiEndpoint: pulumi.Output<boolean | undefined>;
    readonly disableSchemaValidation: pulumi.Output<boolean | undefined>;
    readonly failOnWarnings: pulumi.Output<boolean | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    readonly protocolType: pulumi.Output<string | undefined>;
    readonly routeKey: pulumi.Output<string | undefined>;
    readonly routeSelectionExpression: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<any | undefined>;
    readonly target: pulumi.Output<string | undefined>;
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a Api resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Api is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: ApiArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Api resource.
 */
export interface ApiArgs {
    apiKeySelectionExpression?: pulumi.Input<string>;
    basePath?: pulumi.Input<string>;
    body?: any;
    bodyS3Location?: pulumi.Input<inputs.apigatewayv2.ApiBodyS3LocationArgs>;
    corsConfiguration?: pulumi.Input<inputs.apigatewayv2.ApiCorsArgs>;
    credentialsArn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disableExecuteApiEndpoint?: pulumi.Input<boolean>;
    disableSchemaValidation?: pulumi.Input<boolean>;
    failOnWarnings?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    protocolType?: pulumi.Input<string>;
    routeKey?: pulumi.Input<string>;
    routeSelectionExpression?: pulumi.Input<string>;
    tags?: any;
    target?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
