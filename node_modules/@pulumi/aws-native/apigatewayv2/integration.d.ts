import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ApiGatewayV2::Integration
 *
 * @deprecated Integration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Integration;
    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Integration;
    readonly apiId: pulumi.Output<string>;
    readonly connectionId: pulumi.Output<string | undefined>;
    readonly connectionType: pulumi.Output<string | undefined>;
    readonly contentHandlingStrategy: pulumi.Output<string | undefined>;
    readonly credentialsArn: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly integrationMethod: pulumi.Output<string | undefined>;
    readonly integrationSubtype: pulumi.Output<string | undefined>;
    readonly integrationType: pulumi.Output<string>;
    readonly integrationUri: pulumi.Output<string | undefined>;
    readonly passthroughBehavior: pulumi.Output<string | undefined>;
    readonly payloadFormatVersion: pulumi.Output<string | undefined>;
    readonly requestParameters: pulumi.Output<any | undefined>;
    readonly requestTemplates: pulumi.Output<any | undefined>;
    readonly responseParameters: pulumi.Output<any | undefined>;
    readonly templateSelectionExpression: pulumi.Output<string | undefined>;
    readonly timeoutInMillis: pulumi.Output<number | undefined>;
    readonly tlsConfig: pulumi.Output<outputs.apigatewayv2.IntegrationTlsConfig | undefined>;
    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Integration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    apiId: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    connectionType?: pulumi.Input<string>;
    contentHandlingStrategy?: pulumi.Input<string>;
    credentialsArn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    integrationMethod?: pulumi.Input<string>;
    integrationSubtype?: pulumi.Input<string>;
    integrationType: pulumi.Input<string>;
    integrationUri?: pulumi.Input<string>;
    passthroughBehavior?: pulumi.Input<string>;
    payloadFormatVersion?: pulumi.Input<string>;
    requestParameters?: any;
    requestTemplates?: any;
    responseParameters?: any;
    templateSelectionExpression?: pulumi.Input<string>;
    timeoutInMillis?: pulumi.Input<number>;
    tlsConfig?: pulumi.Input<inputs.apigatewayv2.IntegrationTlsConfigArgs>;
}
