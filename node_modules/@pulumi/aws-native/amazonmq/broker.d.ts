import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::AmazonMQ::Broker
 *
 * @deprecated Broker is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Broker extends pulumi.CustomResource {
    /**
     * Get an existing Broker resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Broker;
    /**
     * Returns true if the given object is an instance of Broker.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Broker;
    readonly amqpEndpoints: pulumi.Output<string[]>;
    readonly arn: pulumi.Output<string>;
    readonly authenticationStrategy: pulumi.Output<string | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean>;
    readonly brokerName: pulumi.Output<string>;
    readonly configuration: pulumi.Output<outputs.amazonmq.BrokerConfigurationId | undefined>;
    readonly configurationId: pulumi.Output<string>;
    readonly configurationRevision: pulumi.Output<number>;
    readonly deploymentMode: pulumi.Output<string>;
    readonly encryptionOptions: pulumi.Output<outputs.amazonmq.BrokerEncryptionOptions | undefined>;
    readonly engineType: pulumi.Output<string>;
    readonly engineVersion: pulumi.Output<string>;
    readonly hostInstanceType: pulumi.Output<string>;
    readonly ipAddresses: pulumi.Output<string[]>;
    readonly ldapServerMetadata: pulumi.Output<outputs.amazonmq.BrokerLdapServerMetadata | undefined>;
    readonly logs: pulumi.Output<outputs.amazonmq.BrokerLogList | undefined>;
    readonly maintenanceWindowStartTime: pulumi.Output<outputs.amazonmq.BrokerMaintenanceWindow | undefined>;
    readonly mqttEndpoints: pulumi.Output<string[]>;
    readonly openWireEndpoints: pulumi.Output<string[]>;
    readonly publiclyAccessible: pulumi.Output<boolean>;
    readonly securityGroups: pulumi.Output<string[] | undefined>;
    readonly stompEndpoints: pulumi.Output<string[]>;
    readonly storageType: pulumi.Output<string | undefined>;
    readonly subnetIds: pulumi.Output<string[] | undefined>;
    readonly tags: pulumi.Output<outputs.amazonmq.BrokerTagsEntry[] | undefined>;
    readonly users: pulumi.Output<outputs.amazonmq.BrokerUser[]>;
    readonly wssEndpoints: pulumi.Output<string[]>;
    /**
     * Create a Broker resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Broker is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: BrokerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Broker resource.
 */
export interface BrokerArgs {
    authenticationStrategy?: pulumi.Input<string>;
    autoMinorVersionUpgrade: pulumi.Input<boolean>;
    brokerName?: pulumi.Input<string>;
    configuration?: pulumi.Input<inputs.amazonmq.BrokerConfigurationIdArgs>;
    deploymentMode: pulumi.Input<string>;
    encryptionOptions?: pulumi.Input<inputs.amazonmq.BrokerEncryptionOptionsArgs>;
    engineType: pulumi.Input<string>;
    engineVersion: pulumi.Input<string>;
    hostInstanceType: pulumi.Input<string>;
    ldapServerMetadata?: pulumi.Input<inputs.amazonmq.BrokerLdapServerMetadataArgs>;
    logs?: pulumi.Input<inputs.amazonmq.BrokerLogListArgs>;
    maintenanceWindowStartTime?: pulumi.Input<inputs.amazonmq.BrokerMaintenanceWindowArgs>;
    publiclyAccessible: pulumi.Input<boolean>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    storageType?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.amazonmq.BrokerTagsEntryArgs>[]>;
    users: pulumi.Input<pulumi.Input<inputs.amazonmq.BrokerUserArgs>[]>;
}
