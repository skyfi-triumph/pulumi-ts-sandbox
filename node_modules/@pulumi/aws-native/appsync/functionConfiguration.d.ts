import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::AppSync::FunctionConfiguration
 *
 * @deprecated FunctionConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class FunctionConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FunctionConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FunctionConfiguration;
    /**
     * Returns true if the given object is an instance of FunctionConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FunctionConfiguration;
    readonly apiId: pulumi.Output<string>;
    readonly dataSourceName: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly functionArn: pulumi.Output<string>;
    readonly functionId: pulumi.Output<string>;
    readonly functionVersion: pulumi.Output<string>;
    readonly name: pulumi.Output<string>;
    readonly requestMappingTemplate: pulumi.Output<string | undefined>;
    readonly requestMappingTemplateS3Location: pulumi.Output<string | undefined>;
    readonly responseMappingTemplate: pulumi.Output<string | undefined>;
    readonly responseMappingTemplateS3Location: pulumi.Output<string | undefined>;
    readonly syncConfig: pulumi.Output<outputs.appsync.FunctionConfigurationSyncConfig | undefined>;
    /**
     * Create a FunctionConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated FunctionConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: FunctionConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FunctionConfiguration resource.
 */
export interface FunctionConfigurationArgs {
    apiId: pulumi.Input<string>;
    dataSourceName: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    functionVersion: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    requestMappingTemplate?: pulumi.Input<string>;
    requestMappingTemplateS3Location?: pulumi.Input<string>;
    responseMappingTemplate?: pulumi.Input<string>;
    responseMappingTemplateS3Location?: pulumi.Input<string>;
    syncConfig?: pulumi.Input<inputs.appsync.FunctionConfigurationSyncConfigArgs>;
}
