import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::IoTSiteWise::Project
 */
export declare class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Project;
    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Project;
    /**
     * The IDs of the assets to be associated to the project.
     */
    readonly assetIds: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the portal in which to create the project.
     */
    readonly portalId: pulumi.Output<string>;
    /**
     * The ARN of the project.
     */
    readonly projectArn: pulumi.Output<string>;
    /**
     * A description for the project.
     */
    readonly projectDescription: pulumi.Output<string | undefined>;
    /**
     * The ID of the project.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * A friendly name for the project.
     */
    readonly projectName: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the project.
     */
    readonly tags: pulumi.Output<outputs.iotsitewise.ProjectTag[] | undefined>;
    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * The IDs of the assets to be associated to the project.
     */
    assetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the portal in which to create the project.
     */
    portalId: pulumi.Input<string>;
    /**
     * A description for the project.
     */
    projectDescription?: pulumi.Input<string>;
    /**
     * A friendly name for the project.
     */
    projectName?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the project.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iotsitewise.ProjectTagArgs>[]>;
}
