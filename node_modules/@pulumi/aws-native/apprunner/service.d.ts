import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * The AWS::AppRunner::Service resource specifies an AppRunner Service.
 */
export declare class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Service;
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Service;
    /**
     * Autoscaling configuration ARN
     */
    readonly autoScalingConfigurationArn: pulumi.Output<string | undefined>;
    readonly encryptionConfiguration: pulumi.Output<outputs.apprunner.ServiceEncryptionConfiguration | undefined>;
    readonly healthCheckConfiguration: pulumi.Output<outputs.apprunner.ServiceHealthCheckConfiguration | undefined>;
    readonly instanceConfiguration: pulumi.Output<outputs.apprunner.ServiceInstanceConfiguration | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the AppRunner Service.
     */
    readonly serviceArn: pulumi.Output<string>;
    /**
     * The AppRunner Service Id
     */
    readonly serviceId: pulumi.Output<string>;
    /**
     * The AppRunner Service Name.
     */
    readonly serviceName: pulumi.Output<string | undefined>;
    /**
     * The Service Url of the AppRunner Service.
     */
    readonly serviceUrl: pulumi.Output<string>;
    readonly sourceConfiguration: pulumi.Output<outputs.apprunner.ServiceSourceConfiguration>;
    /**
     * AppRunner Service status.
     */
    readonly status: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.apprunner.ServiceTag[] | undefined>;
    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * Autoscaling configuration ARN
     */
    autoScalingConfigurationArn?: pulumi.Input<string>;
    encryptionConfiguration?: pulumi.Input<inputs.apprunner.ServiceEncryptionConfigurationArgs>;
    healthCheckConfiguration?: pulumi.Input<inputs.apprunner.ServiceHealthCheckConfigurationArgs>;
    instanceConfiguration?: pulumi.Input<inputs.apprunner.ServiceInstanceConfigurationArgs>;
    /**
     * The AppRunner Service Name.
     */
    serviceName?: pulumi.Input<string>;
    sourceConfiguration: pulumi.Input<inputs.apprunner.ServiceSourceConfigurationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.apprunner.ServiceTagArgs>[]>;
}
