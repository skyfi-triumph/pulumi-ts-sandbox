import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::DMS::Endpoint
 *
 * @deprecated Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Endpoint;
    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Endpoint;
    readonly certificateArn: pulumi.Output<string | undefined>;
    readonly databaseName: pulumi.Output<string | undefined>;
    readonly docDbSettings: pulumi.Output<outputs.dms.EndpointDocDbSettings | undefined>;
    readonly dynamoDbSettings: pulumi.Output<outputs.dms.EndpointDynamoDbSettings | undefined>;
    readonly elasticsearchSettings: pulumi.Output<outputs.dms.EndpointElasticsearchSettings | undefined>;
    readonly endpointIdentifier: pulumi.Output<string | undefined>;
    readonly endpointType: pulumi.Output<string>;
    readonly engineName: pulumi.Output<string>;
    readonly externalId: pulumi.Output<string>;
    readonly extraConnectionAttributes: pulumi.Output<string | undefined>;
    readonly ibmDb2Settings: pulumi.Output<outputs.dms.EndpointIbmDb2Settings | undefined>;
    readonly kafkaSettings: pulumi.Output<outputs.dms.EndpointKafkaSettings | undefined>;
    readonly kinesisSettings: pulumi.Output<outputs.dms.EndpointKinesisSettings | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly microsoftSqlServerSettings: pulumi.Output<outputs.dms.EndpointMicrosoftSqlServerSettings | undefined>;
    readonly mongoDbSettings: pulumi.Output<outputs.dms.EndpointMongoDbSettings | undefined>;
    readonly mySqlSettings: pulumi.Output<outputs.dms.EndpointMySqlSettings | undefined>;
    readonly neptuneSettings: pulumi.Output<outputs.dms.EndpointNeptuneSettings | undefined>;
    readonly oracleSettings: pulumi.Output<outputs.dms.EndpointOracleSettings | undefined>;
    readonly password: pulumi.Output<string | undefined>;
    readonly port: pulumi.Output<number | undefined>;
    readonly postgreSqlSettings: pulumi.Output<outputs.dms.EndpointPostgreSqlSettings | undefined>;
    readonly redisSettings: pulumi.Output<outputs.dms.EndpointRedisSettings | undefined>;
    readonly redshiftSettings: pulumi.Output<outputs.dms.EndpointRedshiftSettings | undefined>;
    readonly resourceIdentifier: pulumi.Output<string | undefined>;
    readonly s3Settings: pulumi.Output<outputs.dms.EndpointS3Settings | undefined>;
    readonly serverName: pulumi.Output<string | undefined>;
    readonly sslMode: pulumi.Output<string | undefined>;
    readonly sybaseSettings: pulumi.Output<outputs.dms.EndpointSybaseSettings | undefined>;
    readonly tags: pulumi.Output<outputs.dms.EndpointTag[] | undefined>;
    readonly username: pulumi.Output<string | undefined>;
    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    certificateArn?: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
    docDbSettings?: pulumi.Input<inputs.dms.EndpointDocDbSettingsArgs>;
    dynamoDbSettings?: pulumi.Input<inputs.dms.EndpointDynamoDbSettingsArgs>;
    elasticsearchSettings?: pulumi.Input<inputs.dms.EndpointElasticsearchSettingsArgs>;
    endpointIdentifier?: pulumi.Input<string>;
    endpointType: pulumi.Input<string>;
    engineName: pulumi.Input<string>;
    extraConnectionAttributes?: pulumi.Input<string>;
    ibmDb2Settings?: pulumi.Input<inputs.dms.EndpointIbmDb2SettingsArgs>;
    kafkaSettings?: pulumi.Input<inputs.dms.EndpointKafkaSettingsArgs>;
    kinesisSettings?: pulumi.Input<inputs.dms.EndpointKinesisSettingsArgs>;
    kmsKeyId?: pulumi.Input<string>;
    microsoftSqlServerSettings?: pulumi.Input<inputs.dms.EndpointMicrosoftSqlServerSettingsArgs>;
    mongoDbSettings?: pulumi.Input<inputs.dms.EndpointMongoDbSettingsArgs>;
    mySqlSettings?: pulumi.Input<inputs.dms.EndpointMySqlSettingsArgs>;
    neptuneSettings?: pulumi.Input<inputs.dms.EndpointNeptuneSettingsArgs>;
    oracleSettings?: pulumi.Input<inputs.dms.EndpointOracleSettingsArgs>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    postgreSqlSettings?: pulumi.Input<inputs.dms.EndpointPostgreSqlSettingsArgs>;
    redisSettings?: pulumi.Input<inputs.dms.EndpointRedisSettingsArgs>;
    redshiftSettings?: pulumi.Input<inputs.dms.EndpointRedshiftSettingsArgs>;
    resourceIdentifier?: pulumi.Input<string>;
    s3Settings?: pulumi.Input<inputs.dms.EndpointS3SettingsArgs>;
    serverName?: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    sybaseSettings?: pulumi.Input<inputs.dms.EndpointSybaseSettingsArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.dms.EndpointTagArgs>[]>;
    username?: pulumi.Input<string>;
}
