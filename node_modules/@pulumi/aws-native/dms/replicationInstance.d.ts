import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::DMS::ReplicationInstance
 *
 * @deprecated ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class ReplicationInstance extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationInstance;
    /**
     * Returns true if the given object is an instance of ReplicationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReplicationInstance;
    readonly allocatedStorage: pulumi.Output<number | undefined>;
    readonly allowMajorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly engineVersion: pulumi.Output<string | undefined>;
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    readonly multiAZ: pulumi.Output<boolean | undefined>;
    readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    readonly publiclyAccessible: pulumi.Output<boolean | undefined>;
    readonly replicationInstanceClass: pulumi.Output<string>;
    readonly replicationInstanceIdentifier: pulumi.Output<string | undefined>;
    readonly replicationInstancePrivateIpAddresses: pulumi.Output<string[]>;
    readonly replicationInstancePublicIpAddresses: pulumi.Output<string[]>;
    readonly replicationSubnetGroupIdentifier: pulumi.Output<string | undefined>;
    readonly resourceIdentifier: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.dms.ReplicationInstanceTag[] | undefined>;
    readonly vpcSecurityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Create a ReplicationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ReplicationInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ReplicationInstance resource.
 */
export interface ReplicationInstanceArgs {
    allocatedStorage?: pulumi.Input<number>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    multiAZ?: pulumi.Input<boolean>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    publiclyAccessible?: pulumi.Input<boolean>;
    replicationInstanceClass: pulumi.Input<string>;
    replicationInstanceIdentifier?: pulumi.Input<string>;
    replicationSubnetGroupIdentifier?: pulumi.Input<string>;
    resourceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.dms.ReplicationInstanceTagArgs>[]>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
