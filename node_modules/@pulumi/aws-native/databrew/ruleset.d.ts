import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::DataBrew::Ruleset.
 */
export declare class Ruleset extends pulumi.CustomResource {
    /**
     * Get an existing Ruleset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Ruleset;
    /**
     * Returns true if the given object is an instance of Ruleset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Ruleset;
    /**
     * Description of the Ruleset
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the Ruleset
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of the data quality rules in the ruleset
     */
    readonly rules: pulumi.Output<outputs.databrew.RulesetRule[]>;
    readonly tags: pulumi.Output<outputs.databrew.RulesetTag[] | undefined>;
    /**
     * Arn of the target resource (dataset) to apply the ruleset to
     */
    readonly targetArn: pulumi.Output<string>;
    /**
     * Create a Ruleset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RulesetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Ruleset resource.
 */
export interface RulesetArgs {
    /**
     * Description of the Ruleset
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Ruleset
     */
    name?: pulumi.Input<string>;
    /**
     * List of the data quality rules in the ruleset
     */
    rules: pulumi.Input<pulumi.Input<inputs.databrew.RulesetRuleArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.databrew.RulesetTagArgs>[]>;
    /**
     * Arn of the target resource (dataset) to apply the ruleset to
     */
    targetArn: pulumi.Input<string>;
}
