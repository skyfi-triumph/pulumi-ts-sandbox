import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Cognito::UserPoolClient
 *
 * @deprecated UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class UserPoolClient extends pulumi.CustomResource {
    /**
     * Get an existing UserPoolClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserPoolClient;
    /**
     * Returns true if the given object is an instance of UserPoolClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserPoolClient;
    readonly accessTokenValidity: pulumi.Output<number | undefined>;
    readonly allowedOAuthFlows: pulumi.Output<string[] | undefined>;
    readonly allowedOAuthFlowsUserPoolClient: pulumi.Output<boolean | undefined>;
    readonly allowedOAuthScopes: pulumi.Output<string[] | undefined>;
    readonly analyticsConfiguration: pulumi.Output<outputs.cognito.UserPoolClientAnalyticsConfiguration | undefined>;
    readonly callbackURLs: pulumi.Output<string[] | undefined>;
    readonly clientName: pulumi.Output<string | undefined>;
    readonly clientSecret: pulumi.Output<string>;
    readonly defaultRedirectURI: pulumi.Output<string | undefined>;
    readonly enableTokenRevocation: pulumi.Output<boolean | undefined>;
    readonly explicitAuthFlows: pulumi.Output<string[] | undefined>;
    readonly generateSecret: pulumi.Output<boolean | undefined>;
    readonly idTokenValidity: pulumi.Output<number | undefined>;
    readonly logoutURLs: pulumi.Output<string[] | undefined>;
    readonly name: pulumi.Output<string>;
    readonly preventUserExistenceErrors: pulumi.Output<string | undefined>;
    readonly readAttributes: pulumi.Output<string[] | undefined>;
    readonly refreshTokenValidity: pulumi.Output<number | undefined>;
    readonly supportedIdentityProviders: pulumi.Output<string[] | undefined>;
    readonly tokenValidityUnits: pulumi.Output<outputs.cognito.UserPoolClientTokenValidityUnits | undefined>;
    readonly userPoolId: pulumi.Output<string>;
    readonly writeAttributes: pulumi.Output<string[] | undefined>;
    /**
     * Create a UserPoolClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: UserPoolClientArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a UserPoolClient resource.
 */
export interface UserPoolClientArgs {
    accessTokenValidity?: pulumi.Input<number>;
    allowedOAuthFlows?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOAuthFlowsUserPoolClient?: pulumi.Input<boolean>;
    allowedOAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    analyticsConfiguration?: pulumi.Input<inputs.cognito.UserPoolClientAnalyticsConfigurationArgs>;
    callbackURLs?: pulumi.Input<pulumi.Input<string>[]>;
    clientName?: pulumi.Input<string>;
    defaultRedirectURI?: pulumi.Input<string>;
    enableTokenRevocation?: pulumi.Input<boolean>;
    explicitAuthFlows?: pulumi.Input<pulumi.Input<string>[]>;
    generateSecret?: pulumi.Input<boolean>;
    idTokenValidity?: pulumi.Input<number>;
    logoutURLs?: pulumi.Input<pulumi.Input<string>[]>;
    preventUserExistenceErrors?: pulumi.Input<string>;
    readAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    refreshTokenValidity?: pulumi.Input<number>;
    supportedIdentityProviders?: pulumi.Input<pulumi.Input<string>[]>;
    tokenValidityUnits?: pulumi.Input<inputs.cognito.UserPoolClientTokenValidityUnitsArgs>;
    userPoolId: pulumi.Input<string>;
    writeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
}
