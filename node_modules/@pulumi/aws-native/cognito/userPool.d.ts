import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Cognito::UserPool
 *
 * @deprecated UserPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class UserPool extends pulumi.CustomResource {
    /**
     * Get an existing UserPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserPool;
    /**
     * Returns true if the given object is an instance of UserPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserPool;
    readonly accountRecoverySetting: pulumi.Output<outputs.cognito.UserPoolAccountRecoverySetting | undefined>;
    readonly adminCreateUserConfig: pulumi.Output<outputs.cognito.UserPoolAdminCreateUserConfig | undefined>;
    readonly aliasAttributes: pulumi.Output<string[] | undefined>;
    readonly arn: pulumi.Output<string>;
    readonly autoVerifiedAttributes: pulumi.Output<string[] | undefined>;
    readonly deviceConfiguration: pulumi.Output<outputs.cognito.UserPoolDeviceConfiguration | undefined>;
    readonly emailConfiguration: pulumi.Output<outputs.cognito.UserPoolEmailConfiguration | undefined>;
    readonly emailVerificationMessage: pulumi.Output<string | undefined>;
    readonly emailVerificationSubject: pulumi.Output<string | undefined>;
    readonly enabledMfas: pulumi.Output<string[] | undefined>;
    readonly lambdaConfig: pulumi.Output<outputs.cognito.UserPoolLambdaConfig | undefined>;
    readonly mfaConfiguration: pulumi.Output<string | undefined>;
    readonly policies: pulumi.Output<outputs.cognito.UserPoolPolicies | undefined>;
    readonly providerName: pulumi.Output<string>;
    readonly providerURL: pulumi.Output<string>;
    readonly schema: pulumi.Output<outputs.cognito.UserPoolSchemaAttribute[] | undefined>;
    readonly smsAuthenticationMessage: pulumi.Output<string | undefined>;
    readonly smsConfiguration: pulumi.Output<outputs.cognito.UserPoolSmsConfiguration | undefined>;
    readonly smsVerificationMessage: pulumi.Output<string | undefined>;
    readonly userPoolAddOns: pulumi.Output<outputs.cognito.UserPoolAddOns | undefined>;
    readonly userPoolName: pulumi.Output<string | undefined>;
    readonly userPoolTags: pulumi.Output<any | undefined>;
    readonly usernameAttributes: pulumi.Output<string[] | undefined>;
    readonly usernameConfiguration: pulumi.Output<outputs.cognito.UserPoolUsernameConfiguration | undefined>;
    readonly verificationMessageTemplate: pulumi.Output<outputs.cognito.UserPoolVerificationMessageTemplate | undefined>;
    /**
     * Create a UserPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated UserPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: UserPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a UserPool resource.
 */
export interface UserPoolArgs {
    accountRecoverySetting?: pulumi.Input<inputs.cognito.UserPoolAccountRecoverySettingArgs>;
    adminCreateUserConfig?: pulumi.Input<inputs.cognito.UserPoolAdminCreateUserConfigArgs>;
    aliasAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    autoVerifiedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    deviceConfiguration?: pulumi.Input<inputs.cognito.UserPoolDeviceConfigurationArgs>;
    emailConfiguration?: pulumi.Input<inputs.cognito.UserPoolEmailConfigurationArgs>;
    emailVerificationMessage?: pulumi.Input<string>;
    emailVerificationSubject?: pulumi.Input<string>;
    enabledMfas?: pulumi.Input<pulumi.Input<string>[]>;
    lambdaConfig?: pulumi.Input<inputs.cognito.UserPoolLambdaConfigArgs>;
    mfaConfiguration?: pulumi.Input<string>;
    policies?: pulumi.Input<inputs.cognito.UserPoolPoliciesArgs>;
    schema?: pulumi.Input<pulumi.Input<inputs.cognito.UserPoolSchemaAttributeArgs>[]>;
    smsAuthenticationMessage?: pulumi.Input<string>;
    smsConfiguration?: pulumi.Input<inputs.cognito.UserPoolSmsConfigurationArgs>;
    smsVerificationMessage?: pulumi.Input<string>;
    userPoolAddOns?: pulumi.Input<inputs.cognito.UserPoolAddOnsArgs>;
    userPoolName?: pulumi.Input<string>;
    userPoolTags?: any;
    usernameAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    usernameConfiguration?: pulumi.Input<inputs.cognito.UserPoolUsernameConfigurationArgs>;
    verificationMessageTemplate?: pulumi.Input<inputs.cognito.UserPoolVerificationMessageTemplateArgs>;
}
