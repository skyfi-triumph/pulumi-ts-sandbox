import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Cognito::IdentityPool
 *
 * @deprecated IdentityPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class IdentityPool extends pulumi.CustomResource {
    /**
     * Get an existing IdentityPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IdentityPool;
    /**
     * Returns true if the given object is an instance of IdentityPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IdentityPool;
    readonly allowClassicFlow: pulumi.Output<boolean | undefined>;
    readonly allowUnauthenticatedIdentities: pulumi.Output<boolean>;
    readonly cognitoEvents: pulumi.Output<any | undefined>;
    readonly cognitoIdentityProviders: pulumi.Output<outputs.cognito.IdentityPoolCognitoIdentityProvider[] | undefined>;
    readonly cognitoStreams: pulumi.Output<outputs.cognito.IdentityPoolCognitoStreams | undefined>;
    readonly developerProviderName: pulumi.Output<string | undefined>;
    readonly identityPoolName: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string>;
    readonly openIdConnectProviderARNs: pulumi.Output<string[] | undefined>;
    readonly pushSync: pulumi.Output<outputs.cognito.IdentityPoolPushSync | undefined>;
    readonly samlProviderARNs: pulumi.Output<string[] | undefined>;
    readonly supportedLoginProviders: pulumi.Output<any | undefined>;
    /**
     * Create a IdentityPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated IdentityPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: IdentityPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IdentityPool resource.
 */
export interface IdentityPoolArgs {
    allowClassicFlow?: pulumi.Input<boolean>;
    allowUnauthenticatedIdentities: pulumi.Input<boolean>;
    cognitoEvents?: any;
    cognitoIdentityProviders?: pulumi.Input<pulumi.Input<inputs.cognito.IdentityPoolCognitoIdentityProviderArgs>[]>;
    cognitoStreams?: pulumi.Input<inputs.cognito.IdentityPoolCognitoStreamsArgs>;
    developerProviderName?: pulumi.Input<string>;
    identityPoolName?: pulumi.Input<string>;
    openIdConnectProviderARNs?: pulumi.Input<pulumi.Input<string>[]>;
    pushSync?: pulumi.Input<inputs.cognito.IdentityPoolPushSyncArgs>;
    samlProviderARNs?: pulumi.Input<pulumi.Input<string>[]>;
    supportedLoginProviders?: any;
}
