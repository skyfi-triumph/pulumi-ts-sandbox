import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Resource Type definition for AWS::S3::Bucket
 */
export declare class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bucket;
    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Bucket;
    /**
     * Configuration for the transfer acceleration state.
     */
    readonly accelerateConfiguration: pulumi.Output<outputs.s3.BucketAccelerateConfiguration | undefined>;
    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     */
    readonly accessControl: pulumi.Output<enums.s3.BucketAccessControl | undefined>;
    /**
     * The configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     */
    readonly analyticsConfigurations: pulumi.Output<outputs.s3.BucketAnalyticsConfiguration[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    readonly arn: pulumi.Output<string>;
    readonly bucketEncryption: pulumi.Output<outputs.s3.BucketEncryption | undefined>;
    /**
     * A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    readonly bucketName: pulumi.Output<string | undefined>;
    /**
     * Rules that define cross-origin resource sharing of objects in this bucket.
     */
    readonly corsConfiguration: pulumi.Output<outputs.s3.BucketCorsConfiguration | undefined>;
    /**
     * The IPv4 DNS name of the specified bucket.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The IPv6 DNS name of the specified bucket. For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html).
     */
    readonly dualStackDomainName: pulumi.Output<string>;
    /**
     * Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
     */
    readonly intelligentTieringConfigurations: pulumi.Output<outputs.s3.BucketIntelligentTieringConfiguration[] | undefined>;
    /**
     * The inventory configuration for an Amazon S3 bucket.
     */
    readonly inventoryConfigurations: pulumi.Output<outputs.s3.BucketInventoryConfiguration[] | undefined>;
    /**
     * Rules that define how Amazon S3 manages objects during their lifetime.
     */
    readonly lifecycleConfiguration: pulumi.Output<outputs.s3.BucketLifecycleConfiguration | undefined>;
    /**
     * Settings that define where logs are stored.
     */
    readonly loggingConfiguration: pulumi.Output<outputs.s3.BucketLoggingConfiguration | undefined>;
    /**
     * Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.
     */
    readonly metricsConfigurations: pulumi.Output<outputs.s3.BucketMetricsConfiguration[] | undefined>;
    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     */
    readonly notificationConfiguration: pulumi.Output<outputs.s3.BucketNotificationConfiguration | undefined>;
    /**
     * Places an Object Lock configuration on the specified bucket.
     */
    readonly objectLockConfiguration: pulumi.Output<outputs.s3.BucketObjectLockConfiguration | undefined>;
    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     */
    readonly objectLockEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the container element for object ownership rules.
     */
    readonly ownershipControls: pulumi.Output<outputs.s3.BucketOwnershipControls | undefined>;
    readonly publicAccessBlockConfiguration: pulumi.Output<outputs.s3.BucketPublicAccessBlockConfiguration | undefined>;
    /**
     * Returns the regional domain name of the specified bucket.
     */
    readonly regionalDomainName: pulumi.Output<string>;
    /**
     * Configuration for replicating objects in an S3 bucket.
     */
    readonly replicationConfiguration: pulumi.Output<outputs.s3.BucketReplicationConfiguration | undefined>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     */
    readonly tags: pulumi.Output<outputs.s3.BucketTag[] | undefined>;
    readonly versioningConfiguration: pulumi.Output<outputs.s3.BucketVersioningConfiguration | undefined>;
    readonly websiteConfiguration: pulumi.Output<outputs.s3.BucketWebsiteConfiguration | undefined>;
    /**
     * The Amazon S3 website endpoint for the specified bucket.
     */
    readonly websiteURL: pulumi.Output<string>;
    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Configuration for the transfer acceleration state.
     */
    accelerateConfiguration?: pulumi.Input<inputs.s3.BucketAccelerateConfigurationArgs>;
    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     */
    accessControl?: pulumi.Input<enums.s3.BucketAccessControl>;
    /**
     * The configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     */
    analyticsConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketAnalyticsConfigurationArgs>[]>;
    bucketEncryption?: pulumi.Input<inputs.s3.BucketEncryptionArgs>;
    /**
     * A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Rules that define cross-origin resource sharing of objects in this bucket.
     */
    corsConfiguration?: pulumi.Input<inputs.s3.BucketCorsConfigurationArgs>;
    /**
     * Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
     */
    intelligentTieringConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketIntelligentTieringConfigurationArgs>[]>;
    /**
     * The inventory configuration for an Amazon S3 bucket.
     */
    inventoryConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketInventoryConfigurationArgs>[]>;
    /**
     * Rules that define how Amazon S3 manages objects during their lifetime.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.s3.BucketLifecycleConfigurationArgs>;
    /**
     * Settings that define where logs are stored.
     */
    loggingConfiguration?: pulumi.Input<inputs.s3.BucketLoggingConfigurationArgs>;
    /**
     * Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.
     */
    metricsConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketMetricsConfigurationArgs>[]>;
    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     */
    notificationConfiguration?: pulumi.Input<inputs.s3.BucketNotificationConfigurationArgs>;
    /**
     * Places an Object Lock configuration on the specified bucket.
     */
    objectLockConfiguration?: pulumi.Input<inputs.s3.BucketObjectLockConfigurationArgs>;
    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     */
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the container element for object ownership rules.
     */
    ownershipControls?: pulumi.Input<inputs.s3.BucketOwnershipControlsArgs>;
    publicAccessBlockConfiguration?: pulumi.Input<inputs.s3.BucketPublicAccessBlockConfigurationArgs>;
    /**
     * Configuration for replicating objects in an S3 bucket.
     */
    replicationConfiguration?: pulumi.Input<inputs.s3.BucketReplicationConfigurationArgs>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagArgs>[]>;
    versioningConfiguration?: pulumi.Input<inputs.s3.BucketVersioningConfigurationArgs>;
    websiteConfiguration?: pulumi.Input<inputs.s3.BucketWebsiteConfigurationArgs>;
}
