import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * AWS::DeviceFarm::DevicePool creates a new Device Pool for a given DF Project
 */
export declare class DevicePool extends pulumi.CustomResource {
    /**
     * Get an existing DevicePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DevicePool;
    /**
     * Returns true if the given object is an instance of DevicePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DevicePool;
    readonly arn: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly maxDevices: pulumi.Output<number | undefined>;
    readonly name: pulumi.Output<string>;
    readonly projectArn: pulumi.Output<string>;
    readonly rules: pulumi.Output<outputs.devicefarm.DevicePoolRule[]>;
    readonly tags: pulumi.Output<outputs.devicefarm.DevicePoolTag[] | undefined>;
    /**
     * Create a DevicePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevicePoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DevicePool resource.
 */
export interface DevicePoolArgs {
    description?: pulumi.Input<string>;
    maxDevices?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    projectArn: pulumi.Input<string>;
    rules: pulumi.Input<pulumi.Input<inputs.devicefarm.DevicePoolRuleArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.devicefarm.DevicePoolTagArgs>[]>;
}
