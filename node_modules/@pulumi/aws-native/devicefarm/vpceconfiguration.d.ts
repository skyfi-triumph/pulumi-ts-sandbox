import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * AWS::DeviceFarm::VPCEConfiguration creates a new Device Farm VPCE Configuration
 */
export declare class VPCEConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing VPCEConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VPCEConfiguration;
    /**
     * Returns true if the given object is an instance of VPCEConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VPCEConfiguration;
    readonly arn: pulumi.Output<string>;
    readonly serviceDnsName: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.devicefarm.VPCEConfigurationTag[] | undefined>;
    readonly vpceConfigurationDescription: pulumi.Output<string | undefined>;
    readonly vpceConfigurationName: pulumi.Output<string>;
    readonly vpceServiceName: pulumi.Output<string>;
    /**
     * Create a VPCEConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VPCEConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VPCEConfiguration resource.
 */
export interface VPCEConfigurationArgs {
    serviceDnsName: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.devicefarm.VPCEConfigurationTagArgs>[]>;
    vpceConfigurationDescription?: pulumi.Input<string>;
    vpceConfigurationName: pulumi.Input<string>;
    vpceServiceName: pulumi.Input<string>;
}
