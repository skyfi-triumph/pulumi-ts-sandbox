import * as pulumi from "@pulumi/pulumi";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare class Grant extends pulumi.CustomResource {
    /**
     * Get an existing Grant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Grant;
    /**
     * Returns true if the given object is an instance of Grant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Grant;
    readonly allowedOperations: pulumi.Output<string[] | undefined>;
    /**
     * Arn of the grant.
     */
    readonly grantArn: pulumi.Output<string>;
    /**
     * Name for the created Grant.
     */
    readonly grantName: pulumi.Output<string | undefined>;
    /**
     * Home region for the created grant.
     */
    readonly homeRegion: pulumi.Output<string | undefined>;
    /**
     * License Arn for the grant.
     */
    readonly licenseArn: pulumi.Output<string | undefined>;
    readonly principals: pulumi.Output<string[] | undefined>;
    readonly status: pulumi.Output<string | undefined>;
    /**
     * The version of the grant.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Grant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GrantArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Grant resource.
 */
export interface GrantArgs {
    allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name for the created Grant.
     */
    grantName?: pulumi.Input<string>;
    /**
     * Home region for the created grant.
     */
    homeRegion?: pulumi.Input<string>;
    /**
     * License Arn for the grant.
     */
    licenseArn?: pulumi.Input<string>;
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
}
