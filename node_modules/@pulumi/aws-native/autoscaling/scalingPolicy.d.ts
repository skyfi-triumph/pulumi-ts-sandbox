import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::AutoScaling::ScalingPolicy
 *
 * @deprecated ScalingPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class ScalingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalingPolicy;
    /**
     * Returns true if the given object is an instance of ScalingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScalingPolicy;
    readonly adjustmentType: pulumi.Output<string | undefined>;
    readonly autoScalingGroupName: pulumi.Output<string>;
    readonly cooldown: pulumi.Output<string | undefined>;
    readonly estimatedInstanceWarmup: pulumi.Output<number | undefined>;
    readonly metricAggregationType: pulumi.Output<string | undefined>;
    readonly minAdjustmentMagnitude: pulumi.Output<number | undefined>;
    readonly policyType: pulumi.Output<string | undefined>;
    readonly predictiveScalingConfiguration: pulumi.Output<outputs.autoscaling.ScalingPolicyPredictiveScalingConfiguration | undefined>;
    readonly scalingAdjustment: pulumi.Output<number | undefined>;
    readonly stepAdjustments: pulumi.Output<outputs.autoscaling.ScalingPolicyStepAdjustment[] | undefined>;
    readonly targetTrackingConfiguration: pulumi.Output<outputs.autoscaling.ScalingPolicyTargetTrackingConfiguration | undefined>;
    /**
     * Create a ScalingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ScalingPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ScalingPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScalingPolicy resource.
 */
export interface ScalingPolicyArgs {
    adjustmentType?: pulumi.Input<string>;
    autoScalingGroupName: pulumi.Input<string>;
    cooldown?: pulumi.Input<string>;
    estimatedInstanceWarmup?: pulumi.Input<number>;
    metricAggregationType?: pulumi.Input<string>;
    minAdjustmentMagnitude?: pulumi.Input<number>;
    policyType?: pulumi.Input<string>;
    predictiveScalingConfiguration?: pulumi.Input<inputs.autoscaling.ScalingPolicyPredictiveScalingConfigurationArgs>;
    scalingAdjustment?: pulumi.Input<number>;
    stepAdjustments?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingPolicyStepAdjustmentArgs>[]>;
    targetTrackingConfiguration?: pulumi.Input<inputs.autoscaling.ScalingPolicyTargetTrackingConfigurationArgs>;
}
