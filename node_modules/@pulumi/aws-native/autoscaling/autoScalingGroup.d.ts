import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::AutoScaling::AutoScalingGroup
 *
 * @deprecated AutoScalingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class AutoScalingGroup extends pulumi.CustomResource {
    /**
     * Get an existing AutoScalingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AutoScalingGroup;
    /**
     * Returns true if the given object is an instance of AutoScalingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AutoScalingGroup;
    readonly autoScalingGroupName: pulumi.Output<string | undefined>;
    readonly availabilityZones: pulumi.Output<string[] | undefined>;
    readonly capacityRebalance: pulumi.Output<boolean | undefined>;
    readonly context: pulumi.Output<string | undefined>;
    readonly cooldown: pulumi.Output<string | undefined>;
    readonly desiredCapacity: pulumi.Output<string | undefined>;
    readonly desiredCapacityType: pulumi.Output<string | undefined>;
    readonly healthCheckGracePeriod: pulumi.Output<number | undefined>;
    readonly healthCheckType: pulumi.Output<string | undefined>;
    readonly instanceId: pulumi.Output<string | undefined>;
    readonly launchConfigurationName: pulumi.Output<string | undefined>;
    readonly launchTemplate: pulumi.Output<outputs.autoscaling.AutoScalingGroupLaunchTemplateSpecification | undefined>;
    readonly launchTemplateSpecification: pulumi.Output<string>;
    readonly lifecycleHookSpecificationList: pulumi.Output<outputs.autoscaling.AutoScalingGroupLifecycleHookSpecification[] | undefined>;
    readonly loadBalancerNames: pulumi.Output<string[] | undefined>;
    readonly maxInstanceLifetime: pulumi.Output<number | undefined>;
    readonly maxSize: pulumi.Output<string>;
    readonly metricsCollection: pulumi.Output<outputs.autoscaling.AutoScalingGroupMetricsCollection[] | undefined>;
    readonly minSize: pulumi.Output<string>;
    readonly mixedInstancesPolicy: pulumi.Output<outputs.autoscaling.AutoScalingGroupMixedInstancesPolicy | undefined>;
    readonly newInstancesProtectedFromScaleIn: pulumi.Output<boolean | undefined>;
    readonly notificationConfigurations: pulumi.Output<outputs.autoscaling.AutoScalingGroupNotificationConfiguration[] | undefined>;
    readonly placementGroup: pulumi.Output<string | undefined>;
    readonly serviceLinkedRoleARN: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.autoscaling.AutoScalingGroupTagProperty[] | undefined>;
    readonly targetGroupARNs: pulumi.Output<string[] | undefined>;
    readonly terminationPolicies: pulumi.Output<string[] | undefined>;
    readonly vPCZoneIdentifier: pulumi.Output<string[] | undefined>;
    /**
     * Create a AutoScalingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated AutoScalingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: AutoScalingGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AutoScalingGroup resource.
 */
export interface AutoScalingGroupArgs {
    autoScalingGroupName?: pulumi.Input<string>;
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    capacityRebalance?: pulumi.Input<boolean>;
    context?: pulumi.Input<string>;
    cooldown?: pulumi.Input<string>;
    desiredCapacity?: pulumi.Input<string>;
    desiredCapacityType?: pulumi.Input<string>;
    healthCheckGracePeriod?: pulumi.Input<number>;
    healthCheckType?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    launchConfigurationName?: pulumi.Input<string>;
    launchTemplate?: pulumi.Input<inputs.autoscaling.AutoScalingGroupLaunchTemplateSpecificationArgs>;
    lifecycleHookSpecificationList?: pulumi.Input<pulumi.Input<inputs.autoscaling.AutoScalingGroupLifecycleHookSpecificationArgs>[]>;
    loadBalancerNames?: pulumi.Input<pulumi.Input<string>[]>;
    maxInstanceLifetime?: pulumi.Input<number>;
    maxSize: pulumi.Input<string>;
    metricsCollection?: pulumi.Input<pulumi.Input<inputs.autoscaling.AutoScalingGroupMetricsCollectionArgs>[]>;
    minSize: pulumi.Input<string>;
    mixedInstancesPolicy?: pulumi.Input<inputs.autoscaling.AutoScalingGroupMixedInstancesPolicyArgs>;
    newInstancesProtectedFromScaleIn?: pulumi.Input<boolean>;
    notificationConfigurations?: pulumi.Input<pulumi.Input<inputs.autoscaling.AutoScalingGroupNotificationConfigurationArgs>[]>;
    placementGroup?: pulumi.Input<string>;
    serviceLinkedRoleARN?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.autoscaling.AutoScalingGroupTagPropertyArgs>[]>;
    targetGroupARNs?: pulumi.Input<pulumi.Input<string>[]>;
    terminationPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    vPCZoneIdentifier?: pulumi.Input<pulumi.Input<string>[]>;
}
