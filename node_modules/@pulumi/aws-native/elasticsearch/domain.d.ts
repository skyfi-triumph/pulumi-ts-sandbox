import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::Elasticsearch::Domain
 *
 * @deprecated Domain is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Domain;
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Domain;
    readonly accessPolicies: pulumi.Output<any | undefined>;
    readonly advancedOptions: pulumi.Output<any | undefined>;
    readonly advancedSecurityOptions: pulumi.Output<outputs.elasticsearch.DomainAdvancedSecurityOptionsInput | undefined>;
    readonly arn: pulumi.Output<string>;
    readonly cognitoOptions: pulumi.Output<outputs.elasticsearch.DomainCognitoOptions | undefined>;
    readonly domainArn: pulumi.Output<string>;
    readonly domainEndpoint: pulumi.Output<string>;
    readonly domainEndpointOptions: pulumi.Output<outputs.elasticsearch.DomainEndpointOptions | undefined>;
    readonly domainName: pulumi.Output<string | undefined>;
    readonly eBSOptions: pulumi.Output<outputs.elasticsearch.DomainEBSOptions | undefined>;
    readonly elasticsearchClusterConfig: pulumi.Output<outputs.elasticsearch.DomainElasticsearchClusterConfig | undefined>;
    readonly elasticsearchVersion: pulumi.Output<string | undefined>;
    readonly encryptionAtRestOptions: pulumi.Output<outputs.elasticsearch.DomainEncryptionAtRestOptions | undefined>;
    readonly logPublishingOptions: pulumi.Output<any | undefined>;
    readonly nodeToNodeEncryptionOptions: pulumi.Output<outputs.elasticsearch.DomainNodeToNodeEncryptionOptions | undefined>;
    readonly snapshotOptions: pulumi.Output<outputs.elasticsearch.DomainSnapshotOptions | undefined>;
    readonly tags: pulumi.Output<outputs.elasticsearch.DomainTag[] | undefined>;
    readonly vPCOptions: pulumi.Output<outputs.elasticsearch.DomainVPCOptions | undefined>;
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Domain is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: DomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    accessPolicies?: any;
    advancedOptions?: any;
    advancedSecurityOptions?: pulumi.Input<inputs.elasticsearch.DomainAdvancedSecurityOptionsInputArgs>;
    cognitoOptions?: pulumi.Input<inputs.elasticsearch.DomainCognitoOptionsArgs>;
    domainEndpointOptions?: pulumi.Input<inputs.elasticsearch.DomainEndpointOptionsArgs>;
    domainName?: pulumi.Input<string>;
    eBSOptions?: pulumi.Input<inputs.elasticsearch.DomainEBSOptionsArgs>;
    elasticsearchClusterConfig?: pulumi.Input<inputs.elasticsearch.DomainElasticsearchClusterConfigArgs>;
    elasticsearchVersion?: pulumi.Input<string>;
    encryptionAtRestOptions?: pulumi.Input<inputs.elasticsearch.DomainEncryptionAtRestOptionsArgs>;
    logPublishingOptions?: any;
    nodeToNodeEncryptionOptions?: pulumi.Input<inputs.elasticsearch.DomainNodeToNodeEncryptionOptionsArgs>;
    snapshotOptions?: pulumi.Input<inputs.elasticsearch.DomainSnapshotOptionsArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticsearch.DomainTagArgs>[]>;
    vPCOptions?: pulumi.Input<inputs.elasticsearch.DomainVPCOptionsArgs>;
}
