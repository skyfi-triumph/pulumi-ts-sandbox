import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * This resource schema represents the Profiling Group resource in the Amazon CodeGuru Profiler service.
 */
export declare class ProfilingGroup extends pulumi.CustomResource {
    /**
     * Get an existing ProfilingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ProfilingGroup;
    /**
     * Returns true if the given object is an instance of ProfilingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProfilingGroup;
    /**
     * The agent permissions attached to this profiling group.
     */
    readonly agentPermissions: pulumi.Output<outputs.codeguruprofiler.AgentPermissionsProperties | undefined>;
    /**
     * Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency
     */
    readonly anomalyDetectionNotificationConfiguration: pulumi.Output<outputs.codeguruprofiler.ProfilingGroupChannel[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the specified profiling group.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The compute platform of the profiling group.
     */
    readonly computePlatform: pulumi.Output<enums.codeguruprofiler.ProfilingGroupComputePlatform | undefined>;
    /**
     * The name of the profiling group.
     */
    readonly profilingGroupName: pulumi.Output<string>;
    /**
     * The tags associated with a profiling group.
     */
    readonly tags: pulumi.Output<outputs.codeguruprofiler.ProfilingGroupTag[] | undefined>;
    /**
     * Create a ProfilingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProfilingGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ProfilingGroup resource.
 */
export interface ProfilingGroupArgs {
    /**
     * The agent permissions attached to this profiling group.
     */
    agentPermissions?: pulumi.Input<inputs.codeguruprofiler.AgentPermissionsPropertiesArgs>;
    /**
     * Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency
     */
    anomalyDetectionNotificationConfiguration?: pulumi.Input<pulumi.Input<inputs.codeguruprofiler.ProfilingGroupChannelArgs>[]>;
    /**
     * The compute platform of the profiling group.
     */
    computePlatform?: pulumi.Input<enums.codeguruprofiler.ProfilingGroupComputePlatform>;
    /**
     * The name of the profiling group.
     */
    profilingGroupName?: pulumi.Input<string>;
    /**
     * The tags associated with a profiling group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.codeguruprofiler.ProfilingGroupTagArgs>[]>;
}
