"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./accountAuditConfiguration"), exports);
__exportStar(require("./authorizer"), exports);
__exportStar(require("./certificate"), exports);
__exportStar(require("./customMetric"), exports);
__exportStar(require("./dimension"), exports);
__exportStar(require("./domainConfiguration"), exports);
__exportStar(require("./fleetMetric"), exports);
__exportStar(require("./jobTemplate"), exports);
__exportStar(require("./logging"), exports);
__exportStar(require("./mitigationAction"), exports);
__exportStar(require("./policy"), exports);
__exportStar(require("./policyPrincipalAttachment"), exports);
__exportStar(require("./provisioningTemplate"), exports);
__exportStar(require("./resourceSpecificLogging"), exports);
__exportStar(require("./scheduledAudit"), exports);
__exportStar(require("./securityProfile"), exports);
__exportStar(require("./thing"), exports);
__exportStar(require("./thingPrincipalAttachment"), exports);
__exportStar(require("./topicRule"), exports);
__exportStar(require("./topicRuleDestination"), exports);
// Export enums:
__exportStar(require("../types/enums/iot"), exports);
// Import resources to register:
const accountAuditConfiguration_1 = require("./accountAuditConfiguration");
const authorizer_1 = require("./authorizer");
const certificate_1 = require("./certificate");
const customMetric_1 = require("./customMetric");
const dimension_1 = require("./dimension");
const domainConfiguration_1 = require("./domainConfiguration");
const fleetMetric_1 = require("./fleetMetric");
const jobTemplate_1 = require("./jobTemplate");
const logging_1 = require("./logging");
const mitigationAction_1 = require("./mitigationAction");
const policy_1 = require("./policy");
const policyPrincipalAttachment_1 = require("./policyPrincipalAttachment");
const provisioningTemplate_1 = require("./provisioningTemplate");
const resourceSpecificLogging_1 = require("./resourceSpecificLogging");
const scheduledAudit_1 = require("./scheduledAudit");
const securityProfile_1 = require("./securityProfile");
const thing_1 = require("./thing");
const thingPrincipalAttachment_1 = require("./thingPrincipalAttachment");
const topicRule_1 = require("./topicRule");
const topicRuleDestination_1 = require("./topicRuleDestination");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:iot:AccountAuditConfiguration":
                return new accountAuditConfiguration_1.AccountAuditConfiguration(name, undefined, { urn });
            case "aws-native:iot:Authorizer":
                return new authorizer_1.Authorizer(name, undefined, { urn });
            case "aws-native:iot:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "aws-native:iot:CustomMetric":
                return new customMetric_1.CustomMetric(name, undefined, { urn });
            case "aws-native:iot:Dimension":
                return new dimension_1.Dimension(name, undefined, { urn });
            case "aws-native:iot:DomainConfiguration":
                return new domainConfiguration_1.DomainConfiguration(name, undefined, { urn });
            case "aws-native:iot:FleetMetric":
                return new fleetMetric_1.FleetMetric(name, undefined, { urn });
            case "aws-native:iot:JobTemplate":
                return new jobTemplate_1.JobTemplate(name, undefined, { urn });
            case "aws-native:iot:Logging":
                return new logging_1.Logging(name, undefined, { urn });
            case "aws-native:iot:MitigationAction":
                return new mitigationAction_1.MitigationAction(name, undefined, { urn });
            case "aws-native:iot:Policy":
                return new policy_1.Policy(name, undefined, { urn });
            case "aws-native:iot:PolicyPrincipalAttachment":
                return new policyPrincipalAttachment_1.PolicyPrincipalAttachment(name, undefined, { urn });
            case "aws-native:iot:ProvisioningTemplate":
                return new provisioningTemplate_1.ProvisioningTemplate(name, undefined, { urn });
            case "aws-native:iot:ResourceSpecificLogging":
                return new resourceSpecificLogging_1.ResourceSpecificLogging(name, undefined, { urn });
            case "aws-native:iot:ScheduledAudit":
                return new scheduledAudit_1.ScheduledAudit(name, undefined, { urn });
            case "aws-native:iot:SecurityProfile":
                return new securityProfile_1.SecurityProfile(name, undefined, { urn });
            case "aws-native:iot:Thing":
                return new thing_1.Thing(name, undefined, { urn });
            case "aws-native:iot:ThingPrincipalAttachment":
                return new thingPrincipalAttachment_1.ThingPrincipalAttachment(name, undefined, { urn });
            case "aws-native:iot:TopicRule":
                return new topicRule_1.TopicRule(name, undefined, { urn });
            case "aws-native:iot:TopicRuleDestination":
                return new topicRuleDestination_1.TopicRuleDestination(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "iot", _module);
//# sourceMappingURL=index.js.map