import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * An entity that defines the scope of audit evidence collected by AWS Audit Manager.
 */
export declare class Assessment extends pulumi.CustomResource {
    /**
     * Get an existing Assessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Assessment;
    /**
     * Returns true if the given object is an instance of Assessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Assessment;
    readonly arn: pulumi.Output<string>;
    readonly assessmentId: pulumi.Output<string>;
    readonly assessmentReportsDestination: pulumi.Output<outputs.auditmanager.AssessmentReportsDestination | undefined>;
    readonly awsAccount: pulumi.Output<outputs.auditmanager.AssessmentAWSAccount | undefined>;
    readonly creationTime: pulumi.Output<number>;
    /**
     * The list of delegations.
     */
    readonly delegations: pulumi.Output<outputs.auditmanager.AssessmentDelegation[]>;
    readonly description: pulumi.Output<string | undefined>;
    readonly frameworkId: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The list of roles for the specified assessment.
     */
    readonly roles: pulumi.Output<outputs.auditmanager.AssessmentRole[] | undefined>;
    readonly scope: pulumi.Output<outputs.auditmanager.AssessmentScope | undefined>;
    readonly status: pulumi.Output<enums.auditmanager.AssessmentStatus | undefined>;
    /**
     * The tags associated with the assessment.
     */
    readonly tags: pulumi.Output<outputs.auditmanager.AssessmentTag[] | undefined>;
    /**
     * Create a Assessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Assessment resource.
 */
export interface AssessmentArgs {
    assessmentReportsDestination?: pulumi.Input<inputs.auditmanager.AssessmentReportsDestinationArgs>;
    awsAccount?: pulumi.Input<inputs.auditmanager.AssessmentAWSAccountArgs>;
    description?: pulumi.Input<string>;
    frameworkId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The list of roles for the specified assessment.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentRoleArgs>[]>;
    scope?: pulumi.Input<inputs.auditmanager.AssessmentScopeArgs>;
    status?: pulumi.Input<enums.auditmanager.AssessmentStatus>;
    /**
     * The tags associated with the assessment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentTagArgs>[]>;
}
