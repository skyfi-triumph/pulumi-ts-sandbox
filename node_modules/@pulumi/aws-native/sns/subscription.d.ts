import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::SNS::Subscription
 *
 * @deprecated Subscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Subscription extends pulumi.CustomResource {
    /**
     * Get an existing Subscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Subscription;
    /**
     * Returns true if the given object is an instance of Subscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Subscription;
    readonly deliveryPolicy: pulumi.Output<any | undefined>;
    readonly endpoint: pulumi.Output<string | undefined>;
    readonly filterPolicy: pulumi.Output<any | undefined>;
    readonly protocol: pulumi.Output<string>;
    readonly rawMessageDelivery: pulumi.Output<boolean | undefined>;
    readonly redrivePolicy: pulumi.Output<any | undefined>;
    readonly region: pulumi.Output<string | undefined>;
    readonly subscriptionRoleArn: pulumi.Output<string | undefined>;
    readonly topicArn: pulumi.Output<string>;
    /**
     * Create a Subscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Subscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: SubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Subscription resource.
 */
export interface SubscriptionArgs {
    deliveryPolicy?: any;
    endpoint?: pulumi.Input<string>;
    filterPolicy?: any;
    protocol: pulumi.Input<string>;
    rawMessageDelivery?: pulumi.Input<boolean>;
    redrivePolicy?: any;
    region?: pulumi.Input<string>;
    subscriptionRoleArn?: pulumi.Input<string>;
    topicArn: pulumi.Input<string>;
}
