import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * An Amazon Lookout for Metrics Detector
 */
export declare class AnomalyDetector extends pulumi.CustomResource {
    /**
     * Get an existing AnomalyDetector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnomalyDetector;
    /**
     * Returns true if the given object is an instance of AnomalyDetector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AnomalyDetector;
    /**
     * Configuration options for the AnomalyDetector
     */
    readonly anomalyDetectorConfig: pulumi.Output<outputs.lookoutmetrics.AnomalyDetectorConfig>;
    /**
     * A description for the AnomalyDetector.
     */
    readonly anomalyDetectorDescription: pulumi.Output<string | undefined>;
    /**
     * Name for the Amazon Lookout for Metrics Anomaly Detector
     */
    readonly anomalyDetectorName: pulumi.Output<string | undefined>;
    readonly arn: pulumi.Output<string>;
    /**
     * KMS key used to encrypt the AnomalyDetector data
     */
    readonly kmsKeyArn: pulumi.Output<string | undefined>;
    /**
     * List of metric sets for anomaly detection
     */
    readonly metricSetList: pulumi.Output<outputs.lookoutmetrics.AnomalyDetectorMetricSet[]>;
    /**
     * Create a AnomalyDetector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnomalyDetectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AnomalyDetector resource.
 */
export interface AnomalyDetectorArgs {
    /**
     * Configuration options for the AnomalyDetector
     */
    anomalyDetectorConfig: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorConfigArgs>;
    /**
     * A description for the AnomalyDetector.
     */
    anomalyDetectorDescription?: pulumi.Input<string>;
    /**
     * Name for the Amazon Lookout for Metrics Anomaly Detector
     */
    anomalyDetectorName?: pulumi.Input<string>;
    /**
     * KMS key used to encrypt the AnomalyDetector data
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * List of metric sets for anomaly detection
     */
    metricSetList: pulumi.Input<pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorMetricSetArgs>[]>;
}
