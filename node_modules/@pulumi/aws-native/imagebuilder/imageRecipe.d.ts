import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource schema for AWS::ImageBuilder::ImageRecipe
 */
export declare class ImageRecipe extends pulumi.CustomResource {
    /**
     * Get an existing ImageRecipe resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ImageRecipe;
    /**
     * Returns true if the given object is an instance of ImageRecipe.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ImageRecipe;
    /**
     * Specify additional settings and launch scripts for your build instances.
     */
    readonly additionalInstanceConfiguration: pulumi.Output<outputs.imagebuilder.ImageRecipeAdditionalInstanceConfiguration | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the image recipe.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The block device mappings to apply when creating images from this recipe.
     */
    readonly blockDeviceMappings: pulumi.Output<outputs.imagebuilder.ImageRecipeInstanceBlockDeviceMapping[] | undefined>;
    /**
     * The components of the image recipe.
     */
    readonly components: pulumi.Output<outputs.imagebuilder.ImageRecipeComponentConfiguration[]>;
    /**
     * The description of the image recipe.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the image recipe.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The parent image of the image recipe.
     */
    readonly parentImage: pulumi.Output<string>;
    /**
     * The tags of the image recipe.
     */
    readonly tags: pulumi.Output<any | undefined>;
    /**
     * The version of the image recipe.
     */
    readonly version: pulumi.Output<string>;
    /**
     * The working directory to be used during build and test workflows.
     */
    readonly workingDirectory: pulumi.Output<string | undefined>;
    /**
     * Create a ImageRecipe resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageRecipeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ImageRecipe resource.
 */
export interface ImageRecipeArgs {
    /**
     * Specify additional settings and launch scripts for your build instances.
     */
    additionalInstanceConfiguration?: pulumi.Input<inputs.imagebuilder.ImageRecipeAdditionalInstanceConfigurationArgs>;
    /**
     * The block device mappings to apply when creating images from this recipe.
     */
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.imagebuilder.ImageRecipeInstanceBlockDeviceMappingArgs>[]>;
    /**
     * The components of the image recipe.
     */
    components: pulumi.Input<pulumi.Input<inputs.imagebuilder.ImageRecipeComponentConfigurationArgs>[]>;
    /**
     * The description of the image recipe.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the image recipe.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent image of the image recipe.
     */
    parentImage: pulumi.Input<string>;
    /**
     * The tags of the image recipe.
     */
    tags?: any;
    /**
     * The version of the image recipe.
     */
    version: pulumi.Input<string>;
    /**
     * The working directory to be used during build and test workflows.
     */
    workingDirectory?: pulumi.Input<string>;
}
