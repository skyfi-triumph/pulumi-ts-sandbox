import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for AWS::ElasticBeanstalk::Environment
 *
 * @deprecated Environment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    readonly applicationName: pulumi.Output<string>;
    readonly cNAMEPrefix: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    readonly endpointURL: pulumi.Output<string>;
    readonly environmentName: pulumi.Output<string | undefined>;
    readonly operationsRole: pulumi.Output<string | undefined>;
    readonly optionSettings: pulumi.Output<outputs.elasticbeanstalk.EnvironmentOptionSetting[] | undefined>;
    readonly platformArn: pulumi.Output<string | undefined>;
    readonly solutionStackName: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.elasticbeanstalk.EnvironmentTag[] | undefined>;
    readonly templateName: pulumi.Output<string | undefined>;
    readonly tier: pulumi.Output<outputs.elasticbeanstalk.EnvironmentTier | undefined>;
    readonly versionLabel: pulumi.Output<string | undefined>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Environment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    applicationName: pulumi.Input<string>;
    cNAMEPrefix?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    environmentName?: pulumi.Input<string>;
    operationsRole?: pulumi.Input<string>;
    optionSettings?: pulumi.Input<pulumi.Input<inputs.elasticbeanstalk.EnvironmentOptionSettingArgs>[]>;
    platformArn?: pulumi.Input<string>;
    solutionStackName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticbeanstalk.EnvironmentTagArgs>[]>;
    templateName?: pulumi.Input<string>;
    tier?: pulumi.Input<inputs.elasticbeanstalk.EnvironmentTierArgs>;
    versionLabel?: pulumi.Input<string>;
}
