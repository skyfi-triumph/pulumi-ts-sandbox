"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Firewall = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource type definition for AWS::NetworkFirewall::Firewall
 */
class Firewall extends pulumi.CustomResource {
    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.firewallPolicyArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallPolicyArn'");
            }
            if ((!args || args.subnetMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetMappings'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            inputs["deleteProtection"] = args ? args.deleteProtection : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["firewallName"] = args ? args.firewallName : undefined;
            inputs["firewallPolicyArn"] = args ? args.firewallPolicyArn : undefined;
            inputs["firewallPolicyChangeProtection"] = args ? args.firewallPolicyChangeProtection : undefined;
            inputs["subnetChangeProtection"] = args ? args.subnetChangeProtection : undefined;
            inputs["subnetMappings"] = args ? args.subnetMappings : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["endpointIds"] = undefined /*out*/;
            inputs["firewallArn"] = undefined /*out*/;
            inputs["firewallId"] = undefined /*out*/;
        }
        else {
            inputs["deleteProtection"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["endpointIds"] = undefined /*out*/;
            inputs["firewallArn"] = undefined /*out*/;
            inputs["firewallId"] = undefined /*out*/;
            inputs["firewallName"] = undefined /*out*/;
            inputs["firewallPolicyArn"] = undefined /*out*/;
            inputs["firewallPolicyChangeProtection"] = undefined /*out*/;
            inputs["subnetChangeProtection"] = undefined /*out*/;
            inputs["subnetMappings"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Firewall.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Firewall(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }
}
exports.Firewall = Firewall;
/** @internal */
Firewall.__pulumiType = 'aws-native:networkfirewall:Firewall';
//# sourceMappingURL=firewall.js.map