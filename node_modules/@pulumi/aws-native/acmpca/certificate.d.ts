import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A certificate issued via a private certificate authority
 */
export declare class Certificate extends pulumi.CustomResource {
    /**
     * Get an existing Certificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Certificate;
    /**
     * Returns true if the given object is an instance of Certificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Certificate;
    /**
     * These are fields to be overridden in a certificate at the time of issuance. These requires an API_Passthrough template be used or they will be ignored.
     */
    readonly apiPassthrough: pulumi.Output<outputs.acmpca.CertificateApiPassthrough | undefined>;
    /**
     * The ARN of the issued certificate.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The issued certificate in base 64 PEM-encoded format.
     */
    readonly certificate: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for the private CA to issue the certificate.
     */
    readonly certificateAuthorityArn: pulumi.Output<string>;
    /**
     * The certificate signing request (CSR) for the Certificate.
     */
    readonly certificateSigningRequest: pulumi.Output<string>;
    /**
     * The name of the algorithm that will be used to sign the Certificate.
     */
    readonly signingAlgorithm: pulumi.Output<string>;
    /**
     * Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the EndEntityCertificate/V1 template.
     */
    readonly templateArn: pulumi.Output<string | undefined>;
    /**
     * The time before which the Certificate will be valid.
     */
    readonly validity: pulumi.Output<outputs.acmpca.CertificateValidity>;
    /**
     * The time after which the Certificate will be valid.
     */
    readonly validityNotBefore: pulumi.Output<outputs.acmpca.CertificateValidity | undefined>;
    /**
     * Create a Certificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Certificate resource.
 */
export interface CertificateArgs {
    /**
     * These are fields to be overridden in a certificate at the time of issuance. These requires an API_Passthrough template be used or they will be ignored.
     */
    apiPassthrough?: pulumi.Input<inputs.acmpca.CertificateApiPassthroughArgs>;
    /**
     * The Amazon Resource Name (ARN) for the private CA to issue the certificate.
     */
    certificateAuthorityArn: pulumi.Input<string>;
    /**
     * The certificate signing request (CSR) for the Certificate.
     */
    certificateSigningRequest: pulumi.Input<string>;
    /**
     * The name of the algorithm that will be used to sign the Certificate.
     */
    signingAlgorithm: pulumi.Input<string>;
    /**
     * Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the EndEntityCertificate/V1 template.
     */
    templateArn?: pulumi.Input<string>;
    /**
     * The time before which the Certificate will be valid.
     */
    validity: pulumi.Input<inputs.acmpca.CertificateValidityArgs>;
    /**
     * The time after which the Certificate will be valid.
     */
    validityNotBefore?: pulumi.Input<inputs.acmpca.CertificateValidityArgs>;
}
