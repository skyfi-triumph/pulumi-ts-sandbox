import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::CloudWatch::CompositeAlarm type specifies an alarm which aggregates the states of other Alarms (Metric or Composite Alarms) as defined by the AlarmRule expression
 */
export declare class CompositeAlarm extends pulumi.CustomResource {
    /**
     * Get an existing CompositeAlarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CompositeAlarm;
    /**
     * Returns true if the given object is an instance of CompositeAlarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CompositeAlarm;
    /**
     * Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
     */
    readonly actionsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
     */
    readonly alarmActions: pulumi.Output<string[] | undefined>;
    /**
     * The description of the alarm
     */
    readonly alarmDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the Composite Alarm
     */
    readonly alarmName: pulumi.Output<string>;
    /**
     * Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
     */
    readonly alarmRule: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the alarm
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
     */
    readonly insufficientDataActions: pulumi.Output<string[] | undefined>;
    /**
     * The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
     */
    readonly oKActions: pulumi.Output<string[] | undefined>;
    /**
     * Create a CompositeAlarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CompositeAlarmArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CompositeAlarm resource.
 */
export interface CompositeAlarmArgs {
    /**
     * Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
     */
    actionsEnabled?: pulumi.Input<boolean>;
    /**
     * The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
     */
    alarmActions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the alarm
     */
    alarmDescription?: pulumi.Input<string>;
    /**
     * The name of the Composite Alarm
     */
    alarmName: pulumi.Input<string>;
    /**
     * Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
     */
    alarmRule: pulumi.Input<string>;
    /**
     * The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
     */
    insufficientDataActions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
     */
    oKActions?: pulumi.Input<pulumi.Input<string>[]>;
}
