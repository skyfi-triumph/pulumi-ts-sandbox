import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource Type definition for Metric Stream
 */
export declare class MetricStream extends pulumi.CustomResource {
    /**
     * Get an existing MetricStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MetricStream;
    /**
     * Returns true if the given object is an instance of MetricStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MetricStream;
    /**
     * Amazon Resource Name of the metric stream.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The date of creation of the metric stream.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     */
    readonly excludeFilters: pulumi.Output<outputs.cloudwatch.MetricStreamFilter[] | undefined>;
    /**
     * The ARN of the Kinesis Firehose where to stream the data.
     */
    readonly firehoseArn: pulumi.Output<string>;
    /**
     * Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     */
    readonly includeFilters: pulumi.Output<outputs.cloudwatch.MetricStreamFilter[] | undefined>;
    /**
     * The date of the last update of the metric stream.
     */
    readonly lastUpdateDate: pulumi.Output<string>;
    /**
     * Name of the metric stream.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The output format of the data streamed to the Kinesis Firehose.
     */
    readonly outputFormat: pulumi.Output<string>;
    /**
     * The ARN of the role that provides access to the Kinesis Firehose.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * Displays the state of the Metric Stream.
     */
    readonly state: pulumi.Output<string>;
    /**
     * A set of tags to assign to the delivery stream.
     */
    readonly tags: pulumi.Output<outputs.cloudwatch.MetricStreamTag[] | undefined>;
    /**
     * Create a MetricStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetricStreamArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MetricStream resource.
 */
export interface MetricStreamArgs {
    /**
     * Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     */
    excludeFilters?: pulumi.Input<pulumi.Input<inputs.cloudwatch.MetricStreamFilterArgs>[]>;
    /**
     * The ARN of the Kinesis Firehose where to stream the data.
     */
    firehoseArn: pulumi.Input<string>;
    /**
     * Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     */
    includeFilters?: pulumi.Input<pulumi.Input<inputs.cloudwatch.MetricStreamFilterArgs>[]>;
    /**
     * Name of the metric stream.
     */
    name?: pulumi.Input<string>;
    /**
     * The output format of the data streamed to the Kinesis Firehose.
     */
    outputFormat: pulumi.Input<string>;
    /**
     * The ARN of the role that provides access to the Kinesis Firehose.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A set of tags to assign to the delivery stream.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cloudwatch.MetricStreamTagArgs>[]>;
}
