import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Schema for the AWS Route53 Recovery Readiness ResourceSet Resource and API.
 */
export declare class ResourceSet extends pulumi.CustomResource {
    /**
     * Get an existing ResourceSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceSet;
    /**
     * Returns true if the given object is an instance of ResourceSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceSet;
    /**
     * The Amazon Resource Name (ARN) of the resource set.
     */
    readonly resourceSetArn: pulumi.Output<string>;
    /**
     * The name of the resource set to create.
     */
    readonly resourceSetName: pulumi.Output<string>;
    /**
     * The resource type of the resources in the resource set. Enter one of the following values for resource type:
     *
     * AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
     */
    readonly resourceSetType: pulumi.Output<string>;
    /**
     * A list of resource objects in the resource set.
     */
    readonly resources: pulumi.Output<outputs.route53recoveryreadiness.ResourceSetResource[]>;
    /**
     * A tag to associate with the parameters for a resource set.
     */
    readonly tags: pulumi.Output<outputs.route53recoveryreadiness.ResourceSetTag[] | undefined>;
    /**
     * Create a ResourceSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResourceSet resource.
 */
export interface ResourceSetArgs {
    /**
     * The name of the resource set to create.
     */
    resourceSetName?: pulumi.Input<string>;
    /**
     * The resource type of the resources in the resource set. Enter one of the following values for resource type:
     *
     * AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
     */
    resourceSetType: pulumi.Input<string>;
    /**
     * A list of resource objects in the resource set.
     */
    resources: pulumi.Input<pulumi.Input<inputs.route53recoveryreadiness.ResourceSetResourceArgs>[]>;
    /**
     * A tag to associate with the parameters for a resource set.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.route53recoveryreadiness.ResourceSetTagArgs>[]>;
}
