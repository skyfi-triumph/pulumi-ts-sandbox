import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Resource for Greengrass component version.
 */
export declare class ComponentVersion extends pulumi.CustomResource {
    /**
     * Get an existing ComponentVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ComponentVersion;
    /**
     * Returns true if the given object is an instance of ComponentVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ComponentVersion;
    readonly arn: pulumi.Output<string>;
    readonly componentName: pulumi.Output<string>;
    readonly componentVersion: pulumi.Output<string>;
    readonly inlineRecipe: pulumi.Output<string | undefined>;
    readonly lambdaFunction: pulumi.Output<outputs.greengrassv2.ComponentVersionLambdaFunctionRecipeSource | undefined>;
    readonly tags: pulumi.Output<any | undefined>;
    /**
     * Create a ComponentVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComponentVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ComponentVersion resource.
 */
export interface ComponentVersionArgs {
    inlineRecipe?: pulumi.Input<string>;
    lambdaFunction?: pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaFunctionRecipeSourceArgs>;
    tags?: any;
}
