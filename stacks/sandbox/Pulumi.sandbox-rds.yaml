encryptionsalt: v1:itJsl9JCy1I=:v1:ajExxvENfHnbsAvV:D2rLCotVtzKi3D6r17l+7b27Ovtd4w==
config:
  stack:data:
    auroraCommon:
      cluster:
        dbClusterParameterGroup:
          create: true
          family: aurora-postgresql14
          name: aurora-cluster
        tags:
          environment: sandbox
      instance:
        dbParameterGroup:
          create: true
          family: aurora-postgresql14
          name: aurora-instance
      subnetGroups:
      - create: true
        name: aurora
        region: us-east-1
        subnetIds:
        - subnet-0abb32fbb8cfa7e6a
        - subnet-0ca824be5dc4c7a82
        - subnet-0d12771ce933cbe12
    auroraDefaults:
      cluster:
        allowMajorVersionUpgrade: true
        availabilityZones:
        - us-east-1a
        - us-east-1b
        - us-east-1c
        backupRetentionPeriod: 30
        dbSubnetGroupName: aurora
        enabledCloudwatchLogsExports:
        - postgresql
        engine: aurora-postgresql
        engineMode: provisioned
        engineVersion: "14.4"
        skipFinalSnapshot: true
        storageEncrypted: true
        vpcSecurityGroup:
          create: true
          egress:
          - cidrBlocks:
            - 0.0.0.0/0
            fromPort: 5432
            protocol: All
            toPort: 5432
          ingress:
          - cidrBlocks:
            - 0.0.0.0/0
            fromPort: 5432
            protocol: TCP
            toPort: 5432
          - fromPort: 0
            protocol: TCP
            self: true
            toPort: 65535
          vpcId: vpc-0c865c7c03363d5c3
      instance:
        autoMinorVersionUpgrade: true
        class: db.serverless
        count: 1
        # monitoringInterval: 30
        # monitoringRoleArn: arn:aws:iam::768334183534:role/rds-monitoring-role
        performanceInsightsEnabled: true
        publiclyAccessible: false
    clusters:
      sandbox-server:
        dbConfig:
          databaseName: postgres
          masterPassword: password
          masterUsername: postgres
          secret:
            rds:
              create: true
              engine: postgres
        name: sandbox
        region: us-east-1
        serverlessV2ScalingConfiguration:
          maxCapacity: 16
          minCapacity: 02
  stack:providers:
    aws:
    - defaultTags:
        tags:
          environment: sandbox
      name: aws-us-east-1-provider
      region: us-east-1